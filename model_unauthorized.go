/*
Alephium API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.4.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package alephium

import (
	"encoding/json"
)

// Unauthorized struct for Unauthorized
type Unauthorized struct {
	Detail string `json:"detail"`
}

// NewUnauthorized instantiates a new Unauthorized object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUnauthorized(detail string) *Unauthorized {
	this := Unauthorized{}
	this.Detail = detail
	return &this
}

// NewUnauthorizedWithDefaults instantiates a new Unauthorized object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUnauthorizedWithDefaults() *Unauthorized {
	this := Unauthorized{}
	return &this
}

// GetDetail returns the Detail field value
func (o *Unauthorized) GetDetail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Detail
}

// GetDetailOk returns a tuple with the Detail field value
// and a boolean to check if the value has been set.
func (o *Unauthorized) GetDetailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Detail, true
}

// SetDetail sets field value
func (o *Unauthorized) SetDetail(v string) {
	o.Detail = v
}

func (o Unauthorized) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["detail"] = o.Detail
	}
	return json.Marshal(toSerialize)
}

type NullableUnauthorized struct {
	value *Unauthorized
	isSet bool
}

func (v NullableUnauthorized) Get() *Unauthorized {
	return v.value
}

func (v *NullableUnauthorized) Set(val *Unauthorized) {
	v.value = val
	v.isSet = true
}

func (v NullableUnauthorized) IsSet() bool {
	return v.isSet
}

func (v *NullableUnauthorized) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUnauthorized(val *Unauthorized) *NullableUnauthorized {
	return &NullableUnauthorized{value: val, isSet: true}
}

func (v NullableUnauthorized) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUnauthorized) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


