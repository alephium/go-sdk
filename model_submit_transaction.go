/*
Alephium API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.4.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package alephium

import (
	"encoding/json"
)

// SubmitTransaction struct for SubmitTransaction
type SubmitTransaction struct {
	UnsignedTx string `json:"unsignedTx"`
	Signature string `json:"signature"`
}

// NewSubmitTransaction instantiates a new SubmitTransaction object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSubmitTransaction(unsignedTx string, signature string) *SubmitTransaction {
	this := SubmitTransaction{}
	this.UnsignedTx = unsignedTx
	this.Signature = signature
	return &this
}

// NewSubmitTransactionWithDefaults instantiates a new SubmitTransaction object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSubmitTransactionWithDefaults() *SubmitTransaction {
	this := SubmitTransaction{}
	return &this
}

// GetUnsignedTx returns the UnsignedTx field value
func (o *SubmitTransaction) GetUnsignedTx() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UnsignedTx
}

// GetUnsignedTxOk returns a tuple with the UnsignedTx field value
// and a boolean to check if the value has been set.
func (o *SubmitTransaction) GetUnsignedTxOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UnsignedTx, true
}

// SetUnsignedTx sets field value
func (o *SubmitTransaction) SetUnsignedTx(v string) {
	o.UnsignedTx = v
}

// GetSignature returns the Signature field value
func (o *SubmitTransaction) GetSignature() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Signature
}

// GetSignatureOk returns a tuple with the Signature field value
// and a boolean to check if the value has been set.
func (o *SubmitTransaction) GetSignatureOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Signature, true
}

// SetSignature sets field value
func (o *SubmitTransaction) SetSignature(v string) {
	o.Signature = v
}

func (o SubmitTransaction) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["unsignedTx"] = o.UnsignedTx
	}
	if true {
		toSerialize["signature"] = o.Signature
	}
	return json.Marshal(toSerialize)
}

type NullableSubmitTransaction struct {
	value *SubmitTransaction
	isSet bool
}

func (v NullableSubmitTransaction) Get() *SubmitTransaction {
	return v.value
}

func (v *NullableSubmitTransaction) Set(val *SubmitTransaction) {
	v.value = val
	v.isSet = true
}

func (v NullableSubmitTransaction) IsSet() bool {
	return v.isSet
}

func (v *NullableSubmitTransaction) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSubmitTransaction(val *SubmitTransaction) *NullableSubmitTransaction {
	return &NullableSubmitTransaction{value: val, isSet: true}
}

func (v NullableSubmitTransaction) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSubmitTransaction) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


