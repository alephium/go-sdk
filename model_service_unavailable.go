/*
Alephium API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.7.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package alephium

import (
	"encoding/json"
)

// checks if the ServiceUnavailable type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ServiceUnavailable{}

// ServiceUnavailable struct for ServiceUnavailable
type ServiceUnavailable struct {
	Detail string `json:"detail"`
}

// NewServiceUnavailable instantiates a new ServiceUnavailable object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServiceUnavailable(detail string) *ServiceUnavailable {
	this := ServiceUnavailable{}
	this.Detail = detail
	return &this
}

// NewServiceUnavailableWithDefaults instantiates a new ServiceUnavailable object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServiceUnavailableWithDefaults() *ServiceUnavailable {
	this := ServiceUnavailable{}
	return &this
}

// GetDetail returns the Detail field value
func (o *ServiceUnavailable) GetDetail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Detail
}

// GetDetailOk returns a tuple with the Detail field value
// and a boolean to check if the value has been set.
func (o *ServiceUnavailable) GetDetailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Detail, true
}

// SetDetail sets field value
func (o *ServiceUnavailable) SetDetail(v string) {
	o.Detail = v
}

func (o ServiceUnavailable) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ServiceUnavailable) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["detail"] = o.Detail
	return toSerialize, nil
}

type NullableServiceUnavailable struct {
	value *ServiceUnavailable
	isSet bool
}

func (v NullableServiceUnavailable) Get() *ServiceUnavailable {
	return v.value
}

func (v *NullableServiceUnavailable) Set(val *ServiceUnavailable) {
	v.value = val
	v.isSet = true
}

func (v NullableServiceUnavailable) IsSet() bool {
	return v.isSet
}

func (v *NullableServiceUnavailable) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServiceUnavailable(val *ServiceUnavailable) *NullableServiceUnavailable {
	return &NullableServiceUnavailable{value: val, isSet: true}
}

func (v NullableServiceUnavailable) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServiceUnavailable) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


