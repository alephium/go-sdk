/*
Alephium API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.4.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package alephium

import (
	"encoding/json"
)

// RevealMnemonicResult struct for RevealMnemonicResult
type RevealMnemonicResult struct {
	Mnemonic string `json:"mnemonic"`
}

// NewRevealMnemonicResult instantiates a new RevealMnemonicResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRevealMnemonicResult(mnemonic string) *RevealMnemonicResult {
	this := RevealMnemonicResult{}
	this.Mnemonic = mnemonic
	return &this
}

// NewRevealMnemonicResultWithDefaults instantiates a new RevealMnemonicResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRevealMnemonicResultWithDefaults() *RevealMnemonicResult {
	this := RevealMnemonicResult{}
	return &this
}

// GetMnemonic returns the Mnemonic field value
func (o *RevealMnemonicResult) GetMnemonic() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Mnemonic
}

// GetMnemonicOk returns a tuple with the Mnemonic field value
// and a boolean to check if the value has been set.
func (o *RevealMnemonicResult) GetMnemonicOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Mnemonic, true
}

// SetMnemonic sets field value
func (o *RevealMnemonicResult) SetMnemonic(v string) {
	o.Mnemonic = v
}

func (o RevealMnemonicResult) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["mnemonic"] = o.Mnemonic
	}
	return json.Marshal(toSerialize)
}

type NullableRevealMnemonicResult struct {
	value *RevealMnemonicResult
	isSet bool
}

func (v NullableRevealMnemonicResult) Get() *RevealMnemonicResult {
	return v.value
}

func (v *NullableRevealMnemonicResult) Set(val *RevealMnemonicResult) {
	v.value = val
	v.isSet = true
}

func (v NullableRevealMnemonicResult) IsSet() bool {
	return v.isSet
}

func (v *NullableRevealMnemonicResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRevealMnemonicResult(val *RevealMnemonicResult) *NullableRevealMnemonicResult {
	return &NullableRevealMnemonicResult{value: val, isSet: true}
}

func (v NullableRevealMnemonicResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRevealMnemonicResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


