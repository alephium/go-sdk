/*
Alephium API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.4.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package alephium

import (
	"encoding/json"
)

// Transaction struct for Transaction
type Transaction struct {
	Unsigned UnsignedTx `json:"unsigned"`
	ScriptExecutionOk bool `json:"scriptExecutionOk"`
	ContractInputs []OutputRef `json:"contractInputs"`
	GeneratedOutputs []Output `json:"generatedOutputs"`
	InputSignatures []string `json:"inputSignatures"`
	ScriptSignatures []string `json:"scriptSignatures"`
}

// NewTransaction instantiates a new Transaction object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTransaction(unsigned UnsignedTx, scriptExecutionOk bool, contractInputs []OutputRef, generatedOutputs []Output, inputSignatures []string, scriptSignatures []string) *Transaction {
	this := Transaction{}
	this.Unsigned = unsigned
	this.ScriptExecutionOk = scriptExecutionOk
	this.ContractInputs = contractInputs
	this.GeneratedOutputs = generatedOutputs
	this.InputSignatures = inputSignatures
	this.ScriptSignatures = scriptSignatures
	return &this
}

// NewTransactionWithDefaults instantiates a new Transaction object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransactionWithDefaults() *Transaction {
	this := Transaction{}
	return &this
}

// GetUnsigned returns the Unsigned field value
func (o *Transaction) GetUnsigned() UnsignedTx {
	if o == nil {
		var ret UnsignedTx
		return ret
	}

	return o.Unsigned
}

// GetUnsignedOk returns a tuple with the Unsigned field value
// and a boolean to check if the value has been set.
func (o *Transaction) GetUnsignedOk() (*UnsignedTx, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Unsigned, true
}

// SetUnsigned sets field value
func (o *Transaction) SetUnsigned(v UnsignedTx) {
	o.Unsigned = v
}

// GetScriptExecutionOk returns the ScriptExecutionOk field value
func (o *Transaction) GetScriptExecutionOk() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.ScriptExecutionOk
}

// GetScriptExecutionOkOk returns a tuple with the ScriptExecutionOk field value
// and a boolean to check if the value has been set.
func (o *Transaction) GetScriptExecutionOkOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ScriptExecutionOk, true
}

// SetScriptExecutionOk sets field value
func (o *Transaction) SetScriptExecutionOk(v bool) {
	o.ScriptExecutionOk = v
}

// GetContractInputs returns the ContractInputs field value
func (o *Transaction) GetContractInputs() []OutputRef {
	if o == nil {
		var ret []OutputRef
		return ret
	}

	return o.ContractInputs
}

// GetContractInputsOk returns a tuple with the ContractInputs field value
// and a boolean to check if the value has been set.
func (o *Transaction) GetContractInputsOk() ([]OutputRef, bool) {
	if o == nil {
		return nil, false
	}
	return o.ContractInputs, true
}

// SetContractInputs sets field value
func (o *Transaction) SetContractInputs(v []OutputRef) {
	o.ContractInputs = v
}

// GetGeneratedOutputs returns the GeneratedOutputs field value
func (o *Transaction) GetGeneratedOutputs() []Output {
	if o == nil {
		var ret []Output
		return ret
	}

	return o.GeneratedOutputs
}

// GetGeneratedOutputsOk returns a tuple with the GeneratedOutputs field value
// and a boolean to check if the value has been set.
func (o *Transaction) GetGeneratedOutputsOk() ([]Output, bool) {
	if o == nil {
		return nil, false
	}
	return o.GeneratedOutputs, true
}

// SetGeneratedOutputs sets field value
func (o *Transaction) SetGeneratedOutputs(v []Output) {
	o.GeneratedOutputs = v
}

// GetInputSignatures returns the InputSignatures field value
func (o *Transaction) GetInputSignatures() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.InputSignatures
}

// GetInputSignaturesOk returns a tuple with the InputSignatures field value
// and a boolean to check if the value has been set.
func (o *Transaction) GetInputSignaturesOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.InputSignatures, true
}

// SetInputSignatures sets field value
func (o *Transaction) SetInputSignatures(v []string) {
	o.InputSignatures = v
}

// GetScriptSignatures returns the ScriptSignatures field value
func (o *Transaction) GetScriptSignatures() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.ScriptSignatures
}

// GetScriptSignaturesOk returns a tuple with the ScriptSignatures field value
// and a boolean to check if the value has been set.
func (o *Transaction) GetScriptSignaturesOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ScriptSignatures, true
}

// SetScriptSignatures sets field value
func (o *Transaction) SetScriptSignatures(v []string) {
	o.ScriptSignatures = v
}

func (o Transaction) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["unsigned"] = o.Unsigned
	}
	if true {
		toSerialize["scriptExecutionOk"] = o.ScriptExecutionOk
	}
	if true {
		toSerialize["contractInputs"] = o.ContractInputs
	}
	if true {
		toSerialize["generatedOutputs"] = o.GeneratedOutputs
	}
	if true {
		toSerialize["inputSignatures"] = o.InputSignatures
	}
	if true {
		toSerialize["scriptSignatures"] = o.ScriptSignatures
	}
	return json.Marshal(toSerialize)
}

type NullableTransaction struct {
	value *Transaction
	isSet bool
}

func (v NullableTransaction) Get() *Transaction {
	return v.value
}

func (v *NullableTransaction) Set(val *Transaction) {
	v.value = val
	v.isSet = true
}

func (v NullableTransaction) IsSet() bool {
	return v.isSet
}

func (v *NullableTransaction) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTransaction(val *Transaction) *NullableTransaction {
	return &NullableTransaction{value: val, isSet: true}
}

func (v NullableTransaction) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTransaction) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


