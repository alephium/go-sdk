/*
Alephium API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.4.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package alephium

import (
	"encoding/json"
)

// WalletUnlock struct for WalletUnlock
type WalletUnlock struct {
	Password string `json:"password"`
	MnemonicPassphrase *string `json:"mnemonicPassphrase,omitempty"`
}

// NewWalletUnlock instantiates a new WalletUnlock object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWalletUnlock(password string) *WalletUnlock {
	this := WalletUnlock{}
	this.Password = password
	return &this
}

// NewWalletUnlockWithDefaults instantiates a new WalletUnlock object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWalletUnlockWithDefaults() *WalletUnlock {
	this := WalletUnlock{}
	return &this
}

// GetPassword returns the Password field value
func (o *WalletUnlock) GetPassword() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Password
}

// GetPasswordOk returns a tuple with the Password field value
// and a boolean to check if the value has been set.
func (o *WalletUnlock) GetPasswordOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Password, true
}

// SetPassword sets field value
func (o *WalletUnlock) SetPassword(v string) {
	o.Password = v
}

// GetMnemonicPassphrase returns the MnemonicPassphrase field value if set, zero value otherwise.
func (o *WalletUnlock) GetMnemonicPassphrase() string {
	if o == nil || o.MnemonicPassphrase == nil {
		var ret string
		return ret
	}
	return *o.MnemonicPassphrase
}

// GetMnemonicPassphraseOk returns a tuple with the MnemonicPassphrase field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WalletUnlock) GetMnemonicPassphraseOk() (*string, bool) {
	if o == nil || o.MnemonicPassphrase == nil {
		return nil, false
	}
	return o.MnemonicPassphrase, true
}

// HasMnemonicPassphrase returns a boolean if a field has been set.
func (o *WalletUnlock) HasMnemonicPassphrase() bool {
	if o != nil && o.MnemonicPassphrase != nil {
		return true
	}

	return false
}

// SetMnemonicPassphrase gets a reference to the given string and assigns it to the MnemonicPassphrase field.
func (o *WalletUnlock) SetMnemonicPassphrase(v string) {
	o.MnemonicPassphrase = &v
}

func (o WalletUnlock) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["password"] = o.Password
	}
	if o.MnemonicPassphrase != nil {
		toSerialize["mnemonicPassphrase"] = o.MnemonicPassphrase
	}
	return json.Marshal(toSerialize)
}

type NullableWalletUnlock struct {
	value *WalletUnlock
	isSet bool
}

func (v NullableWalletUnlock) Get() *WalletUnlock {
	return v.value
}

func (v *NullableWalletUnlock) Set(val *WalletUnlock) {
	v.value = val
	v.isSet = true
}

func (v NullableWalletUnlock) IsSet() bool {
	return v.isSet
}

func (v *NullableWalletUnlock) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWalletUnlock(val *WalletUnlock) *NullableWalletUnlock {
	return &NullableWalletUnlock{value: val, isSet: true}
}

func (v NullableWalletUnlock) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWalletUnlock) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


