/*
Alephium API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.4.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package alephium

import (
	"encoding/json"
)

// PeerMisbehavior struct for PeerMisbehavior
type PeerMisbehavior struct {
	Peer string `json:"peer"`
	Status PeerStatus `json:"status"`
}

// NewPeerMisbehavior instantiates a new PeerMisbehavior object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPeerMisbehavior(peer string, status PeerStatus) *PeerMisbehavior {
	this := PeerMisbehavior{}
	this.Peer = peer
	this.Status = status
	return &this
}

// NewPeerMisbehaviorWithDefaults instantiates a new PeerMisbehavior object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPeerMisbehaviorWithDefaults() *PeerMisbehavior {
	this := PeerMisbehavior{}
	return &this
}

// GetPeer returns the Peer field value
func (o *PeerMisbehavior) GetPeer() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Peer
}

// GetPeerOk returns a tuple with the Peer field value
// and a boolean to check if the value has been set.
func (o *PeerMisbehavior) GetPeerOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Peer, true
}

// SetPeer sets field value
func (o *PeerMisbehavior) SetPeer(v string) {
	o.Peer = v
}

// GetStatus returns the Status field value
func (o *PeerMisbehavior) GetStatus() PeerStatus {
	if o == nil {
		var ret PeerStatus
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *PeerMisbehavior) GetStatusOk() (*PeerStatus, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *PeerMisbehavior) SetStatus(v PeerStatus) {
	o.Status = v
}

func (o PeerMisbehavior) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["peer"] = o.Peer
	}
	if true {
		toSerialize["status"] = o.Status
	}
	return json.Marshal(toSerialize)
}

type NullablePeerMisbehavior struct {
	value *PeerMisbehavior
	isSet bool
}

func (v NullablePeerMisbehavior) Get() *PeerMisbehavior {
	return v.value
}

func (v *NullablePeerMisbehavior) Set(val *PeerMisbehavior) {
	v.value = val
	v.isSet = true
}

func (v NullablePeerMisbehavior) IsSet() bool {
	return v.isSet
}

func (v *NullablePeerMisbehavior) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePeerMisbehavior(val *PeerMisbehavior) *NullablePeerMisbehavior {
	return &NullablePeerMisbehavior{value: val, isSet: true}
}

func (v NullablePeerMisbehavior) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePeerMisbehavior) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


