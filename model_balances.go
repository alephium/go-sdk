/*
Alephium API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.4.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package alephium

import (
	"encoding/json"
)

// Balances struct for Balances
type Balances struct {
	TotalBalance string `json:"totalBalance"`
	TotalBalanceHint string `json:"totalBalanceHint"`
	Balances []AddressBalance `json:"balances"`
}

// NewBalances instantiates a new Balances object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBalances(totalBalance string, totalBalanceHint string, balances []AddressBalance) *Balances {
	this := Balances{}
	this.TotalBalance = totalBalance
	this.TotalBalanceHint = totalBalanceHint
	this.Balances = balances
	return &this
}

// NewBalancesWithDefaults instantiates a new Balances object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBalancesWithDefaults() *Balances {
	this := Balances{}
	return &this
}

// GetTotalBalance returns the TotalBalance field value
func (o *Balances) GetTotalBalance() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TotalBalance
}

// GetTotalBalanceOk returns a tuple with the TotalBalance field value
// and a boolean to check if the value has been set.
func (o *Balances) GetTotalBalanceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TotalBalance, true
}

// SetTotalBalance sets field value
func (o *Balances) SetTotalBalance(v string) {
	o.TotalBalance = v
}

// GetTotalBalanceHint returns the TotalBalanceHint field value
func (o *Balances) GetTotalBalanceHint() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TotalBalanceHint
}

// GetTotalBalanceHintOk returns a tuple with the TotalBalanceHint field value
// and a boolean to check if the value has been set.
func (o *Balances) GetTotalBalanceHintOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TotalBalanceHint, true
}

// SetTotalBalanceHint sets field value
func (o *Balances) SetTotalBalanceHint(v string) {
	o.TotalBalanceHint = v
}

// GetBalances returns the Balances field value
func (o *Balances) GetBalances() []AddressBalance {
	if o == nil {
		var ret []AddressBalance
		return ret
	}

	return o.Balances
}

// GetBalancesOk returns a tuple with the Balances field value
// and a boolean to check if the value has been set.
func (o *Balances) GetBalancesOk() ([]AddressBalance, bool) {
	if o == nil {
		return nil, false
	}
	return o.Balances, true
}

// SetBalances sets field value
func (o *Balances) SetBalances(v []AddressBalance) {
	o.Balances = v
}

func (o Balances) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["totalBalance"] = o.TotalBalance
	}
	if true {
		toSerialize["totalBalanceHint"] = o.TotalBalanceHint
	}
	if true {
		toSerialize["balances"] = o.Balances
	}
	return json.Marshal(toSerialize)
}

type NullableBalances struct {
	value *Balances
	isSet bool
}

func (v NullableBalances) Get() *Balances {
	return v.value
}

func (v *NullableBalances) Set(val *Balances) {
	v.value = val
	v.isSet = true
}

func (v NullableBalances) IsSet() bool {
	return v.isSet
}

func (v *NullableBalances) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBalances(val *Balances) *NullableBalances {
	return &NullableBalances{value: val, isSet: true}
}

func (v NullableBalances) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBalances) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


