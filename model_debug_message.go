/*
Alephium API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.1.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package alephium

import (
	"encoding/json"
)

// checks if the DebugMessage type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DebugMessage{}

// DebugMessage struct for DebugMessage
type DebugMessage struct {
	ContractAddress string `json:"contractAddress"`
	Message string `json:"message"`
}

// NewDebugMessage instantiates a new DebugMessage object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDebugMessage(contractAddress string, message string) *DebugMessage {
	this := DebugMessage{}
	this.ContractAddress = contractAddress
	this.Message = message
	return &this
}

// NewDebugMessageWithDefaults instantiates a new DebugMessage object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDebugMessageWithDefaults() *DebugMessage {
	this := DebugMessage{}
	return &this
}

// GetContractAddress returns the ContractAddress field value
func (o *DebugMessage) GetContractAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ContractAddress
}

// GetContractAddressOk returns a tuple with the ContractAddress field value
// and a boolean to check if the value has been set.
func (o *DebugMessage) GetContractAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ContractAddress, true
}

// SetContractAddress sets field value
func (o *DebugMessage) SetContractAddress(v string) {
	o.ContractAddress = v
}

// GetMessage returns the Message field value
func (o *DebugMessage) GetMessage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Message
}

// GetMessageOk returns a tuple with the Message field value
// and a boolean to check if the value has been set.
func (o *DebugMessage) GetMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Message, true
}

// SetMessage sets field value
func (o *DebugMessage) SetMessage(v string) {
	o.Message = v
}

func (o DebugMessage) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DebugMessage) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["contractAddress"] = o.ContractAddress
	toSerialize["message"] = o.Message
	return toSerialize, nil
}

type NullableDebugMessage struct {
	value *DebugMessage
	isSet bool
}

func (v NullableDebugMessage) Get() *DebugMessage {
	return v.value
}

func (v *NullableDebugMessage) Set(val *DebugMessage) {
	v.value = val
	v.isSet = true
}

func (v NullableDebugMessage) IsSet() bool {
	return v.isSet
}

func (v *NullableDebugMessage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDebugMessage(val *DebugMessage) *NullableDebugMessage {
	return &NullableDebugMessage{value: val, isSet: true}
}

func (v NullableDebugMessage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDebugMessage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


