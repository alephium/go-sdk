/*
Alephium API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.4.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package alephium

import (
	"encoding/json"
)

// UTXO struct for UTXO
type UTXO struct {
	Ref OutputRef `json:"ref"`
	Amount string `json:"amount"`
	Tokens []Token `json:"tokens"`
	LockTime int64 `json:"lockTime"`
	AdditionalData string `json:"additionalData"`
}

// NewUTXO instantiates a new UTXO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUTXO(ref OutputRef, amount string, tokens []Token, lockTime int64, additionalData string) *UTXO {
	this := UTXO{}
	this.Ref = ref
	this.Amount = amount
	this.Tokens = tokens
	this.LockTime = lockTime
	this.AdditionalData = additionalData
	return &this
}

// NewUTXOWithDefaults instantiates a new UTXO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUTXOWithDefaults() *UTXO {
	this := UTXO{}
	return &this
}

// GetRef returns the Ref field value
func (o *UTXO) GetRef() OutputRef {
	if o == nil {
		var ret OutputRef
		return ret
	}

	return o.Ref
}

// GetRefOk returns a tuple with the Ref field value
// and a boolean to check if the value has been set.
func (o *UTXO) GetRefOk() (*OutputRef, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Ref, true
}

// SetRef sets field value
func (o *UTXO) SetRef(v OutputRef) {
	o.Ref = v
}

// GetAmount returns the Amount field value
func (o *UTXO) GetAmount() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Amount
}

// GetAmountOk returns a tuple with the Amount field value
// and a boolean to check if the value has been set.
func (o *UTXO) GetAmountOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Amount, true
}

// SetAmount sets field value
func (o *UTXO) SetAmount(v string) {
	o.Amount = v
}

// GetTokens returns the Tokens field value
func (o *UTXO) GetTokens() []Token {
	if o == nil {
		var ret []Token
		return ret
	}

	return o.Tokens
}

// GetTokensOk returns a tuple with the Tokens field value
// and a boolean to check if the value has been set.
func (o *UTXO) GetTokensOk() ([]Token, bool) {
	if o == nil {
		return nil, false
	}
	return o.Tokens, true
}

// SetTokens sets field value
func (o *UTXO) SetTokens(v []Token) {
	o.Tokens = v
}

// GetLockTime returns the LockTime field value
func (o *UTXO) GetLockTime() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.LockTime
}

// GetLockTimeOk returns a tuple with the LockTime field value
// and a boolean to check if the value has been set.
func (o *UTXO) GetLockTimeOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LockTime, true
}

// SetLockTime sets field value
func (o *UTXO) SetLockTime(v int64) {
	o.LockTime = v
}

// GetAdditionalData returns the AdditionalData field value
func (o *UTXO) GetAdditionalData() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AdditionalData
}

// GetAdditionalDataOk returns a tuple with the AdditionalData field value
// and a boolean to check if the value has been set.
func (o *UTXO) GetAdditionalDataOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AdditionalData, true
}

// SetAdditionalData sets field value
func (o *UTXO) SetAdditionalData(v string) {
	o.AdditionalData = v
}

func (o UTXO) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["ref"] = o.Ref
	}
	if true {
		toSerialize["amount"] = o.Amount
	}
	if true {
		toSerialize["tokens"] = o.Tokens
	}
	if true {
		toSerialize["lockTime"] = o.LockTime
	}
	if true {
		toSerialize["additionalData"] = o.AdditionalData
	}
	return json.Marshal(toSerialize)
}

type NullableUTXO struct {
	value *UTXO
	isSet bool
}

func (v NullableUTXO) Get() *UTXO {
	return v.value
}

func (v *NullableUTXO) Set(val *UTXO) {
	v.value = val
	v.isSet = true
}

func (v NullableUTXO) IsSet() bool {
	return v.isSet
}

func (v *NullableUTXO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUTXO(val *UTXO) *NullableUTXO {
	return &NullableUTXO{value: val, isSet: true}
}

func (v NullableUTXO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUTXO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


