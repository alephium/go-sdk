/*
Alephium API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.4.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package alephium

import (
	"encoding/json"
)

// Sweep struct for Sweep
type Sweep struct {
	ToAddress string `json:"toAddress"`
	LockTime *int64 `json:"lockTime,omitempty"`
	GasAmount *int32 `json:"gasAmount,omitempty"`
	GasPrice *string `json:"gasPrice,omitempty"`
	UtxosLimit *int32 `json:"utxosLimit,omitempty"`
}

// NewSweep instantiates a new Sweep object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSweep(toAddress string) *Sweep {
	this := Sweep{}
	this.ToAddress = toAddress
	return &this
}

// NewSweepWithDefaults instantiates a new Sweep object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSweepWithDefaults() *Sweep {
	this := Sweep{}
	return &this
}

// GetToAddress returns the ToAddress field value
func (o *Sweep) GetToAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ToAddress
}

// GetToAddressOk returns a tuple with the ToAddress field value
// and a boolean to check if the value has been set.
func (o *Sweep) GetToAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ToAddress, true
}

// SetToAddress sets field value
func (o *Sweep) SetToAddress(v string) {
	o.ToAddress = v
}

// GetLockTime returns the LockTime field value if set, zero value otherwise.
func (o *Sweep) GetLockTime() int64 {
	if o == nil || o.LockTime == nil {
		var ret int64
		return ret
	}
	return *o.LockTime
}

// GetLockTimeOk returns a tuple with the LockTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Sweep) GetLockTimeOk() (*int64, bool) {
	if o == nil || o.LockTime == nil {
		return nil, false
	}
	return o.LockTime, true
}

// HasLockTime returns a boolean if a field has been set.
func (o *Sweep) HasLockTime() bool {
	if o != nil && o.LockTime != nil {
		return true
	}

	return false
}

// SetLockTime gets a reference to the given int64 and assigns it to the LockTime field.
func (o *Sweep) SetLockTime(v int64) {
	o.LockTime = &v
}

// GetGasAmount returns the GasAmount field value if set, zero value otherwise.
func (o *Sweep) GetGasAmount() int32 {
	if o == nil || o.GasAmount == nil {
		var ret int32
		return ret
	}
	return *o.GasAmount
}

// GetGasAmountOk returns a tuple with the GasAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Sweep) GetGasAmountOk() (*int32, bool) {
	if o == nil || o.GasAmount == nil {
		return nil, false
	}
	return o.GasAmount, true
}

// HasGasAmount returns a boolean if a field has been set.
func (o *Sweep) HasGasAmount() bool {
	if o != nil && o.GasAmount != nil {
		return true
	}

	return false
}

// SetGasAmount gets a reference to the given int32 and assigns it to the GasAmount field.
func (o *Sweep) SetGasAmount(v int32) {
	o.GasAmount = &v
}

// GetGasPrice returns the GasPrice field value if set, zero value otherwise.
func (o *Sweep) GetGasPrice() string {
	if o == nil || o.GasPrice == nil {
		var ret string
		return ret
	}
	return *o.GasPrice
}

// GetGasPriceOk returns a tuple with the GasPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Sweep) GetGasPriceOk() (*string, bool) {
	if o == nil || o.GasPrice == nil {
		return nil, false
	}
	return o.GasPrice, true
}

// HasGasPrice returns a boolean if a field has been set.
func (o *Sweep) HasGasPrice() bool {
	if o != nil && o.GasPrice != nil {
		return true
	}

	return false
}

// SetGasPrice gets a reference to the given string and assigns it to the GasPrice field.
func (o *Sweep) SetGasPrice(v string) {
	o.GasPrice = &v
}

// GetUtxosLimit returns the UtxosLimit field value if set, zero value otherwise.
func (o *Sweep) GetUtxosLimit() int32 {
	if o == nil || o.UtxosLimit == nil {
		var ret int32
		return ret
	}
	return *o.UtxosLimit
}

// GetUtxosLimitOk returns a tuple with the UtxosLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Sweep) GetUtxosLimitOk() (*int32, bool) {
	if o == nil || o.UtxosLimit == nil {
		return nil, false
	}
	return o.UtxosLimit, true
}

// HasUtxosLimit returns a boolean if a field has been set.
func (o *Sweep) HasUtxosLimit() bool {
	if o != nil && o.UtxosLimit != nil {
		return true
	}

	return false
}

// SetUtxosLimit gets a reference to the given int32 and assigns it to the UtxosLimit field.
func (o *Sweep) SetUtxosLimit(v int32) {
	o.UtxosLimit = &v
}

func (o Sweep) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["toAddress"] = o.ToAddress
	}
	if o.LockTime != nil {
		toSerialize["lockTime"] = o.LockTime
	}
	if o.GasAmount != nil {
		toSerialize["gasAmount"] = o.GasAmount
	}
	if o.GasPrice != nil {
		toSerialize["gasPrice"] = o.GasPrice
	}
	if o.UtxosLimit != nil {
		toSerialize["utxosLimit"] = o.UtxosLimit
	}
	return json.Marshal(toSerialize)
}

type NullableSweep struct {
	value *Sweep
	isSet bool
}

func (v NullableSweep) Get() *Sweep {
	return v.value
}

func (v *NullableSweep) Set(val *Sweep) {
	v.value = val
	v.isSet = true
}

func (v NullableSweep) IsSet() bool {
	return v.isSet
}

func (v *NullableSweep) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSweep(val *Sweep) *NullableSweep {
	return &NullableSweep{value: val, isSet: true}
}

func (v NullableSweep) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSweep) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


