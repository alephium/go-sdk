/*
Alephium API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.4.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package alephium

import (
	"encoding/json"
)

// TransactionTemplate struct for TransactionTemplate
type TransactionTemplate struct {
	Unsigned UnsignedTx `json:"unsigned"`
	InputSignatures []string `json:"inputSignatures"`
	ScriptSignatures []string `json:"scriptSignatures"`
}

// NewTransactionTemplate instantiates a new TransactionTemplate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTransactionTemplate(unsigned UnsignedTx, inputSignatures []string, scriptSignatures []string) *TransactionTemplate {
	this := TransactionTemplate{}
	this.Unsigned = unsigned
	this.InputSignatures = inputSignatures
	this.ScriptSignatures = scriptSignatures
	return &this
}

// NewTransactionTemplateWithDefaults instantiates a new TransactionTemplate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransactionTemplateWithDefaults() *TransactionTemplate {
	this := TransactionTemplate{}
	return &this
}

// GetUnsigned returns the Unsigned field value
func (o *TransactionTemplate) GetUnsigned() UnsignedTx {
	if o == nil {
		var ret UnsignedTx
		return ret
	}

	return o.Unsigned
}

// GetUnsignedOk returns a tuple with the Unsigned field value
// and a boolean to check if the value has been set.
func (o *TransactionTemplate) GetUnsignedOk() (*UnsignedTx, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Unsigned, true
}

// SetUnsigned sets field value
func (o *TransactionTemplate) SetUnsigned(v UnsignedTx) {
	o.Unsigned = v
}

// GetInputSignatures returns the InputSignatures field value
func (o *TransactionTemplate) GetInputSignatures() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.InputSignatures
}

// GetInputSignaturesOk returns a tuple with the InputSignatures field value
// and a boolean to check if the value has been set.
func (o *TransactionTemplate) GetInputSignaturesOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.InputSignatures, true
}

// SetInputSignatures sets field value
func (o *TransactionTemplate) SetInputSignatures(v []string) {
	o.InputSignatures = v
}

// GetScriptSignatures returns the ScriptSignatures field value
func (o *TransactionTemplate) GetScriptSignatures() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.ScriptSignatures
}

// GetScriptSignaturesOk returns a tuple with the ScriptSignatures field value
// and a boolean to check if the value has been set.
func (o *TransactionTemplate) GetScriptSignaturesOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ScriptSignatures, true
}

// SetScriptSignatures sets field value
func (o *TransactionTemplate) SetScriptSignatures(v []string) {
	o.ScriptSignatures = v
}

func (o TransactionTemplate) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["unsigned"] = o.Unsigned
	}
	if true {
		toSerialize["inputSignatures"] = o.InputSignatures
	}
	if true {
		toSerialize["scriptSignatures"] = o.ScriptSignatures
	}
	return json.Marshal(toSerialize)
}

type NullableTransactionTemplate struct {
	value *TransactionTemplate
	isSet bool
}

func (v NullableTransactionTemplate) Get() *TransactionTemplate {
	return v.value
}

func (v *NullableTransactionTemplate) Set(val *TransactionTemplate) {
	v.value = val
	v.isSet = true
}

func (v NullableTransactionTemplate) IsSet() bool {
	return v.isSet
}

func (v *NullableTransactionTemplate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTransactionTemplate(val *TransactionTemplate) *NullableTransactionTemplate {
	return &NullableTransactionTemplate{value: val, isSet: true}
}

func (v NullableTransactionTemplate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTransactionTemplate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


