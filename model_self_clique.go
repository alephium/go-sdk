/*
Alephium API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.4.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package alephium

import (
	"encoding/json"
)

// SelfClique struct for SelfClique
type SelfClique struct {
	CliqueId string `json:"cliqueId"`
	Nodes []PeerAddress `json:"nodes"`
	SelfReady bool `json:"selfReady"`
	Synced bool `json:"synced"`
}

// NewSelfClique instantiates a new SelfClique object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSelfClique(cliqueId string, nodes []PeerAddress, selfReady bool, synced bool) *SelfClique {
	this := SelfClique{}
	this.CliqueId = cliqueId
	this.Nodes = nodes
	this.SelfReady = selfReady
	this.Synced = synced
	return &this
}

// NewSelfCliqueWithDefaults instantiates a new SelfClique object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSelfCliqueWithDefaults() *SelfClique {
	this := SelfClique{}
	return &this
}

// GetCliqueId returns the CliqueId field value
func (o *SelfClique) GetCliqueId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CliqueId
}

// GetCliqueIdOk returns a tuple with the CliqueId field value
// and a boolean to check if the value has been set.
func (o *SelfClique) GetCliqueIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CliqueId, true
}

// SetCliqueId sets field value
func (o *SelfClique) SetCliqueId(v string) {
	o.CliqueId = v
}

// GetNodes returns the Nodes field value
func (o *SelfClique) GetNodes() []PeerAddress {
	if o == nil {
		var ret []PeerAddress
		return ret
	}

	return o.Nodes
}

// GetNodesOk returns a tuple with the Nodes field value
// and a boolean to check if the value has been set.
func (o *SelfClique) GetNodesOk() ([]PeerAddress, bool) {
	if o == nil {
		return nil, false
	}
	return o.Nodes, true
}

// SetNodes sets field value
func (o *SelfClique) SetNodes(v []PeerAddress) {
	o.Nodes = v
}

// GetSelfReady returns the SelfReady field value
func (o *SelfClique) GetSelfReady() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.SelfReady
}

// GetSelfReadyOk returns a tuple with the SelfReady field value
// and a boolean to check if the value has been set.
func (o *SelfClique) GetSelfReadyOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SelfReady, true
}

// SetSelfReady sets field value
func (o *SelfClique) SetSelfReady(v bool) {
	o.SelfReady = v
}

// GetSynced returns the Synced field value
func (o *SelfClique) GetSynced() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Synced
}

// GetSyncedOk returns a tuple with the Synced field value
// and a boolean to check if the value has been set.
func (o *SelfClique) GetSyncedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Synced, true
}

// SetSynced sets field value
func (o *SelfClique) SetSynced(v bool) {
	o.Synced = v
}

func (o SelfClique) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["cliqueId"] = o.CliqueId
	}
	if true {
		toSerialize["nodes"] = o.Nodes
	}
	if true {
		toSerialize["selfReady"] = o.SelfReady
	}
	if true {
		toSerialize["synced"] = o.Synced
	}
	return json.Marshal(toSerialize)
}

type NullableSelfClique struct {
	value *SelfClique
	isSet bool
}

func (v NullableSelfClique) Get() *SelfClique {
	return v.value
}

func (v *NullableSelfClique) Set(val *SelfClique) {
	v.value = val
	v.isSet = true
}

func (v NullableSelfClique) IsSet() bool {
	return v.isSet
}

func (v *NullableSelfClique) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSelfClique(val *SelfClique) *NullableSelfClique {
	return &NullableSelfClique{value: val, isSet: true}
}

func (v NullableSelfClique) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSelfClique) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


