/*
Alephium API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.4.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package alephium

import (
	"encoding/json"
)

// BuildMultisigAddress struct for BuildMultisigAddress
type BuildMultisigAddress struct {
	Keys []string `json:"keys"`
	Mrequired int32 `json:"mrequired"`
}

// NewBuildMultisigAddress instantiates a new BuildMultisigAddress object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBuildMultisigAddress(keys []string, mrequired int32) *BuildMultisigAddress {
	this := BuildMultisigAddress{}
	this.Keys = keys
	this.Mrequired = mrequired
	return &this
}

// NewBuildMultisigAddressWithDefaults instantiates a new BuildMultisigAddress object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBuildMultisigAddressWithDefaults() *BuildMultisigAddress {
	this := BuildMultisigAddress{}
	return &this
}

// GetKeys returns the Keys field value
func (o *BuildMultisigAddress) GetKeys() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Keys
}

// GetKeysOk returns a tuple with the Keys field value
// and a boolean to check if the value has been set.
func (o *BuildMultisigAddress) GetKeysOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Keys, true
}

// SetKeys sets field value
func (o *BuildMultisigAddress) SetKeys(v []string) {
	o.Keys = v
}

// GetMrequired returns the Mrequired field value
func (o *BuildMultisigAddress) GetMrequired() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Mrequired
}

// GetMrequiredOk returns a tuple with the Mrequired field value
// and a boolean to check if the value has been set.
func (o *BuildMultisigAddress) GetMrequiredOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Mrequired, true
}

// SetMrequired sets field value
func (o *BuildMultisigAddress) SetMrequired(v int32) {
	o.Mrequired = v
}

func (o BuildMultisigAddress) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["keys"] = o.Keys
	}
	if true {
		toSerialize["mrequired"] = o.Mrequired
	}
	return json.Marshal(toSerialize)
}

type NullableBuildMultisigAddress struct {
	value *BuildMultisigAddress
	isSet bool
}

func (v NullableBuildMultisigAddress) Get() *BuildMultisigAddress {
	return v.value
}

func (v *NullableBuildMultisigAddress) Set(val *BuildMultisigAddress) {
	v.value = val
	v.isSet = true
}

func (v NullableBuildMultisigAddress) IsSet() bool {
	return v.isSet
}

func (v *NullableBuildMultisigAddress) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBuildMultisigAddress(val *BuildMultisigAddress) *NullableBuildMultisigAddress {
	return &NullableBuildMultisigAddress{value: val, isSet: true}
}

func (v NullableBuildMultisigAddress) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBuildMultisigAddress) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


