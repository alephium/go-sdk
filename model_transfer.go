/*
Alephium API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.4.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package alephium

import (
	"encoding/json"
)

// Transfer struct for Transfer
type Transfer struct {
	Destinations []Destination `json:"destinations"`
	Gas *int32 `json:"gas,omitempty"`
	GasPrice *string `json:"gasPrice,omitempty"`
	UtxosLimit *int32 `json:"utxosLimit,omitempty"`
}

// NewTransfer instantiates a new Transfer object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTransfer(destinations []Destination) *Transfer {
	this := Transfer{}
	this.Destinations = destinations
	return &this
}

// NewTransferWithDefaults instantiates a new Transfer object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransferWithDefaults() *Transfer {
	this := Transfer{}
	return &this
}

// GetDestinations returns the Destinations field value
func (o *Transfer) GetDestinations() []Destination {
	if o == nil {
		var ret []Destination
		return ret
	}

	return o.Destinations
}

// GetDestinationsOk returns a tuple with the Destinations field value
// and a boolean to check if the value has been set.
func (o *Transfer) GetDestinationsOk() ([]Destination, bool) {
	if o == nil {
		return nil, false
	}
	return o.Destinations, true
}

// SetDestinations sets field value
func (o *Transfer) SetDestinations(v []Destination) {
	o.Destinations = v
}

// GetGas returns the Gas field value if set, zero value otherwise.
func (o *Transfer) GetGas() int32 {
	if o == nil || o.Gas == nil {
		var ret int32
		return ret
	}
	return *o.Gas
}

// GetGasOk returns a tuple with the Gas field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Transfer) GetGasOk() (*int32, bool) {
	if o == nil || o.Gas == nil {
		return nil, false
	}
	return o.Gas, true
}

// HasGas returns a boolean if a field has been set.
func (o *Transfer) HasGas() bool {
	if o != nil && o.Gas != nil {
		return true
	}

	return false
}

// SetGas gets a reference to the given int32 and assigns it to the Gas field.
func (o *Transfer) SetGas(v int32) {
	o.Gas = &v
}

// GetGasPrice returns the GasPrice field value if set, zero value otherwise.
func (o *Transfer) GetGasPrice() string {
	if o == nil || o.GasPrice == nil {
		var ret string
		return ret
	}
	return *o.GasPrice
}

// GetGasPriceOk returns a tuple with the GasPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Transfer) GetGasPriceOk() (*string, bool) {
	if o == nil || o.GasPrice == nil {
		return nil, false
	}
	return o.GasPrice, true
}

// HasGasPrice returns a boolean if a field has been set.
func (o *Transfer) HasGasPrice() bool {
	if o != nil && o.GasPrice != nil {
		return true
	}

	return false
}

// SetGasPrice gets a reference to the given string and assigns it to the GasPrice field.
func (o *Transfer) SetGasPrice(v string) {
	o.GasPrice = &v
}

// GetUtxosLimit returns the UtxosLimit field value if set, zero value otherwise.
func (o *Transfer) GetUtxosLimit() int32 {
	if o == nil || o.UtxosLimit == nil {
		var ret int32
		return ret
	}
	return *o.UtxosLimit
}

// GetUtxosLimitOk returns a tuple with the UtxosLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Transfer) GetUtxosLimitOk() (*int32, bool) {
	if o == nil || o.UtxosLimit == nil {
		return nil, false
	}
	return o.UtxosLimit, true
}

// HasUtxosLimit returns a boolean if a field has been set.
func (o *Transfer) HasUtxosLimit() bool {
	if o != nil && o.UtxosLimit != nil {
		return true
	}

	return false
}

// SetUtxosLimit gets a reference to the given int32 and assigns it to the UtxosLimit field.
func (o *Transfer) SetUtxosLimit(v int32) {
	o.UtxosLimit = &v
}

func (o Transfer) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["destinations"] = o.Destinations
	}
	if o.Gas != nil {
		toSerialize["gas"] = o.Gas
	}
	if o.GasPrice != nil {
		toSerialize["gasPrice"] = o.GasPrice
	}
	if o.UtxosLimit != nil {
		toSerialize["utxosLimit"] = o.UtxosLimit
	}
	return json.Marshal(toSerialize)
}

type NullableTransfer struct {
	value *Transfer
	isSet bool
}

func (v NullableTransfer) Get() *Transfer {
	return v.value
}

func (v *NullableTransfer) Set(val *Transfer) {
	v.value = val
	v.isSet = true
}

func (v NullableTransfer) IsSet() bool {
	return v.isSet
}

func (v *NullableTransfer) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTransfer(val *Transfer) *NullableTransfer {
	return &NullableTransfer{value: val, isSet: true}
}

func (v NullableTransfer) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTransfer) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


