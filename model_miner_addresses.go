/*
Alephium API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.4.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package alephium

import (
	"encoding/json"
)

// MinerAddresses struct for MinerAddresses
type MinerAddresses struct {
	Addresses []string `json:"addresses"`
}

// NewMinerAddresses instantiates a new MinerAddresses object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMinerAddresses(addresses []string) *MinerAddresses {
	this := MinerAddresses{}
	this.Addresses = addresses
	return &this
}

// NewMinerAddressesWithDefaults instantiates a new MinerAddresses object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMinerAddressesWithDefaults() *MinerAddresses {
	this := MinerAddresses{}
	return &this
}

// GetAddresses returns the Addresses field value
func (o *MinerAddresses) GetAddresses() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Addresses
}

// GetAddressesOk returns a tuple with the Addresses field value
// and a boolean to check if the value has been set.
func (o *MinerAddresses) GetAddressesOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Addresses, true
}

// SetAddresses sets field value
func (o *MinerAddresses) SetAddresses(v []string) {
	o.Addresses = v
}

func (o MinerAddresses) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["addresses"] = o.Addresses
	}
	return json.Marshal(toSerialize)
}

type NullableMinerAddresses struct {
	value *MinerAddresses
	isSet bool
}

func (v NullableMinerAddresses) Get() *MinerAddresses {
	return v.value
}

func (v *NullableMinerAddresses) Set(val *MinerAddresses) {
	v.value = val
	v.isSet = true
}

func (v NullableMinerAddresses) IsSet() bool {
	return v.isSet
}

func (v *NullableMinerAddresses) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMinerAddresses(val *MinerAddresses) *NullableMinerAddresses {
	return &NullableMinerAddresses{value: val, isSet: true}
}

func (v NullableMinerAddresses) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMinerAddresses) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


