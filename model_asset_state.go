/*
Alephium API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.4.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package alephium

import (
	"encoding/json"
)

// AssetState struct for AssetState
type AssetState struct {
	AttoAlphAmount string `json:"attoAlphAmount"`
	Tokens []Token `json:"tokens,omitempty"`
}

// NewAssetState instantiates a new AssetState object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAssetState(attoAlphAmount string) *AssetState {
	this := AssetState{}
	this.AttoAlphAmount = attoAlphAmount
	return &this
}

// NewAssetStateWithDefaults instantiates a new AssetState object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAssetStateWithDefaults() *AssetState {
	this := AssetState{}
	return &this
}

// GetAttoAlphAmount returns the AttoAlphAmount field value
func (o *AssetState) GetAttoAlphAmount() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AttoAlphAmount
}

// GetAttoAlphAmountOk returns a tuple with the AttoAlphAmount field value
// and a boolean to check if the value has been set.
func (o *AssetState) GetAttoAlphAmountOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AttoAlphAmount, true
}

// SetAttoAlphAmount sets field value
func (o *AssetState) SetAttoAlphAmount(v string) {
	o.AttoAlphAmount = v
}

// GetTokens returns the Tokens field value if set, zero value otherwise.
func (o *AssetState) GetTokens() []Token {
	if o == nil || o.Tokens == nil {
		var ret []Token
		return ret
	}
	return o.Tokens
}

// GetTokensOk returns a tuple with the Tokens field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetState) GetTokensOk() ([]Token, bool) {
	if o == nil || o.Tokens == nil {
		return nil, false
	}
	return o.Tokens, true
}

// HasTokens returns a boolean if a field has been set.
func (o *AssetState) HasTokens() bool {
	if o != nil && o.Tokens != nil {
		return true
	}

	return false
}

// SetTokens gets a reference to the given []Token and assigns it to the Tokens field.
func (o *AssetState) SetTokens(v []Token) {
	o.Tokens = v
}

func (o AssetState) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["attoAlphAmount"] = o.AttoAlphAmount
	}
	if o.Tokens != nil {
		toSerialize["tokens"] = o.Tokens
	}
	return json.Marshal(toSerialize)
}

type NullableAssetState struct {
	value *AssetState
	isSet bool
}

func (v NullableAssetState) Get() *AssetState {
	return v.value
}

func (v *NullableAssetState) Set(val *AssetState) {
	v.value = val
	v.isSet = true
}

func (v NullableAssetState) IsSet() bool {
	return v.isSet
}

func (v *NullableAssetState) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAssetState(val *AssetState) *NullableAssetState {
	return &NullableAssetState{value: val, isSet: true}
}

func (v NullableAssetState) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAssetState) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


