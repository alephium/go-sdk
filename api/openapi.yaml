openapi: 3.0.3
info:
  title: Alephium API
  version: 1.4.0
servers:
- url: "{protocol}://{host}:{port}"
  variables:
    protocol:
      default: http
      enum:
      - http
      - https
    host:
      default: 127.0.0.1
    port:
      default: "12973"
paths:
  /wallets:
    get:
      operationId: getWallets
      responses:
        "200":
          content:
            application/json:
              example:
              - walletName: wallet-super-name
                locked: true
              schema:
                items:
                  $ref: '#/components/schemas/WalletStatus'
                type: array
        "400":
          content:
            application/json:
              example:
                detail: Something bad in the request
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: BadRequest
        "401":
          content:
            application/json:
              example:
                detail: You shall not pass
              schema:
                $ref: '#/components/schemas/Unauthorized'
          description: Unauthorized
        "404":
          content:
            application/json:
              example:
                resource: wallet-name
                detail: wallet-name not found
              schema:
                $ref: '#/components/schemas/NotFound'
          description: NotFound
        "500":
          content:
            application/json:
              example:
                detail: Ouch
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "503":
          content:
            application/json:
              example:
                detail: Self clique unsynced
              schema:
                $ref: '#/components/schemas/ServiceUnavailable'
          description: ServiceUnavailable
      summary: List available wallets
      tags:
      - Wallets
    post:
      description: "A new wallet will be created and respond with a mnemonic. Make\
        \ sure to keep that mnemonic safely as it will allows you to recover your\
        \ wallet. Default mnemonic size is 24, (options: 12, 15, 18, 21, 24)."
      operationId: postWallets
      requestBody:
        content:
          application/json:
            examples:
              Example0:
                summary: User
                value:
                  password: my-secret-password
                  walletName: wallet-super-name
              Example1:
                summary: Miner (w/o pass phrase)
                value:
                  password: my-secret-password
                  walletName: wallet-super-name
                  isMiner: true
                  mnemonicSize: 24
              Example2:
                summary: Miner (with pass phrase)
                value:
                  password: my-secret-password
                  walletName: wallet-super-name
                  isMiner: true
                  mnemonicPassphrase: optional-mnemonic-passphrase
                  mnemonicSize: 24
            schema:
              $ref: '#/components/schemas/WalletCreation'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                walletName: wallet-super-name
                mnemonic: vault alarm sad mass witness property virus style good flower
                  rice alpha viable evidence run glare pretty scout evil judge enroll
                  refuse another lava
              schema:
                $ref: '#/components/schemas/WalletCreationResult'
        "400":
          content:
            application/json:
              example:
                detail: Something bad in the request
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: BadRequest
        "401":
          content:
            application/json:
              example:
                detail: You shall not pass
              schema:
                $ref: '#/components/schemas/Unauthorized'
          description: Unauthorized
        "404":
          content:
            application/json:
              example:
                resource: wallet-name
                detail: wallet-name not found
              schema:
                $ref: '#/components/schemas/NotFound'
          description: NotFound
        "500":
          content:
            application/json:
              example:
                detail: Ouch
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "503":
          content:
            application/json:
              example:
                detail: Self clique unsynced
              schema:
                $ref: '#/components/schemas/ServiceUnavailable'
          description: ServiceUnavailable
      summary: Create a new wallet
      tags:
      - Wallets
    put:
      operationId: putWallets
      requestBody:
        content:
          application/json:
            examples:
              Example0:
                summary: User
                value:
                  password: my-secret-password
                  mnemonic: vault alarm sad mass witness property virus style good
                    flower rice alpha viable evidence run glare pretty scout evil
                    judge enroll refuse another lava
                  walletName: wallet-super-name
              Example1:
                summary: Miner (w/o pass phrase)
                value:
                  password: my-secret-password
                  mnemonic: vault alarm sad mass witness property virus style good
                    flower rice alpha viable evidence run glare pretty scout evil
                    judge enroll refuse another lava
                  walletName: wallet-super-name
                  isMiner: true
              Example2:
                summary: Miner (with pass phrase)
                value:
                  password: my-secret-password
                  mnemonic: vault alarm sad mass witness property virus style good
                    flower rice alpha viable evidence run glare pretty scout evil
                    judge enroll refuse another lava
                  walletName: wallet-super-name
                  isMiner: true
                  mnemonicPassphrase: optional-mnemonic-passphrase
            schema:
              $ref: '#/components/schemas/WalletRestore'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                walletName: wallet-super-name
              schema:
                $ref: '#/components/schemas/WalletRestoreResult'
        "400":
          content:
            application/json:
              example:
                detail: Something bad in the request
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: BadRequest
        "401":
          content:
            application/json:
              example:
                detail: You shall not pass
              schema:
                $ref: '#/components/schemas/Unauthorized'
          description: Unauthorized
        "404":
          content:
            application/json:
              example:
                resource: wallet-name
                detail: wallet-name not found
              schema:
                $ref: '#/components/schemas/NotFound'
          description: NotFound
        "500":
          content:
            application/json:
              example:
                detail: Ouch
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "503":
          content:
            application/json:
              example:
                detail: Self clique unsynced
              schema:
                $ref: '#/components/schemas/ServiceUnavailable'
          description: ServiceUnavailable
      summary: Restore a wallet from your mnemonic
      tags:
      - Wallets
  /wallets/{wallet_name}:
    delete:
      operationId: deleteWalletsWallet_name
      parameters:
      - explode: false
        in: path
        name: wallet_name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              password: my-secret-password
            schema:
              $ref: '#/components/schemas/WalletDeletion'
        required: true
      responses:
        "200": {}
        "400":
          content:
            application/json:
              example:
                detail: Something bad in the request
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: BadRequest
        "401":
          content:
            application/json:
              example:
                detail: You shall not pass
              schema:
                $ref: '#/components/schemas/Unauthorized'
          description: Unauthorized
        "404":
          content:
            application/json:
              example:
                resource: wallet-name
                detail: wallet-name not found
              schema:
                $ref: '#/components/schemas/NotFound'
          description: NotFound
        "500":
          content:
            application/json:
              example:
                detail: Ouch
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "503":
          content:
            application/json:
              example:
                detail: Self clique unsynced
              schema:
                $ref: '#/components/schemas/ServiceUnavailable'
          description: ServiceUnavailable
      summary: Delete your wallet file (can be recovered with your mnemonic)
      tags:
      - Wallets
    get:
      operationId: getWalletsWallet_name
      parameters:
      - explode: false
        in: path
        name: wallet_name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                walletName: wallet-super-name
                locked: true
              schema:
                $ref: '#/components/schemas/WalletStatus'
        "400":
          content:
            application/json:
              example:
                detail: Something bad in the request
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: BadRequest
        "401":
          content:
            application/json:
              example:
                detail: You shall not pass
              schema:
                $ref: '#/components/schemas/Unauthorized'
          description: Unauthorized
        "404":
          content:
            application/json:
              example:
                resource: wallet-name
                detail: wallet-name not found
              schema:
                $ref: '#/components/schemas/NotFound'
          description: NotFound
        "500":
          content:
            application/json:
              example:
                detail: Ouch
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "503":
          content:
            application/json:
              example:
                detail: Self clique unsynced
              schema:
                $ref: '#/components/schemas/ServiceUnavailable'
          description: ServiceUnavailable
      summary: Get wallet's status
      tags:
      - Wallets
  /wallets/{wallet_name}/lock:
    post:
      operationId: postWalletsWallet_nameLock
      parameters:
      - explode: false
        in: path
        name: wallet_name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200": {}
        "400":
          content:
            application/json:
              example:
                detail: Something bad in the request
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: BadRequest
        "401":
          content:
            application/json:
              example:
                detail: You shall not pass
              schema:
                $ref: '#/components/schemas/Unauthorized'
          description: Unauthorized
        "404":
          content:
            application/json:
              example:
                resource: wallet-name
                detail: wallet-name not found
              schema:
                $ref: '#/components/schemas/NotFound'
          description: NotFound
        "500":
          content:
            application/json:
              example:
                detail: Ouch
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "503":
          content:
            application/json:
              example:
                detail: Self clique unsynced
              schema:
                $ref: '#/components/schemas/ServiceUnavailable'
          description: ServiceUnavailable
      summary: Lock your wallet
      tags:
      - Wallets
  /wallets/{wallet_name}/unlock:
    post:
      operationId: postWalletsWallet_nameUnlock
      parameters:
      - explode: false
        in: path
        name: wallet_name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              Example0:
                summary: Default
                value:
                  password: my-secret-password
              Example1:
                summary: More Settings (with pass phrase)
                value:
                  password: my-secret-password
                  mnemonicPassphrase: optional-mnemonic-passphrase
            schema:
              $ref: '#/components/schemas/WalletUnlock'
        required: true
      responses:
        "200": {}
        "400":
          content:
            application/json:
              example:
                detail: Something bad in the request
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: BadRequest
        "401":
          content:
            application/json:
              example:
                detail: You shall not pass
              schema:
                $ref: '#/components/schemas/Unauthorized'
          description: Unauthorized
        "404":
          content:
            application/json:
              example:
                resource: wallet-name
                detail: wallet-name not found
              schema:
                $ref: '#/components/schemas/NotFound'
          description: NotFound
        "500":
          content:
            application/json:
              example:
                detail: Ouch
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "503":
          content:
            application/json:
              example:
                detail: Self clique unsynced
              schema:
                $ref: '#/components/schemas/ServiceUnavailable'
          description: ServiceUnavailable
      summary: Unlock your wallet
      tags:
      - Wallets
  /wallets/{wallet_name}/balances:
    get:
      operationId: getWalletsWallet_nameBalances
      parameters:
      - explode: false
        in: path
        name: wallet_name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                totalBalance: "10000000000000000000"
                totalBalanceHint: 10 ALPH
                balances:
                - address: 1AujpupFP4KWeZvqA7itsHY9cLJmx4qTzojVZrg8W9y
                  balance: "10000000000000000000"
                  balanceHint: 10 ALPH
                  lockedBalance: "0"
                  lockedBalanceHint: 0 ALPH
              schema:
                $ref: '#/components/schemas/Balances'
          description: "Format 1: `1000000000000000000`\n\nFormat 2: `x.y ALPH`, where\
            \ `1 ALPH = 1000000000000000000`"
        "400":
          content:
            application/json:
              example:
                detail: Something bad in the request
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: BadRequest
        "401":
          content:
            application/json:
              example:
                detail: You shall not pass
              schema:
                $ref: '#/components/schemas/Unauthorized'
          description: Unauthorized
        "404":
          content:
            application/json:
              example:
                resource: wallet-name
                detail: wallet-name not found
              schema:
                $ref: '#/components/schemas/NotFound'
          description: NotFound
        "500":
          content:
            application/json:
              example:
                detail: Ouch
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "503":
          content:
            application/json:
              example:
                detail: Self clique unsynced
              schema:
                $ref: '#/components/schemas/ServiceUnavailable'
          description: ServiceUnavailable
      summary: Get your total balance
      tags:
      - Wallets
  /wallets/{wallet_name}/reveal-mnemonic:
    post:
      operationId: postWalletsWallet_nameReveal-mnemonic
      parameters:
      - explode: false
        in: path
        name: wallet_name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              password: my-secret-password
            schema:
              $ref: '#/components/schemas/RevealMnemonic'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                mnemonic: vault alarm sad mass witness property virus style good flower
                  rice alpha viable evidence run glare pretty scout evil judge enroll
                  refuse another lava
              schema:
                $ref: '#/components/schemas/RevealMnemonicResult'
        "400":
          content:
            application/json:
              example:
                detail: Something bad in the request
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: BadRequest
        "401":
          content:
            application/json:
              example:
                detail: You shall not pass
              schema:
                $ref: '#/components/schemas/Unauthorized'
          description: Unauthorized
        "404":
          content:
            application/json:
              example:
                resource: wallet-name
                detail: wallet-name not found
              schema:
                $ref: '#/components/schemas/NotFound'
          description: NotFound
        "500":
          content:
            application/json:
              example:
                detail: Ouch
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "503":
          content:
            application/json:
              example:
                detail: Self clique unsynced
              schema:
                $ref: '#/components/schemas/ServiceUnavailable'
          description: ServiceUnavailable
      summary: Reveal your mnemonic. !!! use it with caution !!!
      tags:
      - Wallets
  /wallets/{wallet_name}/transfer:
    post:
      operationId: postWalletsWallet_nameTransfer
      parameters:
      - explode: false
        in: path
        name: wallet_name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              Example0:
                summary: Default
                value:
                  destinations:
                  - address: 1AujpupFP4KWeZvqA7itsHY9cLJmx4qTzojVZrg8W9y
                    attoAlphAmount: "2000000000000000000"
              Example1:
                summary: More settings
                value:
                  destinations:
                  - address: 1AujpupFP4KWeZvqA7itsHY9cLJmx4qTzojVZrg8W9y
                    attoAlphAmount: "2000000000000000000"
                    tokens:
                    - id: 2d11fd6c12435ffb07aaed4d190a505b621b927a5f6e51b61ce0ebe186397bdd
                      amount: "42000000000000000000"
                    - id: bd165d20bd063c7a023d22232a1e75bf46e904067f92b49323fe89fa0fd586bf
                      amount: "1000000000000000000000"
                    lockTime: 1611041396892
                  gas: 20000
                  gasPrice: "100000000000"
                  utxosLimit: 512
            schema:
              $ref: '#/components/schemas/Transfer'
        description: "Format 1: `1000000000000000000`\n\nFormat 2: `x.y ALPH`, where\
          \ `1 ALPH = 1000000000000000000`"
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                txId: 503bfb16230888af4924aa8f8250d7d348b862e267d75d3147f1998050b6da69
                fromGroup: 2
                toGroup: 1
              schema:
                $ref: '#/components/schemas/TransferResult'
        "400":
          content:
            application/json:
              example:
                detail: Something bad in the request
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: BadRequest
        "401":
          content:
            application/json:
              example:
                detail: You shall not pass
              schema:
                $ref: '#/components/schemas/Unauthorized'
          description: Unauthorized
        "404":
          content:
            application/json:
              example:
                resource: wallet-name
                detail: wallet-name not found
              schema:
                $ref: '#/components/schemas/NotFound'
          description: NotFound
        "500":
          content:
            application/json:
              example:
                detail: Ouch
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "503":
          content:
            application/json:
              example:
                detail: Self clique unsynced
              schema:
                $ref: '#/components/schemas/ServiceUnavailable'
          description: ServiceUnavailable
      summary: Transfer ALPH from the active address
      tags:
      - Wallets
  /wallets/{wallet_name}/sweep-active-address:
    post:
      operationId: postWalletsWallet_nameSweep-active-address
      parameters:
      - explode: false
        in: path
        name: wallet_name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              Example0:
                summary: Default
                value:
                  toAddress: 1AujpupFP4KWeZvqA7itsHY9cLJmx4qTzojVZrg8W9y
              Example1:
                summary: More settings
                value:
                  toAddress: 1AujpupFP4KWeZvqA7itsHY9cLJmx4qTzojVZrg8W9y
                  lockTime: 1611041396892
                  gasAmount: 20000
                  gasPrice: "100000000000"
                  utxosLimit: 512
            schema:
              $ref: '#/components/schemas/Sweep'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                results:
                - txId: 503bfb16230888af4924aa8f8250d7d348b862e267d75d3147f1998050b6da69
                  fromGroup: 2
                  toGroup: 1
              schema:
                $ref: '#/components/schemas/TransferResults'
        "400":
          content:
            application/json:
              example:
                detail: Something bad in the request
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: BadRequest
        "401":
          content:
            application/json:
              example:
                detail: You shall not pass
              schema:
                $ref: '#/components/schemas/Unauthorized'
          description: Unauthorized
        "404":
          content:
            application/json:
              example:
                resource: wallet-name
                detail: wallet-name not found
              schema:
                $ref: '#/components/schemas/NotFound'
          description: NotFound
        "500":
          content:
            application/json:
              example:
                detail: Ouch
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "503":
          content:
            application/json:
              example:
                detail: Self clique unsynced
              schema:
                $ref: '#/components/schemas/ServiceUnavailable'
          description: ServiceUnavailable
      summary: Transfer all unlocked ALPH from the active address to another address
      tags:
      - Wallets
  /wallets/{wallet_name}/sweep-all-addresses:
    post:
      operationId: postWalletsWallet_nameSweep-all-addresses
      parameters:
      - explode: false
        in: path
        name: wallet_name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              Example0:
                summary: Default
                value:
                  toAddress: 1AujpupFP4KWeZvqA7itsHY9cLJmx4qTzojVZrg8W9y
              Example1:
                summary: More settings
                value:
                  toAddress: 1AujpupFP4KWeZvqA7itsHY9cLJmx4qTzojVZrg8W9y
                  lockTime: 1611041396892
                  gasAmount: 20000
                  gasPrice: "100000000000"
                  utxosLimit: 512
            schema:
              $ref: '#/components/schemas/Sweep'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                results:
                - txId: 503bfb16230888af4924aa8f8250d7d348b862e267d75d3147f1998050b6da69
                  fromGroup: 2
                  toGroup: 1
              schema:
                $ref: '#/components/schemas/TransferResults'
        "400":
          content:
            application/json:
              example:
                detail: Something bad in the request
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: BadRequest
        "401":
          content:
            application/json:
              example:
                detail: You shall not pass
              schema:
                $ref: '#/components/schemas/Unauthorized'
          description: Unauthorized
        "404":
          content:
            application/json:
              example:
                resource: wallet-name
                detail: wallet-name not found
              schema:
                $ref: '#/components/schemas/NotFound'
          description: NotFound
        "500":
          content:
            application/json:
              example:
                detail: Ouch
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "503":
          content:
            application/json:
              example:
                detail: Self clique unsynced
              schema:
                $ref: '#/components/schemas/ServiceUnavailable'
          description: ServiceUnavailable
      summary: Transfer unlocked ALPH from all addresses (including all mining addresses
        if applicable) to another address
      tags:
      - Wallets
  /wallets/{wallet_name}/sign:
    post:
      operationId: postWalletsWallet_nameSign
      parameters:
      - explode: false
        in: path
        name: wallet_name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              data: 798e9e137aec7c2d59d9655b4ffa640f301f628bf7c365083bb255f6aa5f89ef
            schema:
              $ref: '#/components/schemas/Sign'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                signature: 9e1a35b2931bd04e6780d01c36e3e5337941aa80f173cfe4f4e249c44ab135272b834c1a639db9c89d673a8a30524042b0469672ca845458a5a0cf2cad53221b
              schema:
                $ref: '#/components/schemas/SignResult'
        "400":
          content:
            application/json:
              example:
                detail: Something bad in the request
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: BadRequest
        "401":
          content:
            application/json:
              example:
                detail: You shall not pass
              schema:
                $ref: '#/components/schemas/Unauthorized'
          description: Unauthorized
        "404":
          content:
            application/json:
              example:
                resource: wallet-name
                detail: wallet-name not found
              schema:
                $ref: '#/components/schemas/NotFound'
          description: NotFound
        "500":
          content:
            application/json:
              example:
                detail: Ouch
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "503":
          content:
            application/json:
              example:
                detail: Self clique unsynced
              schema:
                $ref: '#/components/schemas/ServiceUnavailable'
          description: ServiceUnavailable
      summary: Sign the given data and return back the signature
      tags:
      - Wallets
  /wallets/{wallet_name}/addresses:
    get:
      operationId: getWalletsWallet_nameAddresses
      parameters:
      - explode: false
        in: path
        name: wallet_name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                activeAddress: 1AujpupFP4KWeZvqA7itsHY9cLJmx4qTzojVZrg8W9y
                addresses:
                - address: 1AujpupFP4KWeZvqA7itsHY9cLJmx4qTzojVZrg8W9y
                  publicKey: d1b70d2226308b46da297486adb6b4f1a8c1842cb159ac5ec04f384fe2d6f5da28
                  group: 0
                  path: m/44'/1234'/O'/O/O
              schema:
                $ref: '#/components/schemas/Addresses'
        "400":
          content:
            application/json:
              example:
                detail: Something bad in the request
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: BadRequest
        "401":
          content:
            application/json:
              example:
                detail: You shall not pass
              schema:
                $ref: '#/components/schemas/Unauthorized'
          description: Unauthorized
        "404":
          content:
            application/json:
              example:
                resource: wallet-name
                detail: wallet-name not found
              schema:
                $ref: '#/components/schemas/NotFound'
          description: NotFound
        "500":
          content:
            application/json:
              example:
                detail: Ouch
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "503":
          content:
            application/json:
              example:
                detail: Self clique unsynced
              schema:
                $ref: '#/components/schemas/ServiceUnavailable'
          description: ServiceUnavailable
      summary: List all your wallet's addresses
      tags:
      - Wallets
  /wallets/{wallet_name}/addresses/{address}:
    get:
      operationId: getWalletsWallet_nameAddressesAddress
      parameters:
      - explode: false
        in: path
        name: wallet_name
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: address
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                address: 1AujpupFP4KWeZvqA7itsHY9cLJmx4qTzojVZrg8W9y
                publicKey: d1b70d2226308b46da297486adb6b4f1a8c1842cb159ac5ec04f384fe2d6f5da28
                group: 0
                path: m/44'/1234'/O'/O/O
              schema:
                $ref: '#/components/schemas/AddressInfo'
        "400":
          content:
            application/json:
              example:
                detail: Something bad in the request
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: BadRequest
        "401":
          content:
            application/json:
              example:
                detail: You shall not pass
              schema:
                $ref: '#/components/schemas/Unauthorized'
          description: Unauthorized
        "404":
          content:
            application/json:
              example:
                resource: wallet-name
                detail: wallet-name not found
              schema:
                $ref: '#/components/schemas/NotFound'
          description: NotFound
        "500":
          content:
            application/json:
              example:
                detail: Ouch
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "503":
          content:
            application/json:
              example:
                detail: Self clique unsynced
              schema:
                $ref: '#/components/schemas/ServiceUnavailable'
          description: ServiceUnavailable
      summary: Get address' info
      tags:
      - Wallets
  /wallets/{wallet_name}/miner-addresses:
    get:
      description: This endpoint can only be called if the wallet was created with
        the `isMiner = true` flag
      operationId: getWalletsWallet_nameMiner-addresses
      parameters:
      - explode: false
        in: path
        name: wallet_name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
              - addresses:
                - address: 1AujpupFP4KWeZvqA7itsHY9cLJmx4qTzojVZrg8W9y
                  publicKey: d1b70d2226308b46da297486adb6b4f1a8c1842cb159ac5ec04f384fe2d6f5da28
                  group: 0
                  path: m/44'/1234'/O'/O/O
              schema:
                items:
                  $ref: '#/components/schemas/MinerAddressesInfo'
                type: array
        "400":
          content:
            application/json:
              example:
                detail: Something bad in the request
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: BadRequest
        "401":
          content:
            application/json:
              example:
                detail: You shall not pass
              schema:
                $ref: '#/components/schemas/Unauthorized'
          description: Unauthorized
        "404":
          content:
            application/json:
              example:
                resource: wallet-name
                detail: wallet-name not found
              schema:
                $ref: '#/components/schemas/NotFound'
          description: NotFound
        "500":
          content:
            application/json:
              example:
                detail: Ouch
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "503":
          content:
            application/json:
              example:
                detail: Self clique unsynced
              schema:
                $ref: '#/components/schemas/ServiceUnavailable'
          description: ServiceUnavailable
      summary: List all miner addresses per group
      tags:
      - Miners
  /wallets/{wallet_name}/derive-next-address:
    post:
      description: Cannot be called from a miner wallet
      operationId: postWalletsWallet_nameDerive-next-address
      parameters:
      - explode: false
        in: path
        name: wallet_name
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: group
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                address: 1AujpupFP4KWeZvqA7itsHY9cLJmx4qTzojVZrg8W9y
                publicKey: d1b70d2226308b46da297486adb6b4f1a8c1842cb159ac5ec04f384fe2d6f5da28
                group: 0
                path: m/44'/1234'/O'/O/O
              schema:
                $ref: '#/components/schemas/AddressInfo'
        "400":
          content:
            application/json:
              example:
                detail: Something bad in the request
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: BadRequest
        "401":
          content:
            application/json:
              example:
                detail: You shall not pass
              schema:
                $ref: '#/components/schemas/Unauthorized'
          description: Unauthorized
        "404":
          content:
            application/json:
              example:
                resource: wallet-name
                detail: wallet-name not found
              schema:
                $ref: '#/components/schemas/NotFound'
          description: NotFound
        "500":
          content:
            application/json:
              example:
                detail: Ouch
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "503":
          content:
            application/json:
              example:
                detail: Self clique unsynced
              schema:
                $ref: '#/components/schemas/ServiceUnavailable'
          description: ServiceUnavailable
      summary: Derive your next address
      tags:
      - Wallets
  /wallets/{wallet_name}/derive-next-miner-addresses:
    post:
      description: Your wallet need to have been created with the miner flag set to
        true
      operationId: postWalletsWallet_nameDerive-next-miner-addresses
      parameters:
      - explode: false
        in: path
        name: wallet_name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
              - address: 1AujpupFP4KWeZvqA7itsHY9cLJmx4qTzojVZrg8W9y
                publicKey: d1b70d2226308b46da297486adb6b4f1a8c1842cb159ac5ec04f384fe2d6f5da28
                group: 0
                path: m/44'/1234'/O'/O/O
              schema:
                items:
                  $ref: '#/components/schemas/AddressInfo'
                type: array
        "400":
          content:
            application/json:
              example:
                detail: Something bad in the request
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: BadRequest
        "401":
          content:
            application/json:
              example:
                detail: You shall not pass
              schema:
                $ref: '#/components/schemas/Unauthorized'
          description: Unauthorized
        "404":
          content:
            application/json:
              example:
                resource: wallet-name
                detail: wallet-name not found
              schema:
                $ref: '#/components/schemas/NotFound'
          description: NotFound
        "500":
          content:
            application/json:
              example:
                detail: Ouch
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "503":
          content:
            application/json:
              example:
                detail: Self clique unsynced
              schema:
                $ref: '#/components/schemas/ServiceUnavailable'
          description: ServiceUnavailable
      summary: Derive your next miner addresses for each group
      tags:
      - Miners
  /wallets/{wallet_name}/change-active-address:
    post:
      operationId: postWalletsWallet_nameChange-active-address
      parameters:
      - explode: false
        in: path
        name: wallet_name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              address: 1AujpupFP4KWeZvqA7itsHY9cLJmx4qTzojVZrg8W9y
            schema:
              $ref: '#/components/schemas/ChangeActiveAddress'
        required: true
      responses:
        "200": {}
        "400":
          content:
            application/json:
              example:
                detail: Something bad in the request
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: BadRequest
        "401":
          content:
            application/json:
              example:
                detail: You shall not pass
              schema:
                $ref: '#/components/schemas/Unauthorized'
          description: Unauthorized
        "404":
          content:
            application/json:
              example:
                resource: wallet-name
                detail: wallet-name not found
              schema:
                $ref: '#/components/schemas/NotFound'
          description: NotFound
        "500":
          content:
            application/json:
              example:
                detail: Ouch
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "503":
          content:
            application/json:
              example:
                detail: Self clique unsynced
              schema:
                $ref: '#/components/schemas/ServiceUnavailable'
          description: ServiceUnavailable
      summary: Choose the active address
      tags:
      - Wallets
  /infos/node:
    get:
      operationId: getInfosNode
      responses:
        "200":
          content:
            application/json:
              example:
                buildInfo:
                  releaseVersion: 1.2.3
                  commit: 47c01136d52cdf29062f6a3598a36ebc1e4dc57e
                upnp: true
                externalAddress:
                  addr: 1.2.3.4
                  port: 12344
              schema:
                $ref: '#/components/schemas/NodeInfo'
        "400":
          content:
            application/json:
              example:
                detail: Something bad in the request
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: BadRequest
        "401":
          content:
            application/json:
              example:
                detail: You shall not pass
              schema:
                $ref: '#/components/schemas/Unauthorized'
          description: Unauthorized
        "404":
          content:
            application/json:
              example:
                resource: wallet-name
                detail: wallet-name not found
              schema:
                $ref: '#/components/schemas/NotFound'
          description: NotFound
        "500":
          content:
            application/json:
              example:
                detail: Ouch
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "503":
          content:
            application/json:
              example:
                detail: Self clique unsynced
              schema:
                $ref: '#/components/schemas/ServiceUnavailable'
          description: ServiceUnavailable
      summary: Get info about that node
      tags:
      - Infos
  /infos/version:
    get:
      operationId: getInfosVersion
      responses:
        "200":
          content:
            application/json:
              example:
                version: v0.0.1
              schema:
                $ref: '#/components/schemas/NodeVersion'
        "400":
          content:
            application/json:
              example:
                detail: Something bad in the request
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: BadRequest
        "401":
          content:
            application/json:
              example:
                detail: You shall not pass
              schema:
                $ref: '#/components/schemas/Unauthorized'
          description: Unauthorized
        "404":
          content:
            application/json:
              example:
                resource: wallet-name
                detail: wallet-name not found
              schema:
                $ref: '#/components/schemas/NotFound'
          description: NotFound
        "500":
          content:
            application/json:
              example:
                detail: Ouch
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "503":
          content:
            application/json:
              example:
                detail: Self clique unsynced
              schema:
                $ref: '#/components/schemas/ServiceUnavailable'
          description: ServiceUnavailable
      summary: Get version about that node
      tags:
      - Infos
  /infos/chain-params:
    get:
      operationId: getInfosChain-params
      responses:
        "200":
          content:
            application/json:
              example:
                networkId: 0
                numZerosAtLeastInHash: 18
                groupNumPerBroker: 1
                groups: 2
              schema:
                $ref: '#/components/schemas/ChainParams'
        "400":
          content:
            application/json:
              example:
                detail: Something bad in the request
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: BadRequest
        "401":
          content:
            application/json:
              example:
                detail: You shall not pass
              schema:
                $ref: '#/components/schemas/Unauthorized'
          description: Unauthorized
        "404":
          content:
            application/json:
              example:
                resource: wallet-name
                detail: wallet-name not found
              schema:
                $ref: '#/components/schemas/NotFound'
          description: NotFound
        "500":
          content:
            application/json:
              example:
                detail: Ouch
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "503":
          content:
            application/json:
              example:
                detail: Self clique unsynced
              schema:
                $ref: '#/components/schemas/ServiceUnavailable'
          description: ServiceUnavailable
      summary: Get key params about your blockchain
      tags:
      - Infos
  /infos/self-clique:
    get:
      operationId: getInfosSelf-clique
      responses:
        "200":
          content:
            application/json:
              example:
                cliqueId: d1b70d2226308b46da297486adb6b4f1a8c1842cb159ac5ec04f384fe2d6f5da28
                nodes:
                - address: 1.2.3.4
                  restPort: 12377
                  wsPort: 12366
                  minerApiPort: 12355
                selfReady: true
                synced: true
              schema:
                $ref: '#/components/schemas/SelfClique'
        "400":
          content:
            application/json:
              example:
                detail: Something bad in the request
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: BadRequest
        "401":
          content:
            application/json:
              example:
                detail: You shall not pass
              schema:
                $ref: '#/components/schemas/Unauthorized'
          description: Unauthorized
        "404":
          content:
            application/json:
              example:
                resource: wallet-name
                detail: wallet-name not found
              schema:
                $ref: '#/components/schemas/NotFound'
          description: NotFound
        "500":
          content:
            application/json:
              example:
                detail: Ouch
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "503":
          content:
            application/json:
              example:
                detail: Self clique unsynced
              schema:
                $ref: '#/components/schemas/ServiceUnavailable'
          description: ServiceUnavailable
      summary: Get info about your own clique
      tags:
      - Infos
  /infos/inter-clique-peer-info:
    get:
      operationId: getInfosInter-clique-peer-info
      responses:
        "200":
          content:
            application/json:
              example:
              - cliqueId: d1b70d2226308b46da297486adb6b4f1a8c1842cb159ac5ec04f384fe2d6f5da28
                brokerId: 1
                groupNumPerBroker: 1
                address:
                  addr: 1.2.3.4
                  port: 12344
                isSynced: true
                clientVersion: v1.0.0
              schema:
                items:
                  $ref: '#/components/schemas/InterCliquePeerInfo'
                type: array
        "400":
          content:
            application/json:
              example:
                detail: Something bad in the request
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: BadRequest
        "401":
          content:
            application/json:
              example:
                detail: You shall not pass
              schema:
                $ref: '#/components/schemas/Unauthorized'
          description: Unauthorized
        "404":
          content:
            application/json:
              example:
                resource: wallet-name
                detail: wallet-name not found
              schema:
                $ref: '#/components/schemas/NotFound'
          description: NotFound
        "500":
          content:
            application/json:
              example:
                detail: Ouch
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "503":
          content:
            application/json:
              example:
                detail: Self clique unsynced
              schema:
                $ref: '#/components/schemas/ServiceUnavailable'
          description: ServiceUnavailable
      summary: Get infos about the inter cliques
      tags:
      - Infos
  /infos/discovered-neighbors:
    get:
      operationId: getInfosDiscovered-neighbors
      responses:
        "200":
          content:
            application/json:
              example:
              - cliqueId: d1b70d2226308b46da297486adb6b4f1a8c1842cb159ac5ec04f384fe2d6f5da28
                brokerId: 1
                brokerNum: 1
                address:
                  addr: 1.2.3.4
                  port: 12344
              schema:
                items:
                  $ref: '#/components/schemas/BrokerInfo'
                type: array
        "400":
          content:
            application/json:
              example:
                detail: Something bad in the request
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: BadRequest
        "401":
          content:
            application/json:
              example:
                detail: You shall not pass
              schema:
                $ref: '#/components/schemas/Unauthorized'
          description: Unauthorized
        "404":
          content:
            application/json:
              example:
                resource: wallet-name
                detail: wallet-name not found
              schema:
                $ref: '#/components/schemas/NotFound'
          description: NotFound
        "500":
          content:
            application/json:
              example:
                detail: Ouch
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "503":
          content:
            application/json:
              example:
                detail: Self clique unsynced
              schema:
                $ref: '#/components/schemas/ServiceUnavailable'
          description: ServiceUnavailable
      summary: Get discovered neighbors
      tags:
      - Infos
  /infos/misbehaviors:
    get:
      operationId: getInfosMisbehaviors
      responses:
        "200":
          content:
            application/json:
              example:
              - peer: 1.2.3.4
                status:
                  type: Penalty
                  value: 42
              schema:
                items:
                  $ref: '#/components/schemas/PeerMisbehavior'
                type: array
        "400":
          content:
            application/json:
              example:
                detail: Something bad in the request
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: BadRequest
        "401":
          content:
            application/json:
              example:
                detail: You shall not pass
              schema:
                $ref: '#/components/schemas/Unauthorized'
          description: Unauthorized
        "404":
          content:
            application/json:
              example:
                resource: wallet-name
                detail: wallet-name not found
              schema:
                $ref: '#/components/schemas/NotFound'
          description: NotFound
        "500":
          content:
            application/json:
              example:
                detail: Ouch
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "503":
          content:
            application/json:
              example:
                detail: Self clique unsynced
              schema:
                $ref: '#/components/schemas/ServiceUnavailable'
          description: ServiceUnavailable
      summary: Get the misbehaviors of peers
      tags:
      - Infos
    post:
      operationId: postInfosMisbehaviors
      requestBody:
        content:
          application/json:
            examples:
              Example0:
                summary: Unban
                value:
                  type: Unban
                  peers:
                  - 1.2.3.4
              Example1:
                summary: Ban
                value:
                  type: Ban
                  peers:
                  - 1.2.3.4
            schema:
              $ref: '#/components/schemas/MisbehaviorAction'
        required: true
      responses:
        "200": {}
        "400":
          content:
            application/json:
              example:
                detail: Something bad in the request
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: BadRequest
        "401":
          content:
            application/json:
              example:
                detail: You shall not pass
              schema:
                $ref: '#/components/schemas/Unauthorized'
          description: Unauthorized
        "404":
          content:
            application/json:
              example:
                resource: wallet-name
                detail: wallet-name not found
              schema:
                $ref: '#/components/schemas/NotFound'
          description: NotFound
        "500":
          content:
            application/json:
              example:
                detail: Ouch
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "503":
          content:
            application/json:
              example:
                detail: Self clique unsynced
              schema:
                $ref: '#/components/schemas/ServiceUnavailable'
          description: ServiceUnavailable
      summary: Ban/Unban given peers
      tags:
      - Infos
  /infos/unreachable:
    get:
      operationId: getInfosUnreachable
      responses:
        "200":
          content:
            application/json:
              example:
              - 1.2.3.4
              schema:
                items:
                  format: inet-address
                  type: string
                type: array
        "400":
          content:
            application/json:
              example:
                detail: Something bad in the request
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: BadRequest
        "401":
          content:
            application/json:
              example:
                detail: You shall not pass
              schema:
                $ref: '#/components/schemas/Unauthorized'
          description: Unauthorized
        "404":
          content:
            application/json:
              example:
                resource: wallet-name
                detail: wallet-name not found
              schema:
                $ref: '#/components/schemas/NotFound'
          description: NotFound
        "500":
          content:
            application/json:
              example:
                detail: Ouch
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "503":
          content:
            application/json:
              example:
                detail: Self clique unsynced
              schema:
                $ref: '#/components/schemas/ServiceUnavailable'
          description: ServiceUnavailable
      summary: Get the unreachable brokers
      tags:
      - Infos
  /infos/discovery:
    post:
      operationId: postInfosDiscovery
      requestBody:
        content:
          application/json:
            examples:
              Example0:
                summary: Set unreachable
                value:
                  type: Unreachable
                  peers:
                  - 1.2.3.4
              Example1:
                summary: Set reachable
                value:
                  type: Reachable
                  peers:
                  - 1.2.3.4
            schema:
              $ref: '#/components/schemas/DiscoveryAction'
        required: true
      responses:
        "200": {}
        "400":
          content:
            application/json:
              example:
                detail: Something bad in the request
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: BadRequest
        "401":
          content:
            application/json:
              example:
                detail: You shall not pass
              schema:
                $ref: '#/components/schemas/Unauthorized'
          description: Unauthorized
        "404":
          content:
            application/json:
              example:
                resource: wallet-name
                detail: wallet-name not found
              schema:
                $ref: '#/components/schemas/NotFound'
          description: NotFound
        "500":
          content:
            application/json:
              example:
                detail: Ouch
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "503":
          content:
            application/json:
              example:
                detail: Self clique unsynced
              schema:
                $ref: '#/components/schemas/ServiceUnavailable'
          description: ServiceUnavailable
      summary: Set brokers to be unreachable/reachable
      tags:
      - Infos
  /infos/history-hashrate:
    get:
      operationId: getInfosHistory-hashrate
      parameters:
      - explode: true
        in: query
        name: fromTs
        required: true
        schema:
          format: int64
          type: integer
        style: form
      - explode: true
        in: query
        name: toTs
        required: false
        schema:
          format: int64
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              example: "{\"hashrate\":\"100 MH/s\"}"
              schema:
                type: string
        "400":
          content:
            application/json:
              example:
                detail: Something bad in the request
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: BadRequest
        "401":
          content:
            application/json:
              example:
                detail: You shall not pass
              schema:
                $ref: '#/components/schemas/Unauthorized'
          description: Unauthorized
        "404":
          content:
            application/json:
              example:
                resource: wallet-name
                detail: wallet-name not found
              schema:
                $ref: '#/components/schemas/NotFound'
          description: NotFound
        "500":
          content:
            application/json:
              example:
                detail: Ouch
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "503":
          content:
            application/json:
              example:
                detail: Self clique unsynced
              schema:
                $ref: '#/components/schemas/ServiceUnavailable'
          description: ServiceUnavailable
      summary: Get history average hashrate on the given time interval
      tags:
      - Infos
  /infos/current-hashrate:
    get:
      operationId: getInfosCurrent-hashrate
      parameters:
      - explode: true
        in: query
        name: timespan
        required: false
        schema:
          format: int64
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              example: "{\"hashrate\":\"100 MH/s\"}"
              schema:
                type: string
        "400":
          content:
            application/json:
              example:
                detail: Something bad in the request
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: BadRequest
        "401":
          content:
            application/json:
              example:
                detail: You shall not pass
              schema:
                $ref: '#/components/schemas/Unauthorized'
          description: Unauthorized
        "404":
          content:
            application/json:
              example:
                resource: wallet-name
                detail: wallet-name not found
              schema:
                $ref: '#/components/schemas/NotFound'
          description: NotFound
        "500":
          content:
            application/json:
              example:
                detail: Ouch
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "503":
          content:
            application/json:
              example:
                detail: Self clique unsynced
              schema:
                $ref: '#/components/schemas/ServiceUnavailable'
          description: ServiceUnavailable
      summary: Get average hashrate from `now - timespan(millis)` to `now`
      tags:
      - Infos
  /blockflow:
    get:
      operationId: getBlockflow
      parameters:
      - explode: true
        in: query
        name: fromTs
        required: true
        schema:
          format: int64
          type: integer
        style: form
      - explode: true
        in: query
        name: toTs
        required: false
        schema:
          format: int64
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                blocks:
                - - hash: bdaf9dc514ce7d34b6474b8ca10a3dfb93ba997cb9d5ff1ea724ebe2af48abe5
                    timestamp: 1611041396892
                    chainFrom: 1
                    chainTo: 2
                    height: 42
                    deps:
                    - bdaf9dc514ce7d34b6474b8ca10a3dfb93ba997cb9d5ff1ea724ebe2af48abe5
                    - bdaf9dc514ce7d34b6474b8ca10a3dfb93ba997cb9d5ff1ea724ebe2af48abe5
                    transactions:
                    - unsigned:
                        txId: 798e9e137aec7c2d59d9655b4ffa640f301f628bf7c365083bb255f6aa5f89ef
                        version: 1
                        networkId: 1
                        gasAmount: 20000
                        gasPrice: "100000000000"
                        inputs:
                        - outputRef:
                            hint: 23412
                            key: 798e9e137aec7c2d59d9655b4ffa640f301f628bf7c365083bb255f6aa5f89ef
                          unlockScript: 00d1b70d2226308b46da297486adb6b4f1a8c1842cb159ac5ec04f384fe2d6f5da28
                        fixedOutputs:
                        - hint: 1
                          key: 798e9e137aec7c2d59d9655b4ffa640f301f628bf7c365083bb255f6aa5f89ef
                          attoAlphAmount: "2000000000000000000"
                          address: 1AujpupFP4KWeZvqA7itsHY9cLJmx4qTzojVZrg8W9y
                          tokens:
                          - id: 2d11fd6c12435ffb07aaed4d190a505b621b927a5f6e51b61ce0ebe186397bdd
                            amount: "42000000000000000000"
                          - id: bd165d20bd063c7a023d22232a1e75bf46e904067f92b49323fe89fa0fd586bf
                            amount: "1000000000000000000000"
                          lockTime: 1611041396892
                          message: 798e9e137aec7c2d59d9655b4ffa640f301f628bf7c365083bb255f6aa5f89ef
                      scriptExecutionOk: true
                      contractInputs:
                      - hint: 23412
                        key: 798e9e137aec7c2d59d9655b4ffa640f301f628bf7c365083bb255f6aa5f89ef
                      generatedOutputs:
                      - type: AssetOutput
                        hint: 1
                        key: 798e9e137aec7c2d59d9655b4ffa640f301f628bf7c365083bb255f6aa5f89ef
                        attoAlphAmount: "2000000000000000000"
                        address: 1AujpupFP4KWeZvqA7itsHY9cLJmx4qTzojVZrg8W9y
                        tokens:
                        - id: 2d11fd6c12435ffb07aaed4d190a505b621b927a5f6e51b61ce0ebe186397bdd
                          amount: "42000000000000000000"
                        - id: bd165d20bd063c7a023d22232a1e75bf46e904067f92b49323fe89fa0fd586bf
                          amount: "1000000000000000000000"
                        lockTime: 1611041396892
                        message: 798e9e137aec7c2d59d9655b4ffa640f301f628bf7c365083bb255f6aa5f89ef
                      - type: ContractOutput
                        hint: 1
                        key: 798e9e137aec7c2d59d9655b4ffa640f301f628bf7c365083bb255f6aa5f89ef
                        attoAlphAmount: "2000000000000000000"
                        address: uomjgUz6D4tLejTkQtbNJMY8apAjTm1bgQf7em1wDV7S
                        tokens:
                        - id: 2d11fd6c12435ffb07aaed4d190a505b621b927a5f6e51b61ce0ebe186397bdd
                          amount: "42000000000000000000"
                        - id: bd165d20bd063c7a023d22232a1e75bf46e904067f92b49323fe89fa0fd586bf
                          amount: "1000000000000000000000"
                      inputSignatures:
                      - 9e1a35b2931bd04e6780d01c36e3e5337941aa80f173cfe4f4e249c44ab135272b834c1a639db9c89d673a8a30524042b0469672ca845458a5a0cf2cad53221b
                      scriptSignatures:
                      - 9e1a35b2931bd04e6780d01c36e3e5337941aa80f173cfe4f4e249c44ab135272b834c1a639db9c89d673a8a30524042b0469672ca845458a5a0cf2cad53221b
                    nonce: 798e9e137aec7c2d59d9655b4ffa640f301f628bf7c365083bb255f6aa5f89ef
                    version: 1
                    depStateHash: 798e9e137aec7c2d59d9655b4ffa640f301f628bf7c365083bb255f6aa5f89ef
                    txsHash: 798e9e137aec7c2d59d9655b4ffa640f301f628bf7c365083bb255f6aa5f89ef
                    target: 798e9e137aec7c2d59d9655b4ffa640f301f628bf7c365083bb255f6aa5f89ef
              schema:
                $ref: '#/components/schemas/FetchResponse'
        "400":
          content:
            application/json:
              example:
                detail: Something bad in the request
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: BadRequest
        "401":
          content:
            application/json:
              example:
                detail: You shall not pass
              schema:
                $ref: '#/components/schemas/Unauthorized'
          description: Unauthorized
        "404":
          content:
            application/json:
              example:
                resource: wallet-name
                detail: wallet-name not found
              schema:
                $ref: '#/components/schemas/NotFound'
          description: NotFound
        "500":
          content:
            application/json:
              example:
                detail: Ouch
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "503":
          content:
            application/json:
              example:
                detail: Self clique unsynced
              schema:
                $ref: '#/components/schemas/ServiceUnavailable'
          description: ServiceUnavailable
      summary: List blocks on the given time interval
      tags:
      - Blockflow
  /blockflow/blocks/{block_hash}:
    get:
      operationId: getBlockflowBlocksBlock_hash
      parameters:
      - explode: false
        in: path
        name: block_hash
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                hash: bdaf9dc514ce7d34b6474b8ca10a3dfb93ba997cb9d5ff1ea724ebe2af48abe5
                timestamp: 1611041396892
                chainFrom: 1
                chainTo: 2
                height: 42
                deps:
                - bdaf9dc514ce7d34b6474b8ca10a3dfb93ba997cb9d5ff1ea724ebe2af48abe5
                - bdaf9dc514ce7d34b6474b8ca10a3dfb93ba997cb9d5ff1ea724ebe2af48abe5
                transactions:
                - unsigned:
                    txId: 798e9e137aec7c2d59d9655b4ffa640f301f628bf7c365083bb255f6aa5f89ef
                    version: 1
                    networkId: 1
                    gasAmount: 20000
                    gasPrice: "100000000000"
                    inputs:
                    - outputRef:
                        hint: 23412
                        key: 798e9e137aec7c2d59d9655b4ffa640f301f628bf7c365083bb255f6aa5f89ef
                      unlockScript: 00d1b70d2226308b46da297486adb6b4f1a8c1842cb159ac5ec04f384fe2d6f5da28
                    fixedOutputs:
                    - hint: 1
                      key: 798e9e137aec7c2d59d9655b4ffa640f301f628bf7c365083bb255f6aa5f89ef
                      attoAlphAmount: "2000000000000000000"
                      address: 1AujpupFP4KWeZvqA7itsHY9cLJmx4qTzojVZrg8W9y
                      tokens:
                      - id: 2d11fd6c12435ffb07aaed4d190a505b621b927a5f6e51b61ce0ebe186397bdd
                        amount: "42000000000000000000"
                      - id: bd165d20bd063c7a023d22232a1e75bf46e904067f92b49323fe89fa0fd586bf
                        amount: "1000000000000000000000"
                      lockTime: 1611041396892
                      message: 798e9e137aec7c2d59d9655b4ffa640f301f628bf7c365083bb255f6aa5f89ef
                  scriptExecutionOk: true
                  contractInputs:
                  - hint: 23412
                    key: 798e9e137aec7c2d59d9655b4ffa640f301f628bf7c365083bb255f6aa5f89ef
                  generatedOutputs:
                  - type: AssetOutput
                    hint: 1
                    key: 798e9e137aec7c2d59d9655b4ffa640f301f628bf7c365083bb255f6aa5f89ef
                    attoAlphAmount: "2000000000000000000"
                    address: 1AujpupFP4KWeZvqA7itsHY9cLJmx4qTzojVZrg8W9y
                    tokens:
                    - id: 2d11fd6c12435ffb07aaed4d190a505b621b927a5f6e51b61ce0ebe186397bdd
                      amount: "42000000000000000000"
                    - id: bd165d20bd063c7a023d22232a1e75bf46e904067f92b49323fe89fa0fd586bf
                      amount: "1000000000000000000000"
                    lockTime: 1611041396892
                    message: 798e9e137aec7c2d59d9655b4ffa640f301f628bf7c365083bb255f6aa5f89ef
                  - type: ContractOutput
                    hint: 1
                    key: 798e9e137aec7c2d59d9655b4ffa640f301f628bf7c365083bb255f6aa5f89ef
                    attoAlphAmount: "2000000000000000000"
                    address: uomjgUz6D4tLejTkQtbNJMY8apAjTm1bgQf7em1wDV7S
                    tokens:
                    - id: 2d11fd6c12435ffb07aaed4d190a505b621b927a5f6e51b61ce0ebe186397bdd
                      amount: "42000000000000000000"
                    - id: bd165d20bd063c7a023d22232a1e75bf46e904067f92b49323fe89fa0fd586bf
                      amount: "1000000000000000000000"
                  inputSignatures:
                  - 9e1a35b2931bd04e6780d01c36e3e5337941aa80f173cfe4f4e249c44ab135272b834c1a639db9c89d673a8a30524042b0469672ca845458a5a0cf2cad53221b
                  scriptSignatures:
                  - 9e1a35b2931bd04e6780d01c36e3e5337941aa80f173cfe4f4e249c44ab135272b834c1a639db9c89d673a8a30524042b0469672ca845458a5a0cf2cad53221b
                nonce: 798e9e137aec7c2d59d9655b4ffa640f301f628bf7c365083bb255f6aa5f89ef
                version: 1
                depStateHash: 798e9e137aec7c2d59d9655b4ffa640f301f628bf7c365083bb255f6aa5f89ef
                txsHash: 798e9e137aec7c2d59d9655b4ffa640f301f628bf7c365083bb255f6aa5f89ef
                target: 798e9e137aec7c2d59d9655b4ffa640f301f628bf7c365083bb255f6aa5f89ef
              schema:
                $ref: '#/components/schemas/BlockEntry'
        "400":
          content:
            application/json:
              example:
                detail: Something bad in the request
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: BadRequest
        "401":
          content:
            application/json:
              example:
                detail: You shall not pass
              schema:
                $ref: '#/components/schemas/Unauthorized'
          description: Unauthorized
        "404":
          content:
            application/json:
              example:
                resource: wallet-name
                detail: wallet-name not found
              schema:
                $ref: '#/components/schemas/NotFound'
          description: NotFound
        "500":
          content:
            application/json:
              example:
                detail: Ouch
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "503":
          content:
            application/json:
              example:
                detail: Self clique unsynced
              schema:
                $ref: '#/components/schemas/ServiceUnavailable'
          description: ServiceUnavailable
      summary: Get a block with hash
      tags:
      - Blockflow
  /blockflow/is-block-in-main-chain:
    get:
      operationId: getBlockflowIs-block-in-main-chain
      parameters:
      - explode: true
        in: query
        name: blockHash
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              example: true
              schema:
                type: boolean
        "400":
          content:
            application/json:
              example:
                detail: Something bad in the request
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: BadRequest
        "401":
          content:
            application/json:
              example:
                detail: You shall not pass
              schema:
                $ref: '#/components/schemas/Unauthorized'
          description: Unauthorized
        "404":
          content:
            application/json:
              example:
                resource: wallet-name
                detail: wallet-name not found
              schema:
                $ref: '#/components/schemas/NotFound'
          description: NotFound
        "500":
          content:
            application/json:
              example:
                detail: Ouch
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "503":
          content:
            application/json:
              example:
                detail: Self clique unsynced
              schema:
                $ref: '#/components/schemas/ServiceUnavailable'
          description: ServiceUnavailable
      summary: Check if the block is in main chain
      tags:
      - Blockflow
  /addresses/{address}/balance:
    get:
      operationId: getAddressesAddressBalance
      parameters:
      - explode: false
        in: path
        name: address
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Example0:
                  summary: Default
                  value:
                    balance: "10000000000000000000"
                    balanceHint: 10 ALPH
                    lockedBalance: "5000000000000000000"
                    lockedBalanceHint: 5 ALPH
                    utxoNum: 3
                Example1:
                  summary: More settings
                  value:
                    balance: "10000000000000000000"
                    balanceHint: 10 ALPH
                    lockedBalance: "5000000000000000000"
                    lockedBalanceHint: 5 ALPH
                    utxoNum: 3
                    warning: Result might not include all utxos and is maybe unprecise
              schema:
                $ref: '#/components/schemas/Balance'
          description: "Format 1: `1000000000000000000`\n\nFormat 2: `x.y ALPH`, where\
            \ `1 ALPH = 1000000000000000000`"
        "400":
          content:
            application/json:
              example:
                detail: Something bad in the request
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: BadRequest
        "401":
          content:
            application/json:
              example:
                detail: You shall not pass
              schema:
                $ref: '#/components/schemas/Unauthorized'
          description: Unauthorized
        "404":
          content:
            application/json:
              example:
                resource: wallet-name
                detail: wallet-name not found
              schema:
                $ref: '#/components/schemas/NotFound'
          description: NotFound
        "500":
          content:
            application/json:
              example:
                detail: Ouch
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "503":
          content:
            application/json:
              example:
                detail: Self clique unsynced
              schema:
                $ref: '#/components/schemas/ServiceUnavailable'
          description: ServiceUnavailable
      summary: Get the balance of an address
      tags:
      - Addresses
  /addresses/{address}/utxos:
    get:
      operationId: getAddressesAddressUtxos
      parameters:
      - explode: false
        in: path
        name: address
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Example0:
                  summary: Default
                  value:
                    utxos:
                    - ref:
                        hint: 23412
                        key: 798e9e137aec7c2d59d9655b4ffa640f301f628bf7c365083bb255f6aa5f89ef
                      amount: "10000000000000000000"
                      tokens:
                      - id: 2d11fd6c12435ffb07aaed4d190a505b621b927a5f6e51b61ce0ebe186397bdd
                        amount: "42000000000000000000"
                      - id: bd165d20bd063c7a023d22232a1e75bf46e904067f92b49323fe89fa0fd586bf
                        amount: "1000000000000000000000"
                      lockTime: 1611041396892
                      additionalData: 798e9e137aec7c2d59d9655b4ffa640f301f628bf7c365083bb255f6aa5f89ef
                Example1:
                  summary: More settings
                  value:
                    utxos:
                    - ref:
                        hint: 23412
                        key: 798e9e137aec7c2d59d9655b4ffa640f301f628bf7c365083bb255f6aa5f89ef
                      amount: "10000000000000000000"
                      tokens:
                      - id: 2d11fd6c12435ffb07aaed4d190a505b621b927a5f6e51b61ce0ebe186397bdd
                        amount: "42000000000000000000"
                      - id: bd165d20bd063c7a023d22232a1e75bf46e904067f92b49323fe89fa0fd586bf
                        amount: "1000000000000000000000"
                      lockTime: 1611041396892
                      additionalData: 798e9e137aec7c2d59d9655b4ffa640f301f628bf7c365083bb255f6aa5f89ef
                    warning: Result might not contains all utxos
              schema:
                $ref: '#/components/schemas/UTXOs'
        "400":
          content:
            application/json:
              example:
                detail: Something bad in the request
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: BadRequest
        "401":
          content:
            application/json:
              example:
                detail: You shall not pass
              schema:
                $ref: '#/components/schemas/Unauthorized'
          description: Unauthorized
        "404":
          content:
            application/json:
              example:
                resource: wallet-name
                detail: wallet-name not found
              schema:
                $ref: '#/components/schemas/NotFound'
          description: NotFound
        "500":
          content:
            application/json:
              example:
                detail: Ouch
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "503":
          content:
            application/json:
              example:
                detail: Self clique unsynced
              schema:
                $ref: '#/components/schemas/ServiceUnavailable'
          description: ServiceUnavailable
      summary: Get the UTXOs of an address
      tags:
      - Addresses
  /addresses/{address}/group:
    get:
      operationId: getAddressesAddressGroup
      parameters:
      - explode: false
        in: path
        name: address
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                group: 2
              schema:
                $ref: '#/components/schemas/Group'
        "400":
          content:
            application/json:
              example:
                detail: Something bad in the request
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: BadRequest
        "401":
          content:
            application/json:
              example:
                detail: You shall not pass
              schema:
                $ref: '#/components/schemas/Unauthorized'
          description: Unauthorized
        "404":
          content:
            application/json:
              example:
                resource: wallet-name
                detail: wallet-name not found
              schema:
                $ref: '#/components/schemas/NotFound'
          description: NotFound
        "500":
          content:
            application/json:
              example:
                detail: Ouch
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "503":
          content:
            application/json:
              example:
                detail: Self clique unsynced
              schema:
                $ref: '#/components/schemas/ServiceUnavailable'
          description: ServiceUnavailable
      summary: Get the group of an address
      tags:
      - Addresses
  /blockflow/hashes:
    get:
      operationId: getBlockflowHashes
      parameters:
      - explode: true
        in: query
        name: fromGroup
        required: true
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: toGroup
        required: true
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: height
        required: true
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                headers:
                - bdaf9dc514ce7d34b6474b8ca10a3dfb93ba997cb9d5ff1ea724ebe2af48abe5
                - bdaf9dc514ce7d34b6474b8ca10a3dfb93ba997cb9d5ff1ea724ebe2af48abe5
                - bdaf9dc514ce7d34b6474b8ca10a3dfb93ba997cb9d5ff1ea724ebe2af48abe5
              schema:
                $ref: '#/components/schemas/HashesAtHeight'
        "400":
          content:
            application/json:
              example:
                detail: Something bad in the request
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: BadRequest
        "401":
          content:
            application/json:
              example:
                detail: You shall not pass
              schema:
                $ref: '#/components/schemas/Unauthorized'
          description: Unauthorized
        "404":
          content:
            application/json:
              example:
                resource: wallet-name
                detail: wallet-name not found
              schema:
                $ref: '#/components/schemas/NotFound'
          description: NotFound
        "500":
          content:
            application/json:
              example:
                detail: Ouch
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "503":
          content:
            application/json:
              example:
                detail: Self clique unsynced
              schema:
                $ref: '#/components/schemas/ServiceUnavailable'
          description: ServiceUnavailable
      summary: Get all block's hashes at given height for given groups
      tags:
      - Blockflow
  /blockflow/chain-info:
    get:
      operationId: getBlockflowChain-info
      parameters:
      - explode: true
        in: query
        name: fromGroup
        required: true
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: toGroup
        required: true
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                currentHeight: 42
              schema:
                $ref: '#/components/schemas/ChainInfo'
        "400":
          content:
            application/json:
              example:
                detail: Something bad in the request
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: BadRequest
        "401":
          content:
            application/json:
              example:
                detail: You shall not pass
              schema:
                $ref: '#/components/schemas/Unauthorized'
          description: Unauthorized
        "404":
          content:
            application/json:
              example:
                resource: wallet-name
                detail: wallet-name not found
              schema:
                $ref: '#/components/schemas/NotFound'
          description: NotFound
        "500":
          content:
            application/json:
              example:
                detail: Ouch
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "503":
          content:
            application/json:
              example:
                detail: Self clique unsynced
              schema:
                $ref: '#/components/schemas/ServiceUnavailable'
          description: ServiceUnavailable
      summary: Get infos about the chain from the given groups
      tags:
      - Blockflow
  /blockflow/headers/{block_hash}:
    get:
      operationId: getBlockflowHeadersBlock_hash
      parameters:
      - explode: false
        in: path
        name: block_hash
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                hash: bdaf9dc514ce7d34b6474b8ca10a3dfb93ba997cb9d5ff1ea724ebe2af48abe5
                timestamp: 1611041396892
                chainFrom: 1
                chainTo: 2
                height: 42
                deps:
                - bdaf9dc514ce7d34b6474b8ca10a3dfb93ba997cb9d5ff1ea724ebe2af48abe5
                - bdaf9dc514ce7d34b6474b8ca10a3dfb93ba997cb9d5ff1ea724ebe2af48abe5
              schema:
                $ref: '#/components/schemas/BlockHeaderEntry'
        "400":
          content:
            application/json:
              example:
                detail: Something bad in the request
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: BadRequest
        "401":
          content:
            application/json:
              example:
                detail: You shall not pass
              schema:
                $ref: '#/components/schemas/Unauthorized'
          description: Unauthorized
        "404":
          content:
            application/json:
              example:
                resource: wallet-name
                detail: wallet-name not found
              schema:
                $ref: '#/components/schemas/NotFound'
          description: NotFound
        "500":
          content:
            application/json:
              example:
                detail: Ouch
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "503":
          content:
            application/json:
              example:
                detail: Self clique unsynced
              schema:
                $ref: '#/components/schemas/ServiceUnavailable'
          description: ServiceUnavailable
      summary: Get block header
      tags:
      - Blockflow
  /transactions/unconfirmed:
    get:
      operationId: getTransactionsUnconfirmed
      responses:
        "200":
          content:
            application/json:
              example:
              - fromGroup: 0
                toGroup: 1
                unconfirmedTransactions:
                - unsigned:
                    txId: 798e9e137aec7c2d59d9655b4ffa640f301f628bf7c365083bb255f6aa5f89ef
                    version: 1
                    networkId: 1
                    gasAmount: 20000
                    gasPrice: "100000000000"
                    inputs:
                    - outputRef:
                        hint: 23412
                        key: 798e9e137aec7c2d59d9655b4ffa640f301f628bf7c365083bb255f6aa5f89ef
                      unlockScript: 00d1b70d2226308b46da297486adb6b4f1a8c1842cb159ac5ec04f384fe2d6f5da28
                    fixedOutputs:
                    - hint: 1
                      key: 798e9e137aec7c2d59d9655b4ffa640f301f628bf7c365083bb255f6aa5f89ef
                      attoAlphAmount: "2000000000000000000"
                      address: 1AujpupFP4KWeZvqA7itsHY9cLJmx4qTzojVZrg8W9y
                      tokens:
                      - id: 2d11fd6c12435ffb07aaed4d190a505b621b927a5f6e51b61ce0ebe186397bdd
                        amount: "42000000000000000000"
                      - id: bd165d20bd063c7a023d22232a1e75bf46e904067f92b49323fe89fa0fd586bf
                        amount: "1000000000000000000000"
                      lockTime: 1611041396892
                      message: 798e9e137aec7c2d59d9655b4ffa640f301f628bf7c365083bb255f6aa5f89ef
                  inputSignatures:
                  - 9e1a35b2931bd04e6780d01c36e3e5337941aa80f173cfe4f4e249c44ab135272b834c1a639db9c89d673a8a30524042b0469672ca845458a5a0cf2cad53221b
                  scriptSignatures:
                  - 9e1a35b2931bd04e6780d01c36e3e5337941aa80f173cfe4f4e249c44ab135272b834c1a639db9c89d673a8a30524042b0469672ca845458a5a0cf2cad53221b
              schema:
                items:
                  $ref: '#/components/schemas/UnconfirmedTransactions'
                type: array
        "400":
          content:
            application/json:
              example:
                detail: Something bad in the request
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: BadRequest
        "401":
          content:
            application/json:
              example:
                detail: You shall not pass
              schema:
                $ref: '#/components/schemas/Unauthorized'
          description: Unauthorized
        "404":
          content:
            application/json:
              example:
                resource: wallet-name
                detail: wallet-name not found
              schema:
                $ref: '#/components/schemas/NotFound'
          description: NotFound
        "500":
          content:
            application/json:
              example:
                detail: Ouch
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "503":
          content:
            application/json:
              example:
                detail: Self clique unsynced
              schema:
                $ref: '#/components/schemas/ServiceUnavailable'
          description: ServiceUnavailable
      summary: List unconfirmed transactions
      tags:
      - Transactions
  /transactions/build:
    post:
      operationId: postTransactionsBuild
      requestBody:
        content:
          application/json:
            examples:
              Example0:
                summary: Default
                value:
                  fromPublicKey: d1b70d2226308b46da297486adb6b4f1a8c1842cb159ac5ec04f384fe2d6f5da28
                  destinations:
                  - address: 1AujpupFP4KWeZvqA7itsHY9cLJmx4qTzojVZrg8W9y
                    attoAlphAmount: "2000000000000000000"
              Example1:
                summary: More settings
                value:
                  fromPublicKey: d1b70d2226308b46da297486adb6b4f1a8c1842cb159ac5ec04f384fe2d6f5da28
                  destinations:
                  - address: 1AujpupFP4KWeZvqA7itsHY9cLJmx4qTzojVZrg8W9y
                    attoAlphAmount: "2000000000000000000"
                    tokens:
                    - id: 2d11fd6c12435ffb07aaed4d190a505b621b927a5f6e51b61ce0ebe186397bdd
                      amount: "42000000000000000000"
                    - id: bd165d20bd063c7a023d22232a1e75bf46e904067f92b49323fe89fa0fd586bf
                      amount: "1000000000000000000000"
                    lockTime: 1611041396892
                  utxos:
                  - hint: 23412
                    key: 798e9e137aec7c2d59d9655b4ffa640f301f628bf7c365083bb255f6aa5f89ef
                  gasAmount: 20000
                  gasPrice: "100000000000"
            schema:
              $ref: '#/components/schemas/BuildTransaction'
        description: "Format 1: `1000000000000000000`\n\nFormat 2: `x.y ALPH`, where\
          \ `1 ALPH = 1000000000000000000`"
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                unsignedTx: 35d1b2a520a0da34c5eb8d712aa9cc
                gasAmount: 20000
                gasPrice: "100000000000"
                txId: 798e9e137aec7c2d59d9655b4ffa640f301f628bf7c365083bb255f6aa5f89ef
                fromGroup: 2
                toGroup: 1
              schema:
                $ref: '#/components/schemas/BuildTransactionResult'
        "400":
          content:
            application/json:
              example:
                detail: Something bad in the request
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: BadRequest
        "401":
          content:
            application/json:
              example:
                detail: You shall not pass
              schema:
                $ref: '#/components/schemas/Unauthorized'
          description: Unauthorized
        "404":
          content:
            application/json:
              example:
                resource: wallet-name
                detail: wallet-name not found
              schema:
                $ref: '#/components/schemas/NotFound'
          description: NotFound
        "500":
          content:
            application/json:
              example:
                detail: Ouch
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "503":
          content:
            application/json:
              example:
                detail: Self clique unsynced
              schema:
                $ref: '#/components/schemas/ServiceUnavailable'
          description: ServiceUnavailable
      summary: Build an unsigned transaction to a number of recipients
      tags:
      - Transactions
  /transactions/sweep-address/build:
    post:
      operationId: postTransactionsSweep-addressBuild
      requestBody:
        content:
          application/json:
            examples:
              Example0:
                summary: Default
                value:
                  fromPublicKey: d1b70d2226308b46da297486adb6b4f1a8c1842cb159ac5ec04f384fe2d6f5da28
                  toAddress: 1AujpupFP4KWeZvqA7itsHY9cLJmx4qTzojVZrg8W9y
              Example1:
                summary: More settings
                value:
                  fromPublicKey: d1b70d2226308b46da297486adb6b4f1a8c1842cb159ac5ec04f384fe2d6f5da28
                  toAddress: 1AujpupFP4KWeZvqA7itsHY9cLJmx4qTzojVZrg8W9y
                  lockTime: 1611041396892
                  gasAmount: 20000
                  gasPrice: "100000000000"
            schema:
              $ref: '#/components/schemas/BuildSweepAddressTransactions'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                unsignedTxs:
                - txId: 798e9e137aec7c2d59d9655b4ffa640f301f628bf7c365083bb255f6aa5f89ef
                  unsignedTx: 35d1b2a520a0da34c5eb8d712aa9cc
                  gasAmount: 20000
                  gasPrice: "100000000000"
                fromGroup: 2
                toGroup: 1
              schema:
                $ref: '#/components/schemas/BuildSweepAddressTransactionsResult'
        "400":
          content:
            application/json:
              example:
                detail: Something bad in the request
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: BadRequest
        "401":
          content:
            application/json:
              example:
                detail: You shall not pass
              schema:
                $ref: '#/components/schemas/Unauthorized'
          description: Unauthorized
        "404":
          content:
            application/json:
              example:
                resource: wallet-name
                detail: wallet-name not found
              schema:
                $ref: '#/components/schemas/NotFound'
          description: NotFound
        "500":
          content:
            application/json:
              example:
                detail: Ouch
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "503":
          content:
            application/json:
              example:
                detail: Self clique unsynced
              schema:
                $ref: '#/components/schemas/ServiceUnavailable'
          description: ServiceUnavailable
      summary: Build unsigned transactions to send all unlocked balanced of one address
        to another address
      tags:
      - Transactions
  /transactions/submit:
    post:
      operationId: postTransactionsSubmit
      requestBody:
        content:
          application/json:
            example:
              unsignedTx: 35d1b2a520a0da34c5eb8d712aa9cc
              signature: 9e1a35b2931bd04e6780d01c36e3e5337941aa80f173cfe4f4e249c44ab135272b834c1a639db9c89d673a8a30524042b0469672ca845458a5a0cf2cad53221b
            schema:
              $ref: '#/components/schemas/SubmitTransaction'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                txId: 503bfb16230888af4924aa8f8250d7d348b862e267d75d3147f1998050b6da69
                fromGroup: 2
                toGroup: 1
              schema:
                $ref: '#/components/schemas/SubmitTxResult'
        "400":
          content:
            application/json:
              example:
                detail: Something bad in the request
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: BadRequest
        "401":
          content:
            application/json:
              example:
                detail: You shall not pass
              schema:
                $ref: '#/components/schemas/Unauthorized'
          description: Unauthorized
        "404":
          content:
            application/json:
              example:
                resource: wallet-name
                detail: wallet-name not found
              schema:
                $ref: '#/components/schemas/NotFound'
          description: NotFound
        "500":
          content:
            application/json:
              example:
                detail: Ouch
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "503":
          content:
            application/json:
              example:
                detail: Self clique unsynced
              schema:
                $ref: '#/components/schemas/ServiceUnavailable'
          description: ServiceUnavailable
      summary: Submit a signed transaction
      tags:
      - Transactions
  /transactions/decode-unsigned-tx:
    post:
      operationId: postTransactionsDecode-unsigned-tx
      requestBody:
        content:
          application/json:
            example:
              unsignedTx: 35d1b2a520a0da34c5eb8d712aa9cc
            schema:
              $ref: '#/components/schemas/DecodeUnsignedTx'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                fromGroup: 1
                toGroup: 2
                unsignedTx:
                  txId: 798e9e137aec7c2d59d9655b4ffa640f301f628bf7c365083bb255f6aa5f89ef
                  version: 1
                  networkId: 1
                  gasAmount: 20000
                  gasPrice: "100000000000"
                  inputs:
                  - outputRef:
                      hint: 23412
                      key: 798e9e137aec7c2d59d9655b4ffa640f301f628bf7c365083bb255f6aa5f89ef
                    unlockScript: 00d1b70d2226308b46da297486adb6b4f1a8c1842cb159ac5ec04f384fe2d6f5da28
                  fixedOutputs:
                  - hint: 1
                    key: 798e9e137aec7c2d59d9655b4ffa640f301f628bf7c365083bb255f6aa5f89ef
                    attoAlphAmount: "2000000000000000000"
                    address: 1AujpupFP4KWeZvqA7itsHY9cLJmx4qTzojVZrg8W9y
                    tokens:
                    - id: 2d11fd6c12435ffb07aaed4d190a505b621b927a5f6e51b61ce0ebe186397bdd
                      amount: "42000000000000000000"
                    - id: bd165d20bd063c7a023d22232a1e75bf46e904067f92b49323fe89fa0fd586bf
                      amount: "1000000000000000000000"
                    lockTime: 1611041396892
                    message: 798e9e137aec7c2d59d9655b4ffa640f301f628bf7c365083bb255f6aa5f89ef
              schema:
                $ref: '#/components/schemas/DecodeUnsignedTxResult'
        "400":
          content:
            application/json:
              example:
                detail: Something bad in the request
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: BadRequest
        "401":
          content:
            application/json:
              example:
                detail: You shall not pass
              schema:
                $ref: '#/components/schemas/Unauthorized'
          description: Unauthorized
        "404":
          content:
            application/json:
              example:
                resource: wallet-name
                detail: wallet-name not found
              schema:
                $ref: '#/components/schemas/NotFound'
          description: NotFound
        "500":
          content:
            application/json:
              example:
                detail: Ouch
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "503":
          content:
            application/json:
              example:
                detail: Self clique unsynced
              schema:
                $ref: '#/components/schemas/ServiceUnavailable'
          description: ServiceUnavailable
      summary: Decode an unsigned transaction
      tags:
      - Transactions
  /transactions/status:
    get:
      operationId: getTransactionsStatus
      parameters:
      - explode: true
        in: query
        name: txId
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: fromGroup
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: toGroup
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                Example0:
                  value:
                    type: Confirmed
                    blockHash: bdaf9dc514ce7d34b6474b8ca10a3dfb93ba997cb9d5ff1ea724ebe2af48abe5
                    txIndex: 0
                    chainConfirmations: 1
                    fromGroupConfirmations: 2
                    toGroupConfirmations: 3
                Example1:
                  summary: Tx is still in mempool
                  value:
                    type: MemPooled
                Example2:
                  summary: Cannot find tx with the id
                  value:
                    type: TxNotFound
              schema:
                $ref: '#/components/schemas/TxStatus'
        "400":
          content:
            application/json:
              example:
                detail: Something bad in the request
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: BadRequest
        "401":
          content:
            application/json:
              example:
                detail: You shall not pass
              schema:
                $ref: '#/components/schemas/Unauthorized'
          description: Unauthorized
        "404":
          content:
            application/json:
              example:
                resource: wallet-name
                detail: wallet-name not found
              schema:
                $ref: '#/components/schemas/NotFound'
          description: NotFound
        "500":
          content:
            application/json:
              example:
                detail: Ouch
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "503":
          content:
            application/json:
              example:
                detail: Self clique unsynced
              schema:
                $ref: '#/components/schemas/ServiceUnavailable'
          description: ServiceUnavailable
      summary: Get tx status
      tags:
      - Transactions
  /contracts/compile-script:
    post:
      operationId: postContractsCompile-script
      requestBody:
        content:
          application/json:
            example:
              code: "TxScript Main { let token = Token(#36cdbfabca2d71622b6) token.withdraw(@1AujpupFP4KWeZvqA7itsHY9cLJmx4qTzojVZrg8W9y,\
                \ 1024) }"
            schema:
              $ref: '#/components/schemas/Script'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                bytecodeTemplate: 35d1b2a520a0da34c5eb8d712aa9cc
                fields:
                  signature: "TxScript Bar(aa:Bool,mut bb:U256,cc:I256,mut dd:ByteVec,ee:Address)"
                  names:
                  - aa
                  - bb
                  - cc
                  - dd
                  - ee
                  types:
                  - Bool
                  - U256
                  - I256
                  - ByteVec
                  - Address
                functions:
                - name: bar
                  signature: "pub bar(a:Bool,mut b:U256,c:I256,mut d:ByteVec,e:Address)->(U256,I256,ByteVec,Address)"
                  argNames:
                  - a
                  - b
                  - c
                  - d
                  - e
                  argTypes:
                  - Bool
                  - U256
                  - I256
                  - ByteVec
                  - Address
                  returnTypes:
                  - U256
                  - I256
                  - ByteVec
                  - Address
              schema:
                $ref: '#/components/schemas/CompileScriptResult'
        "400":
          content:
            application/json:
              example:
                detail: Something bad in the request
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: BadRequest
        "401":
          content:
            application/json:
              example:
                detail: You shall not pass
              schema:
                $ref: '#/components/schemas/Unauthorized'
          description: Unauthorized
        "404":
          content:
            application/json:
              example:
                resource: wallet-name
                detail: wallet-name not found
              schema:
                $ref: '#/components/schemas/NotFound'
          description: NotFound
        "500":
          content:
            application/json:
              example:
                detail: Ouch
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "503":
          content:
            application/json:
              example:
                detail: Self clique unsynced
              schema:
                $ref: '#/components/schemas/ServiceUnavailable'
          description: ServiceUnavailable
      summary: Compile a script
      tags:
      - Contracts
  /contracts/unsigned-tx/execute-script:
    post:
      operationId: postContractsUnsigned-txExecute-script
      requestBody:
        content:
          application/json:
            examples:
              Example0:
                summary: Default
                value:
                  fromPublicKey: d1b70d2226308b46da297486adb6b4f1a8c1842cb159ac5ec04f384fe2d6f5da28
                  bytecode: 35d1b2a520a0da34c5eb8d712aa9cc
              Example1:
                summary: More settings
                value:
                  fromPublicKey: d1b70d2226308b46da297486adb6b4f1a8c1842cb159ac5ec04f384fe2d6f5da28
                  bytecode: 35d1b2a520a0da34c5eb8d712aa9cc
                  attoAlphAmount: "1000000000000000"
                  tokens:
                  - id: 2d11fd6c12435ffb07aaed4d190a505b621b927a5f6e51b61ce0ebe186397bdd
                    amount: "42000000000000000000"
                  - id: bd165d20bd063c7a023d22232a1e75bf46e904067f92b49323fe89fa0fd586bf
                    amount: "1000000000000000000000"
                  gasAmount: 20000
                  gasPrice: "100000000000"
            schema:
              $ref: '#/components/schemas/BuildExecuteScriptTx'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                fromGroup: 2
                toGroup: 2
                unsignedTx: 35d1b2a520a0da34c5eb8d712aa9cc
                gasAmount: 20000
                gasPrice: "100000000000"
                txId: 798e9e137aec7c2d59d9655b4ffa640f301f628bf7c365083bb255f6aa5f89ef
              schema:
                $ref: '#/components/schemas/BuildExecuteScriptTxResult'
        "400":
          content:
            application/json:
              example:
                detail: Something bad in the request
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: BadRequest
        "401":
          content:
            application/json:
              example:
                detail: You shall not pass
              schema:
                $ref: '#/components/schemas/Unauthorized'
          description: Unauthorized
        "404":
          content:
            application/json:
              example:
                resource: wallet-name
                detail: wallet-name not found
              schema:
                $ref: '#/components/schemas/NotFound'
          description: NotFound
        "500":
          content:
            application/json:
              example:
                detail: Ouch
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "503":
          content:
            application/json:
              example:
                detail: Self clique unsynced
              schema:
                $ref: '#/components/schemas/ServiceUnavailable'
          description: ServiceUnavailable
      summary: Build an unsigned script
      tags:
      - Contracts
  /contracts/compile-contract:
    post:
      operationId: postContractsCompile-contract
      requestBody:
        content:
          application/json:
            example:
              code: "TxContract Foo(bar: ByteVec) {\n pub fn baz(amount: U256) ->\
                \ () {\nissueToken!(amount)\n}}"
            schema:
              $ref: '#/components/schemas/Contract'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                bytecode: 35d1b2a520a0da34c5eb8d712aa9cc
                codeHash: 798e9e137aec7c2d59d9655b4ffa640f301f628bf7c365083bb255f6aa5f89ef
                fields:
                  signature: "TxContract Foo(aa:Bool,mut bb:U256,cc:I256,mut dd:ByteVec,ee:Address)"
                  names:
                  - aa
                  - bb
                  - cc
                  - dd
                  - ee
                  types:
                  - Bool
                  - U256
                  - I256
                  - ByteVec
                  - Address
                functions:
                - name: bar
                  signature: "pub bar(a:Bool,mut b:U256,c:I256,mut d:ByteVec,e:Address)->(U256,I256,ByteVec,Address)"
                  argNames:
                  - a
                  - b
                  - c
                  - d
                  - e
                  argTypes:
                  - Bool
                  - U256
                  - I256
                  - ByteVec
                  - Address
                  returnTypes:
                  - U256
                  - I256
                  - ByteVec
                  - Address
                events:
                - name: Bar
                  signature: "event Bar(a:Bool,b:U256,d:ByteVec,e:Address)"
                  fieldNames:
                  - a
                  - b
                  - d
                  - e
                  fieldTypes:
                  - Bool
                  - U256
                  - ByteVec
                  - Address
              schema:
                $ref: '#/components/schemas/CompileContractResult'
        "400":
          content:
            application/json:
              example:
                detail: Something bad in the request
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: BadRequest
        "401":
          content:
            application/json:
              example:
                detail: You shall not pass
              schema:
                $ref: '#/components/schemas/Unauthorized'
          description: Unauthorized
        "404":
          content:
            application/json:
              example:
                resource: wallet-name
                detail: wallet-name not found
              schema:
                $ref: '#/components/schemas/NotFound'
          description: NotFound
        "500":
          content:
            application/json:
              example:
                detail: Ouch
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "503":
          content:
            application/json:
              example:
                detail: Self clique unsynced
              schema:
                $ref: '#/components/schemas/ServiceUnavailable'
          description: ServiceUnavailable
      summary: Compile a smart contract
      tags:
      - Contracts
  /contracts/unsigned-tx/deploy-contract:
    post:
      operationId: postContractsUnsigned-txDeploy-contract
      requestBody:
        content:
          application/json:
            examples:
              Example0:
                summary: Default
                value:
                  fromPublicKey: d1b70d2226308b46da297486adb6b4f1a8c1842cb159ac5ec04f384fe2d6f5da28
                  bytecode: 35d1b2a520a0da34c5eb8d712aa9cc
              Example1:
                summary: More settings
                value:
                  fromPublicKey: d1b70d2226308b46da297486adb6b4f1a8c1842cb159ac5ec04f384fe2d6f5da28
                  bytecode: 35d1b2a520a0da34c5eb8d712aa9cc
                  initialAttoAlphAmount: "2000000000000000000"
                  initialTokenAmounts:
                  - id: 2d11fd6c12435ffb07aaed4d190a505b621b927a5f6e51b61ce0ebe186397bdd
                    amount: "42000000000000000000"
                  - id: bd165d20bd063c7a023d22232a1e75bf46e904067f92b49323fe89fa0fd586bf
                    amount: "1000000000000000000000"
                  issueTokenAmount: "2000000000000000000"
                  gasAmount: 20000
                  gasPrice: "100000000000"
            schema:
              $ref: '#/components/schemas/BuildDeployContractTx'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                fromGroup: 2
                toGroup: 2
                unsignedTx: 35d1b2a520a0da34c5eb8d712aa9cc
                gasAmount: 20000
                gasPrice: "100000000000"
                txId: 798e9e137aec7c2d59d9655b4ffa640f301f628bf7c365083bb255f6aa5f89ef
                contractAddress: vSxdLL2kE3o6vJBdKkdgmS3W39G3ZEmFHpo2y1jnbzBq
              schema:
                $ref: '#/components/schemas/BuildDeployContractTxResult'
        "400":
          content:
            application/json:
              example:
                detail: Something bad in the request
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: BadRequest
        "401":
          content:
            application/json:
              example:
                detail: You shall not pass
              schema:
                $ref: '#/components/schemas/Unauthorized'
          description: Unauthorized
        "404":
          content:
            application/json:
              example:
                resource: wallet-name
                detail: wallet-name not found
              schema:
                $ref: '#/components/schemas/NotFound'
          description: NotFound
        "500":
          content:
            application/json:
              example:
                detail: Ouch
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "503":
          content:
            application/json:
              example:
                detail: Self clique unsynced
              schema:
                $ref: '#/components/schemas/ServiceUnavailable'
          description: ServiceUnavailable
      summary: Build an unsigned contract
      tags:
      - Contracts
  /contracts/{address}/state:
    get:
      operationId: getContractsAddressState
      parameters:
      - explode: false
        in: path
        name: address
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: group
        required: true
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                address: vYZdgzNHHp7Qh9U5Rrv5H65eSJCGQTXEC4yuQCZ7mosA
                bytecode: "00010700000000000118"
                codeHash: c49d951065f85d0c673d33930e8476240c010a52313f99889ae06d9f0d92d2f9
                initialStateHash: e195a4e597e62a6802a456224008b896566b7c961023954fab808a0f83d8ad63
                fields:
                - type: U256
                  value: "2000000000000000000"
                asset:
                  attoAlphAmount: "2000000000000000000"
                  tokens:
                  - id: bd165d20bd063c7a023d22232a1e75bf46e904067f92b49323fe89fa0fd586bf
                    amount: "2000000000"
              schema:
                $ref: '#/components/schemas/ContractState'
        "400":
          content:
            application/json:
              example:
                detail: Something bad in the request
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: BadRequest
        "401":
          content:
            application/json:
              example:
                detail: You shall not pass
              schema:
                $ref: '#/components/schemas/Unauthorized'
          description: Unauthorized
        "404":
          content:
            application/json:
              example:
                resource: wallet-name
                detail: wallet-name not found
              schema:
                $ref: '#/components/schemas/NotFound'
          description: NotFound
        "500":
          content:
            application/json:
              example:
                detail: Ouch
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "503":
          content:
            application/json:
              example:
                detail: Self clique unsynced
              schema:
                $ref: '#/components/schemas/ServiceUnavailable'
          description: ServiceUnavailable
      summary: Get contract state
      tags:
      - Contracts
  /contracts/test-contract:
    post:
      operationId: postContractsTest-contract
      requestBody:
        content:
          application/json:
            example:
              group: 0
              address: tgx7VNFoP9DJiFMFgXXtafQZkUvyEdDHT9ryamHJYrjq
              bytecode: "00010700000000000118"
              initialFields:
              - type: U256
                value: "1000000000000000000"
              initialAsset:
                attoAlphAmount: "1000000000000000000"
                tokens:
                - id: 2d11fd6c12435ffb07aaed4d190a505b621b927a5f6e51b61ce0ebe186397bdd
                  amount: "1000000000"
              methodIndex: 0
              args:
              - type: U256
                value: "1000000000000000000"
              existingContracts:
              - address: vYZdgzNHHp7Qh9U5Rrv5H65eSJCGQTXEC4yuQCZ7mosA
                bytecode: "00010700000000000118"
                codeHash: c49d951065f85d0c673d33930e8476240c010a52313f99889ae06d9f0d92d2f9
                initialStateHash: e195a4e597e62a6802a456224008b896566b7c961023954fab808a0f83d8ad63
                fields:
                - type: U256
                  value: "2000000000000000000"
                asset:
                  attoAlphAmount: "2000000000000000000"
                  tokens:
                  - id: bd165d20bd063c7a023d22232a1e75bf46e904067f92b49323fe89fa0fd586bf
                    amount: "2000000000"
              inputAssets:
              - address: 1AujpupFP4KWeZvqA7itsHY9cLJmx4qTzojVZrg8W9y
                asset:
                  attoAlphAmount: "3000000000000000000"
                  tokens:
                  - id: 20aa1fcc865087d7788302d087e4bc76691218ce5d5013dd1cedaabfac19cca4
                    amount: "3000000000"
            schema:
              $ref: '#/components/schemas/TestContract'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                address: uomjgUz6D4tLejTkQtbNJMY8apAjTm1bgQf7em1wDV7S
                codeHash: 798e9e137aec7c2d59d9655b4ffa640f301f628bf7c365083bb255f6aa5f89ef
                returns:
                - type: U256
                  value: "1000000000000000000"
                gasUsed: 20000
                contracts:
                - address: vYZdgzNHHp7Qh9U5Rrv5H65eSJCGQTXEC4yuQCZ7mosA
                  bytecode: "00010700000000000118"
                  codeHash: c49d951065f85d0c673d33930e8476240c010a52313f99889ae06d9f0d92d2f9
                  initialStateHash: e195a4e597e62a6802a456224008b896566b7c961023954fab808a0f83d8ad63
                  fields:
                  - type: U256
                    value: "2000000000000000000"
                  asset:
                    attoAlphAmount: "2000000000000000000"
                    tokens:
                    - id: bd165d20bd063c7a023d22232a1e75bf46e904067f92b49323fe89fa0fd586bf
                      amount: "2000000000"
                txInputs:
                - uomjgUz6D4tLejTkQtbNJMY8apAjTm1bgQf7em1wDV7S
                txOutputs:
                - type: ContractOutput
                  hint: 1234
                  key: 798e9e137aec7c2d59d9655b4ffa640f301f628bf7c365083bb255f6aa5f89ef
                  attoAlphAmount: "1000000000000000000"
                  address: uomjgUz6D4tLejTkQtbNJMY8apAjTm1bgQf7em1wDV7S
                  tokens:
                  - id: 2d11fd6c12435ffb07aaed4d190a505b621b927a5f6e51b61ce0ebe186397bdd
                    amount: "42000000000000000000"
                  - id: bd165d20bd063c7a023d22232a1e75bf46e904067f92b49323fe89fa0fd586bf
                    amount: "1000000000000000000000"
                events:
                - blockHash: bdaf9dc514ce7d34b6474b8ca10a3dfb93ba997cb9d5ff1ea724ebe2af48abe5
                  contractAddress: z69mxCq5vnw7UZdN2iUDi2jqGRpfnSmgAuouvPeUXeMn
                  eventIndex: 1
                  fields:
                  - type: Address
                    value: 1AujpupFP4KWeZvqA7itsHY9cLJmx4qTzojVZrg8W9y
                  - type: U256
                    value: "10"
              schema:
                $ref: '#/components/schemas/TestContractResult'
        "400":
          content:
            application/json:
              example:
                detail: Something bad in the request
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: BadRequest
        "401":
          content:
            application/json:
              example:
                detail: You shall not pass
              schema:
                $ref: '#/components/schemas/Unauthorized'
          description: Unauthorized
        "404":
          content:
            application/json:
              example:
                resource: wallet-name
                detail: wallet-name not found
              schema:
                $ref: '#/components/schemas/NotFound'
          description: NotFound
        "500":
          content:
            application/json:
              example:
                detail: Ouch
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "503":
          content:
            application/json:
              example:
                detail: Self clique unsynced
              schema:
                $ref: '#/components/schemas/ServiceUnavailable'
          description: ServiceUnavailable
      summary: Test contract
      tags:
      - Contracts
  /contracts/call-contract:
    post:
      operationId: postContractsCall-contract
      requestBody:
        content:
          application/json:
            example:
              group: 0
              worldStateBlockHash: bdaf9dc514ce7d34b6474b8ca10a3dfb93ba997cb9d5ff1ea724ebe2af48abe5
              txId: 503bfb16230888af4924aa8f8250d7d348b862e267d75d3147f1998050b6da69
              address: tgx7VNFoP9DJiFMFgXXtafQZkUvyEdDHT9ryamHJYrjq
              methodIndex: 0
              args:
              - type: U256
                value: "0"
              existingContracts:
              - uomjgUz6D4tLejTkQtbNJMY8apAjTm1bgQf7em1wDV7S
              inputAssets:
              - address: 1AujpupFP4KWeZvqA7itsHY9cLJmx4qTzojVZrg8W9y
                asset:
                  attoAlphAmount: "3000000000000000000"
                  tokens:
                  - id: 20aa1fcc865087d7788302d087e4bc76691218ce5d5013dd1cedaabfac19cca4
                    amount: "3000000000"
            schema:
              $ref: '#/components/schemas/CallContract'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                returns:
                - type: U256
                  value: "0"
                gasUsed: 20000
                contracts:
                - address: vYZdgzNHHp7Qh9U5Rrv5H65eSJCGQTXEC4yuQCZ7mosA
                  bytecode: "00010700000000000118"
                  codeHash: c49d951065f85d0c673d33930e8476240c010a52313f99889ae06d9f0d92d2f9
                  initialStateHash: e195a4e597e62a6802a456224008b896566b7c961023954fab808a0f83d8ad63
                  fields:
                  - type: U256
                    value: "2000000000000000000"
                  asset:
                    attoAlphAmount: "2000000000000000000"
                    tokens:
                    - id: bd165d20bd063c7a023d22232a1e75bf46e904067f92b49323fe89fa0fd586bf
                      amount: "2000000000"
                txInputs:
                - uomjgUz6D4tLejTkQtbNJMY8apAjTm1bgQf7em1wDV7S
                txOutputs:
                - type: ContractOutput
                  hint: 1
                  key: 798e9e137aec7c2d59d9655b4ffa640f301f628bf7c365083bb255f6aa5f89ef
                  attoAlphAmount: "1000000000000000000"
                  address: uomjgUz6D4tLejTkQtbNJMY8apAjTm1bgQf7em1wDV7S
                  tokens:
                  - id: 2d11fd6c12435ffb07aaed4d190a505b621b927a5f6e51b61ce0ebe186397bdd
                    amount: "42000000000000000000"
                  - id: bd165d20bd063c7a023d22232a1e75bf46e904067f92b49323fe89fa0fd586bf
                    amount: "1000000000000000000000"
                events:
                - blockHash: bdaf9dc514ce7d34b6474b8ca10a3dfb93ba997cb9d5ff1ea724ebe2af48abe5
                  contractAddress: z69mxCq5vnw7UZdN2iUDi2jqGRpfnSmgAuouvPeUXeMn
                  eventIndex: 1
                  fields:
                  - type: Address
                    value: 1AujpupFP4KWeZvqA7itsHY9cLJmx4qTzojVZrg8W9y
                  - type: U256
                    value: "10"
              schema:
                $ref: '#/components/schemas/CallContractResult'
        "400":
          content:
            application/json:
              example:
                detail: Something bad in the request
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: BadRequest
        "401":
          content:
            application/json:
              example:
                detail: You shall not pass
              schema:
                $ref: '#/components/schemas/Unauthorized'
          description: Unauthorized
        "404":
          content:
            application/json:
              example:
                resource: wallet-name
                detail: wallet-name not found
              schema:
                $ref: '#/components/schemas/NotFound'
          description: NotFound
        "500":
          content:
            application/json:
              example:
                detail: Ouch
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "503":
          content:
            application/json:
              example:
                detail: Self clique unsynced
              schema:
                $ref: '#/components/schemas/ServiceUnavailable'
          description: ServiceUnavailable
      summary: Call contract
      tags:
      - Contracts
  /multisig/address:
    post:
      operationId: postMultisigAddress
      requestBody:
        content:
          application/json:
            example:
              keys:
              - d1b70d2226308b46da297486adb6b4f1a8c1842cb159ac5ec04f384fe2d6f5da28
              - d1b70d2226308b46da297486adb6b4f1a8c1842cb159ac5ec04f384fe2d6f5da28
              mrequired: 1
            schema:
              $ref: '#/components/schemas/BuildMultisigAddress'
        description: "Format 1: `1000000000000000000`\n\nFormat 2: `x.y ALPH`, where\
          \ `1 ALPH = 1000000000000000000`"
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                address: 1AujpupFP4KWeZvqA7itsHY9cLJmx4qTzojVZrg8W9y
              schema:
                $ref: '#/components/schemas/BuildMultisigAddressResult'
        "400":
          content:
            application/json:
              example:
                detail: Something bad in the request
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: BadRequest
        "401":
          content:
            application/json:
              example:
                detail: You shall not pass
              schema:
                $ref: '#/components/schemas/Unauthorized'
          description: Unauthorized
        "404":
          content:
            application/json:
              example:
                resource: wallet-name
                detail: wallet-name not found
              schema:
                $ref: '#/components/schemas/NotFound'
          description: NotFound
        "500":
          content:
            application/json:
              example:
                detail: Ouch
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "503":
          content:
            application/json:
              example:
                detail: Self clique unsynced
              schema:
                $ref: '#/components/schemas/ServiceUnavailable'
          description: ServiceUnavailable
      summary: Create the multisig address and unlock script
      tags:
      - Multi-signature
  /multisig/build:
    post:
      operationId: postMultisigBuild
      requestBody:
        content:
          application/json:
            examples:
              Example0:
                summary: Default
                value:
                  fromAddress: 1AujpupFP4KWeZvqA7itsHY9cLJmx4qTzojVZrg8W9y
                  fromPublicKeys:
                  - d1b70d2226308b46da297486adb6b4f1a8c1842cb159ac5ec04f384fe2d6f5da28
                  destinations:
                  - address: 1AujpupFP4KWeZvqA7itsHY9cLJmx4qTzojVZrg8W9y
                    attoAlphAmount: "2000000000000000000"
              Example1:
                summary: More settings
                value:
                  fromAddress: 1AujpupFP4KWeZvqA7itsHY9cLJmx4qTzojVZrg8W9y
                  fromPublicKeys:
                  - d1b70d2226308b46da297486adb6b4f1a8c1842cb159ac5ec04f384fe2d6f5da28
                  destinations:
                  - address: 1AujpupFP4KWeZvqA7itsHY9cLJmx4qTzojVZrg8W9y
                    attoAlphAmount: "2000000000000000000"
                    tokens:
                    - id: 2d11fd6c12435ffb07aaed4d190a505b621b927a5f6e51b61ce0ebe186397bdd
                      amount: "42000000000000000000"
                    - id: bd165d20bd063c7a023d22232a1e75bf46e904067f92b49323fe89fa0fd586bf
                      amount: "1000000000000000000000"
                    lockTime: 1611041396892
                  gas: 20000
                  gasPrice: "100000000000"
            schema:
              $ref: '#/components/schemas/BuildMultisig'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                unsignedTx: 35d1b2a520a0da34c5eb8d712aa9cc
                gasAmount: 20000
                gasPrice: "100000000000"
                txId: 798e9e137aec7c2d59d9655b4ffa640f301f628bf7c365083bb255f6aa5f89ef
                fromGroup: 2
                toGroup: 1
              schema:
                $ref: '#/components/schemas/BuildTransactionResult'
        "400":
          content:
            application/json:
              example:
                detail: Something bad in the request
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: BadRequest
        "401":
          content:
            application/json:
              example:
                detail: You shall not pass
              schema:
                $ref: '#/components/schemas/Unauthorized'
          description: Unauthorized
        "404":
          content:
            application/json:
              example:
                resource: wallet-name
                detail: wallet-name not found
              schema:
                $ref: '#/components/schemas/NotFound'
          description: NotFound
        "500":
          content:
            application/json:
              example:
                detail: Ouch
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "503":
          content:
            application/json:
              example:
                detail: Self clique unsynced
              schema:
                $ref: '#/components/schemas/ServiceUnavailable'
          description: ServiceUnavailable
      summary: Build a multisig unsigned transaction
      tags:
      - Multi-signature
  /multisig/submit:
    post:
      operationId: postMultisigSubmit
      requestBody:
        content:
          application/json:
            example:
              unsignedTx: 35d1b2a520a0da34c5eb8d712aa9cc
              signatures:
              - 9e1a35b2931bd04e6780d01c36e3e5337941aa80f173cfe4f4e249c44ab135272b834c1a639db9c89d673a8a30524042b0469672ca845458a5a0cf2cad53221b
            schema:
              $ref: '#/components/schemas/SubmitMultisig'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                txId: 503bfb16230888af4924aa8f8250d7d348b862e267d75d3147f1998050b6da69
                fromGroup: 2
                toGroup: 1
              schema:
                $ref: '#/components/schemas/SubmitTxResult'
        "400":
          content:
            application/json:
              example:
                detail: Something bad in the request
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: BadRequest
        "401":
          content:
            application/json:
              example:
                detail: You shall not pass
              schema:
                $ref: '#/components/schemas/Unauthorized'
          description: Unauthorized
        "404":
          content:
            application/json:
              example:
                resource: wallet-name
                detail: wallet-name not found
              schema:
                $ref: '#/components/schemas/NotFound'
          description: NotFound
        "500":
          content:
            application/json:
              example:
                detail: Ouch
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "503":
          content:
            application/json:
              example:
                detail: Self clique unsynced
              schema:
                $ref: '#/components/schemas/ServiceUnavailable'
          description: ServiceUnavailable
      summary: Submit a multi-signed transaction
      tags:
      - Multi-signature
  /utils/verify-signature:
    post:
      operationId: postUtilsVerify-signature
      requestBody:
        content:
          application/json:
            example:
              data: 35d1b2a520a0da34c5eb8d712aa9cc
              signature: 9e1a35b2931bd04e6780d01c36e3e5337941aa80f173cfe4f4e249c44ab135272b834c1a639db9c89d673a8a30524042b0469672ca845458a5a0cf2cad53221b
              publicKey: d1b70d2226308b46da297486adb6b4f1a8c1842cb159ac5ec04f384fe2d6f5da28
            schema:
              $ref: '#/components/schemas/VerifySignature'
        required: true
      responses:
        "200":
          content:
            application/json:
              example: true
              schema:
                type: boolean
        "400":
          content:
            application/json:
              example:
                detail: Something bad in the request
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: BadRequest
        "401":
          content:
            application/json:
              example:
                detail: You shall not pass
              schema:
                $ref: '#/components/schemas/Unauthorized'
          description: Unauthorized
        "404":
          content:
            application/json:
              example:
                resource: wallet-name
                detail: wallet-name not found
              schema:
                $ref: '#/components/schemas/NotFound'
          description: NotFound
        "500":
          content:
            application/json:
              example:
                detail: Ouch
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "503":
          content:
            application/json:
              example:
                detail: Self clique unsynced
              schema:
                $ref: '#/components/schemas/ServiceUnavailable'
          description: ServiceUnavailable
      summary: Verify the SecP256K1 signature of some data
      tags:
      - Utils
  /utils/check-hash-indexing:
    put:
      operationId: putUtilsCheck-hash-indexing
      responses:
        "200": {}
        "400":
          content:
            application/json:
              example:
                detail: Something bad in the request
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: BadRequest
        "401":
          content:
            application/json:
              example:
                detail: You shall not pass
              schema:
                $ref: '#/components/schemas/Unauthorized'
          description: Unauthorized
        "404":
          content:
            application/json:
              example:
                resource: wallet-name
                detail: wallet-name not found
              schema:
                $ref: '#/components/schemas/NotFound'
          description: NotFound
        "500":
          content:
            application/json:
              example:
                detail: Ouch
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "503":
          content:
            application/json:
              example:
                detail: Self clique unsynced
              schema:
                $ref: '#/components/schemas/ServiceUnavailable'
          description: ServiceUnavailable
      summary: Check and repair the indexing of block hashes
      tags:
      - Utils
  /miners/cpu-mining:
    post:
      operationId: postMinersCpu-mining
      parameters:
      - examples:
          Start mining:
            value: start-mining
          Stop mining:
            value: stop-mining
        explode: true
        in: query
        name: action
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              example: true
              schema:
                type: boolean
        "400":
          content:
            application/json:
              example:
                detail: Something bad in the request
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: BadRequest
        "401":
          content:
            application/json:
              example:
                detail: You shall not pass
              schema:
                $ref: '#/components/schemas/Unauthorized'
          description: Unauthorized
        "404":
          content:
            application/json:
              example:
                resource: wallet-name
                detail: wallet-name not found
              schema:
                $ref: '#/components/schemas/NotFound'
          description: NotFound
        "500":
          content:
            application/json:
              example:
                detail: Ouch
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "503":
          content:
            application/json:
              example:
                detail: Self clique unsynced
              schema:
                $ref: '#/components/schemas/ServiceUnavailable'
          description: ServiceUnavailable
      summary: Execute an action on CPU miner. !!! for test only !!!
      tags:
      - Miners
  /miners/addresses:
    get:
      operationId: getMinersAddresses
      responses:
        "200":
          content:
            application/json:
              example:
                addresses:
                - 1AujpupFP4KWeZvqA7itsHY9cLJmx4qTzojVZrg8W9y
              schema:
                $ref: '#/components/schemas/MinerAddresses'
        "400":
          content:
            application/json:
              example:
                detail: Something bad in the request
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: BadRequest
        "401":
          content:
            application/json:
              example:
                detail: You shall not pass
              schema:
                $ref: '#/components/schemas/Unauthorized'
          description: Unauthorized
        "404":
          content:
            application/json:
              example:
                resource: wallet-name
                detail: wallet-name not found
              schema:
                $ref: '#/components/schemas/NotFound'
          description: NotFound
        "500":
          content:
            application/json:
              example:
                detail: Ouch
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "503":
          content:
            application/json:
              example:
                detail: Self clique unsynced
              schema:
                $ref: '#/components/schemas/ServiceUnavailable'
          description: ServiceUnavailable
      summary: List miner's addresses
      tags:
      - Miners
    put:
      operationId: putMinersAddresses
      requestBody:
        content:
          application/json:
            example:
              addresses:
              - 1AujpupFP4KWeZvqA7itsHY9cLJmx4qTzojVZrg8W9y
            schema:
              $ref: '#/components/schemas/MinerAddresses'
        required: true
      responses:
        "200": {}
        "400":
          content:
            application/json:
              example:
                detail: Something bad in the request
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: BadRequest
        "401":
          content:
            application/json:
              example:
                detail: You shall not pass
              schema:
                $ref: '#/components/schemas/Unauthorized'
          description: Unauthorized
        "404":
          content:
            application/json:
              example:
                resource: wallet-name
                detail: wallet-name not found
              schema:
                $ref: '#/components/schemas/NotFound'
          description: NotFound
        "500":
          content:
            application/json:
              example:
                detail: Ouch
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "503":
          content:
            application/json:
              example:
                detail: Self clique unsynced
              schema:
                $ref: '#/components/schemas/ServiceUnavailable'
          description: ServiceUnavailable
      summary: "Update miner's addresses, but better to use user.conf instead"
      tags:
      - Miners
  /events/contract/{contractAddress}:
    get:
      operationId: getEventsContractContractaddress
      parameters:
      - explode: false
        in: path
        name: contractAddress
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: start
        required: true
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: end
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: group
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                events:
                - blockHash: bdaf9dc514ce7d34b6474b8ca10a3dfb93ba997cb9d5ff1ea724ebe2af48abe5
                  txId: 109b05391a240a0d21671720f62fe39138aaca562676053900b348a51e11ba25
                  eventIndex: 1
                  fields:
                  - type: Address
                    value: 1AujpupFP4KWeZvqA7itsHY9cLJmx4qTzojVZrg8W9y
                  - type: U256
                    value: "10"
                nextStart: 2
              schema:
                $ref: '#/components/schemas/ContractEvents'
        "400":
          content:
            application/json:
              example:
                detail: Something bad in the request
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: BadRequest
        "401":
          content:
            application/json:
              example:
                detail: You shall not pass
              schema:
                $ref: '#/components/schemas/Unauthorized'
          description: Unauthorized
        "404":
          content:
            application/json:
              example:
                resource: wallet-name
                detail: wallet-name not found
              schema:
                $ref: '#/components/schemas/NotFound'
          description: NotFound
        "500":
          content:
            application/json:
              example:
                detail: Ouch
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "503":
          content:
            application/json:
              example:
                detail: Self clique unsynced
              schema:
                $ref: '#/components/schemas/ServiceUnavailable'
          description: ServiceUnavailable
      summary: Get events for a contract within a counter range
      tags:
      - Events
  /events/contract/{contractAddress}/current-count:
    get:
      operationId: getEventsContractContractaddressCurrent-count
      parameters:
      - explode: false
        in: path
        name: contractAddress
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example: 100
              schema:
                format: int32
                type: integer
        "400":
          content:
            application/json:
              example:
                detail: Something bad in the request
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: BadRequest
        "401":
          content:
            application/json:
              example:
                detail: You shall not pass
              schema:
                $ref: '#/components/schemas/Unauthorized'
          description: Unauthorized
        "404":
          content:
            application/json:
              example:
                resource: wallet-name
                detail: wallet-name not found
              schema:
                $ref: '#/components/schemas/NotFound'
          description: NotFound
        "500":
          content:
            application/json:
              example:
                detail: Ouch
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "503":
          content:
            application/json:
              example:
                detail: Self clique unsynced
              schema:
                $ref: '#/components/schemas/ServiceUnavailable'
          description: ServiceUnavailable
      summary: Get current value of the events counter for a contract
      tags:
      - Events
  /events/tx-id/{txId}:
    get:
      operationId: getEventsTx-idTxid
      parameters:
      - explode: false
        in: path
        name: txId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: group
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                events:
                - blockHash: bdaf9dc514ce7d34b6474b8ca10a3dfb93ba997cb9d5ff1ea724ebe2af48abe5
                  contractAddress: z69mxCq5vnw7UZdN2iUDi2jqGRpfnSmgAuouvPeUXeMn
                  eventIndex: 1
                  fields:
                  - type: Address
                    value: 1AujpupFP4KWeZvqA7itsHY9cLJmx4qTzojVZrg8W9y
                  - type: U256
                    value: "10"
                nextStart: 2
              schema:
                $ref: '#/components/schemas/ContractEventsByTxId'
        "400":
          content:
            application/json:
              example:
                detail: Something bad in the request
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: BadRequest
        "401":
          content:
            application/json:
              example:
                detail: You shall not pass
              schema:
                $ref: '#/components/schemas/Unauthorized'
          description: Unauthorized
        "404":
          content:
            application/json:
              example:
                resource: wallet-name
                detail: wallet-name not found
              schema:
                $ref: '#/components/schemas/NotFound'
          description: NotFound
        "500":
          content:
            application/json:
              example:
                detail: Ouch
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "503":
          content:
            application/json:
              example:
                detail: Self clique unsynced
              schema:
                $ref: '#/components/schemas/ServiceUnavailable'
          description: ServiceUnavailable
      summary: Get events for a TxScript
      tags:
      - Events
components:
  schemas:
    AddressBalance:
      example:
        address: address
        balance: balance
        lockedBalance: lockedBalance
        warning: warning
        balanceHint: balanceHint
        lockedBalanceHint: lockedBalanceHint
      properties:
        address:
          format: address
          type: string
        balance:
          format: uint256
          type: string
        balanceHint:
          format: x.x ALPH
          type: string
        lockedBalance:
          format: uint256
          type: string
        lockedBalanceHint:
          format: x.x ALPH
          type: string
        warning:
          type: string
      required:
      - address
      - balance
      - balanceHint
      - lockedBalance
      - lockedBalanceHint
      type: object
    AddressInfo:
      example:
        path: path
        address: address
        publicKey: publicKey
        group: 0
      properties:
        address:
          format: address
          type: string
        publicKey:
          format: public-key
          type: string
        group:
          format: group-index
          type: integer
        path:
          type: string
      required:
      - address
      - group
      - path
      - publicKey
      type: object
    Addresses:
      example:
        addresses:
        - path: path
          address: address
          publicKey: publicKey
          group: 0
        - path: path
          address: address
          publicKey: publicKey
          group: 0
        activeAddress: activeAddress
      properties:
        activeAddress:
          format: address
          type: string
        addresses:
          items:
            $ref: '#/components/schemas/AddressInfo'
          type: array
      required:
      - activeAddress
      - addresses
      type: object
    AssetInput:
      example:
        unlockScript: unlockScript
        outputRef:
          hint: 9
          key: key
      properties:
        outputRef:
          $ref: '#/components/schemas/OutputRef'
        unlockScript:
          format: hex-string
          type: string
      required:
      - outputRef
      - unlockScript
      type: object
    AssetOutput:
      properties:
        hint:
          format: int32
          type: integer
        key:
          format: 32-byte-hash
          type: string
        attoAlphAmount:
          format: uint256
          type: string
        address:
          format: address
          type: string
        tokens:
          items:
            $ref: '#/components/schemas/Token'
          type: array
        lockTime:
          format: int64
          type: integer
        message:
          format: hex-string
          type: string
        type:
          type: string
      required:
      - address
      - attoAlphAmount
      - hint
      - key
      - lockTime
      - message
      - tokens
      - type
      type: object
    AssetState:
      example:
        attoAlphAmount: attoAlphAmount
        tokens:
        - amount: amount
          id: id
        - amount: amount
          id: id
      properties:
        attoAlphAmount:
          format: uint256
          type: string
        tokens:
          items:
            $ref: '#/components/schemas/Token'
          type: array
      required:
      - attoAlphAmount
      type: object
    BadRequest:
      properties:
        detail:
          type: string
      required:
      - detail
      type: object
    Balance:
      example:
        balance: balance
        lockedBalance: lockedBalance
        utxoNum: 0
        warning: warning
        balanceHint: balanceHint
        lockedBalanceHint: lockedBalanceHint
      properties:
        balance:
          format: uint256
          type: string
        balanceHint:
          format: x.x ALPH
          type: string
        lockedBalance:
          format: uint256
          type: string
        lockedBalanceHint:
          format: x.x ALPH
          type: string
        utxoNum:
          format: int32
          type: integer
        warning:
          type: string
      required:
      - balance
      - balanceHint
      - lockedBalance
      - lockedBalanceHint
      - utxoNum
      type: object
    Balances:
      example:
        balances:
        - address: address
          balance: balance
          lockedBalance: lockedBalance
          warning: warning
          balanceHint: balanceHint
          lockedBalanceHint: lockedBalanceHint
        - address: address
          balance: balance
          lockedBalance: lockedBalance
          warning: warning
          balanceHint: balanceHint
          lockedBalanceHint: lockedBalanceHint
        totalBalanceHint: totalBalanceHint
        totalBalance: totalBalance
      properties:
        totalBalance:
          format: uint256
          type: string
        totalBalanceHint:
          format: x.x ALPH
          type: string
        balances:
          items:
            $ref: '#/components/schemas/AddressBalance'
          type: array
      required:
      - balances
      - totalBalance
      - totalBalanceHint
      type: object
    Ban:
      properties:
        peers:
          items:
            format: inet-address
            type: string
          type: array
        type:
          type: string
      required:
      - peers
      - type
      type: object
    Banned:
      properties:
        until:
          format: int64
          type: integer
        type:
          type: string
      required:
      - type
      - until
      type: object
    BlockEntry:
      example:
        chainFrom: 6
        txsHash: txsHash
        chainTo: 1
        depStateHash: depStateHash
        deps:
        - deps
        - deps
        transactions:
        - contractInputs:
          - hint: 9
            key: key
          - hint: 9
            key: key
          inputSignatures:
          - inputSignatures
          - inputSignatures
          scriptSignatures:
          - scriptSignatures
          - scriptSignatures
          unsigned:
            inputs:
            - unlockScript: unlockScript
              outputRef:
                hint: 9
                key: key
            - unlockScript: unlockScript
              outputRef:
                hint: 9
                key: key
            gasAmount: 7
            txId: txId
            networkId: 2
            fixedOutputs:
            - address: address
              lockTime: 2
              hint: 3
              attoAlphAmount: attoAlphAmount
              tokens:
              - amount: amount
                id: id
              - amount: amount
                id: id
              message: message
              key: key
            - address: address
              lockTime: 2
              hint: 3
              attoAlphAmount: attoAlphAmount
              tokens:
              - amount: amount
                id: id
              - amount: amount
                id: id
              message: message
              key: key
            version: 5
            scriptOpt: scriptOpt
            gasPrice: gasPrice
          generatedOutputs:
          - null
          - null
          scriptExecutionOk: true
        - contractInputs:
          - hint: 9
            key: key
          - hint: 9
            key: key
          inputSignatures:
          - inputSignatures
          - inputSignatures
          scriptSignatures:
          - scriptSignatures
          - scriptSignatures
          unsigned:
            inputs:
            - unlockScript: unlockScript
              outputRef:
                hint: 9
                key: key
            - unlockScript: unlockScript
              outputRef:
                hint: 9
                key: key
            gasAmount: 7
            txId: txId
            networkId: 2
            fixedOutputs:
            - address: address
              lockTime: 2
              hint: 3
              attoAlphAmount: attoAlphAmount
              tokens:
              - amount: amount
                id: id
              - amount: amount
                id: id
              message: message
              key: key
            - address: address
              lockTime: 2
              hint: 3
              attoAlphAmount: attoAlphAmount
              tokens:
              - amount: amount
                id: id
              - amount: amount
                id: id
              message: message
              key: key
            version: 5
            scriptOpt: scriptOpt
            gasPrice: gasPrice
          generatedOutputs:
          - null
          - null
          scriptExecutionOk: true
        nonce: nonce
        version: 4
        hash: hash
        timestamp: 0
        height: 5
        target: target
      properties:
        hash:
          format: block-hash
          type: string
        timestamp:
          format: int64
          type: integer
        chainFrom:
          format: int32
          type: integer
        chainTo:
          format: int32
          type: integer
        height:
          format: int32
          type: integer
        deps:
          items:
            format: block-hash
            type: string
          type: array
        transactions:
          items:
            $ref: '#/components/schemas/Transaction'
          type: array
        nonce:
          format: hex-string
          type: string
        version:
          type: integer
        depStateHash:
          format: 32-byte-hash
          type: string
        txsHash:
          format: 32-byte-hash
          type: string
        target:
          format: hex-string
          type: string
      required:
      - chainFrom
      - chainTo
      - depStateHash
      - deps
      - hash
      - height
      - nonce
      - target
      - timestamp
      - transactions
      - txsHash
      - version
      type: object
    BlockHeaderEntry:
      example:
        chainFrom: 6
        chainTo: 1
        deps:
        - deps
        - deps
        hash: hash
        timestamp: 0
        height: 5
      properties:
        hash:
          format: block-hash
          type: string
        timestamp:
          format: int64
          type: integer
        chainFrom:
          format: int32
          type: integer
        chainTo:
          format: int32
          type: integer
        height:
          format: int32
          type: integer
        deps:
          items:
            format: block-hash
            type: string
          type: array
      required:
      - chainFrom
      - chainTo
      - deps
      - hash
      - height
      - timestamp
      type: object
    BrokerInfo:
      example:
        brokerId: 0
        address:
          port: 0
          addr: addr
        brokerNum: 6
        cliqueId: cliqueId
      properties:
        cliqueId:
          format: clique-id
          type: string
        brokerId:
          format: int32
          type: integer
        brokerNum:
          format: int32
          type: integer
        address:
          $ref: '#/components/schemas/BrokerInfo_address'
      required:
      - address
      - brokerId
      - brokerNum
      - cliqueId
      type: object
    BuildDeployContractTx:
      example:
        bytecode: bytecode
        initialAttoAlphAmount: initialAttoAlphAmount
        fromPublicKey: fromPublicKey
        initialTokenAmounts:
        - amount: amount
          id: id
        - amount: amount
          id: id
        issueTokenAmount: issueTokenAmount
        gasAmount: 0
        gasPrice: gasPrice
      properties:
        fromPublicKey:
          format: public-key
          type: string
        bytecode:
          format: hex-string
          type: string
        initialAttoAlphAmount:
          format: uint256
          type: string
        initialTokenAmounts:
          items:
            $ref: '#/components/schemas/Token'
          type: array
        issueTokenAmount:
          format: uint256
          type: string
        gasAmount:
          format: gas
          type: integer
        gasPrice:
          format: uint256
          type: string
      required:
      - bytecode
      - fromPublicKey
      type: object
    BuildDeployContractTxResult:
      example:
        unsignedTx: unsignedTx
        gasAmount: 1
        fromGroup: 0
        txId: txId
        contractAddress: contractAddress
        toGroup: 6
        gasPrice: gasPrice
      properties:
        fromGroup:
          format: int32
          type: integer
        toGroup:
          format: int32
          type: integer
        unsignedTx:
          type: string
        gasAmount:
          format: gas
          type: integer
        gasPrice:
          format: uint256
          type: string
        txId:
          format: 32-byte-hash
          type: string
        contractAddress:
          format: address
          type: string
      required:
      - contractAddress
      - fromGroup
      - gasAmount
      - gasPrice
      - toGroup
      - txId
      - unsignedTx
      type: object
    BuildExecuteScriptTx:
      example:
        bytecode: bytecode
        fromPublicKey: fromPublicKey
        gasAmount: 0
        attoAlphAmount: attoAlphAmount
        tokens:
        - amount: amount
          id: id
        - amount: amount
          id: id
        gasPrice: gasPrice
      properties:
        fromPublicKey:
          format: public-key
          type: string
        bytecode:
          format: hex-string
          type: string
        attoAlphAmount:
          format: uint256
          type: string
        tokens:
          items:
            $ref: '#/components/schemas/Token'
          type: array
        gasAmount:
          format: gas
          type: integer
        gasPrice:
          format: uint256
          type: string
      required:
      - bytecode
      - fromPublicKey
      type: object
    BuildExecuteScriptTxResult:
      example:
        unsignedTx: unsignedTx
        gasAmount: 1
        fromGroup: 0
        txId: txId
        toGroup: 6
        gasPrice: gasPrice
      properties:
        fromGroup:
          format: int32
          type: integer
        toGroup:
          format: int32
          type: integer
        unsignedTx:
          type: string
        gasAmount:
          format: gas
          type: integer
        gasPrice:
          format: uint256
          type: string
        txId:
          format: 32-byte-hash
          type: string
      required:
      - fromGroup
      - gasAmount
      - gasPrice
      - toGroup
      - txId
      - unsignedTx
      type: object
    BuildInfo:
      example:
        releaseVersion: releaseVersion
        commit: commit
      properties:
        releaseVersion:
          type: string
        commit:
          type: string
      required:
      - commit
      - releaseVersion
      type: object
    BuildMultisig:
      example:
        destinations:
        - address: address
          lockTime: 0
          attoAlphAmount: attoAlphAmount
          tokens:
          - amount: amount
            id: id
          - amount: amount
            id: id
          message: message
        - address: address
          lockTime: 0
          attoAlphAmount: attoAlphAmount
          tokens:
          - amount: amount
            id: id
          - amount: amount
            id: id
          message: message
        fromPublicKeys:
        - fromPublicKeys
        - fromPublicKeys
        gas: 0
        fromAddress: fromAddress
        gasPrice: gasPrice
      properties:
        fromAddress:
          format: address
          type: string
        fromPublicKeys:
          items:
            format: public-key
            type: string
          type: array
        destinations:
          items:
            $ref: '#/components/schemas/Destination'
          type: array
        gas:
          format: gas
          type: integer
        gasPrice:
          format: uint256
          type: string
      required:
      - destinations
      - fromAddress
      - fromPublicKeys
      type: object
    BuildMultisigAddress:
      example:
        keys:
        - keys
        - keys
        mrequired: 0
      properties:
        keys:
          items:
            format: public-key
            type: string
          type: array
        mrequired:
          format: int32
          type: integer
      required:
      - keys
      - mrequired
      type: object
    BuildMultisigAddressResult:
      example:
        address: address
      properties:
        address:
          format: address
          type: string
      required:
      - address
      type: object
    BuildSweepAddressTransactions:
      example:
        fromPublicKey: fromPublicKey
        lockTime: 0
        gasAmount: 6
        toAddress: toAddress
        gasPrice: gasPrice
      properties:
        fromPublicKey:
          format: public-key
          type: string
        toAddress:
          format: address
          type: string
        lockTime:
          format: int64
          type: integer
        gasAmount:
          format: gas
          type: integer
        gasPrice:
          format: uint256
          type: string
      required:
      - fromPublicKey
      - toAddress
      type: object
    BuildSweepAddressTransactionsResult:
      example:
        unsignedTxs:
        - unsignedTx: unsignedTx
          gasAmount: 0
          txId: txId
          gasPrice: gasPrice
        - unsignedTx: unsignedTx
          gasAmount: 0
          txId: txId
          gasPrice: gasPrice
        fromGroup: 6
        toGroup: 1
      properties:
        unsignedTxs:
          items:
            $ref: '#/components/schemas/SweepAddressTransaction'
          type: array
        fromGroup:
          format: int32
          type: integer
        toGroup:
          format: int32
          type: integer
      required:
      - fromGroup
      - toGroup
      - unsignedTxs
      type: object
    BuildTransaction:
      example:
        fromPublicKey: fromPublicKey
        destinations:
        - address: address
          lockTime: 0
          attoAlphAmount: attoAlphAmount
          tokens:
          - amount: amount
            id: id
          - amount: amount
            id: id
          message: message
        - address: address
          lockTime: 0
          attoAlphAmount: attoAlphAmount
          tokens:
          - amount: amount
            id: id
          - amount: amount
            id: id
          message: message
        gasAmount: 0
        utxos:
        - hint: 9
          key: key
        - hint: 9
          key: key
        gasPrice: gasPrice
      properties:
        fromPublicKey:
          format: public-key
          type: string
        destinations:
          items:
            $ref: '#/components/schemas/Destination'
          type: array
        utxos:
          items:
            $ref: '#/components/schemas/OutputRef'
          type: array
        gasAmount:
          format: gas
          type: integer
        gasPrice:
          format: uint256
          type: string
      required:
      - destinations
      - fromPublicKey
      type: object
    BuildTransactionResult:
      example:
        unsignedTx: unsignedTx
        gasAmount: 0
        txId: txId
        fromGroup: 6
        toGroup: 1
        gasPrice: gasPrice
      properties:
        unsignedTx:
          type: string
        gasAmount:
          format: gas
          type: integer
        gasPrice:
          format: uint256
          type: string
        txId:
          format: 32-byte-hash
          type: string
        fromGroup:
          format: int32
          type: integer
        toGroup:
          format: int32
          type: integer
      required:
      - fromGroup
      - gasAmount
      - gasPrice
      - toGroup
      - txId
      - unsignedTx
      type: object
    CallContract:
      example:
        args:
        - null
        - null
        address: address
        inputAssets:
        - address: address
          asset:
            attoAlphAmount: attoAlphAmount
            tokens:
            - amount: amount
              id: id
            - amount: amount
              id: id
        - address: address
          asset:
            attoAlphAmount: attoAlphAmount
            tokens:
            - amount: amount
              id: id
            - amount: amount
              id: id
        methodIndex: 6
        existingContracts:
        - existingContracts
        - existingContracts
        txId: txId
        worldStateBlockHash: worldStateBlockHash
        group: 0
      properties:
        group:
          format: int32
          type: integer
        worldStateBlockHash:
          format: block-hash
          type: string
        txId:
          format: 32-byte-hash
          type: string
        address:
          format: address
          type: string
        methodIndex:
          format: int32
          type: integer
        args:
          items:
            $ref: '#/components/schemas/Val'
          type: array
        existingContracts:
          items:
            format: address
            type: string
          type: array
        inputAssets:
          items:
            $ref: '#/components/schemas/TestInputAsset'
          type: array
      required:
      - address
      - group
      - methodIndex
      type: object
    CallContractResult:
      example:
        gasUsed: 0
        txInputs:
        - txInputs
        - txInputs
        txOutputs:
        - null
        - null
        returns:
        - null
        - null
        contracts:
        - bytecode: bytecode
          initialStateHash: initialStateHash
          address: address
          codeHash: codeHash
          fields:
          - null
          - null
          asset:
            attoAlphAmount: attoAlphAmount
            tokens:
            - amount: amount
              id: id
            - amount: amount
              id: id
        - bytecode: bytecode
          initialStateHash: initialStateHash
          address: address
          codeHash: codeHash
          fields:
          - null
          - null
          asset:
            attoAlphAmount: attoAlphAmount
            tokens:
            - amount: amount
              id: id
            - amount: amount
              id: id
        events:
        - blockHash: blockHash
          contractAddress: contractAddress
          eventIndex: 6
          fields:
          - null
          - null
        - blockHash: blockHash
          contractAddress: contractAddress
          eventIndex: 6
          fields:
          - null
          - null
      properties:
        returns:
          items:
            $ref: '#/components/schemas/Val'
          type: array
        gasUsed:
          format: int32
          type: integer
        contracts:
          items:
            $ref: '#/components/schemas/ContractState'
          type: array
        txInputs:
          items:
            format: address
            type: string
          type: array
        txOutputs:
          items:
            $ref: '#/components/schemas/Output'
          type: array
        events:
          items:
            $ref: '#/components/schemas/ContractEventByTxId'
          type: array
      required:
      - contracts
      - events
      - gasUsed
      - returns
      - txInputs
      - txOutputs
      type: object
    ChainInfo:
      example:
        currentHeight: 0
      properties:
        currentHeight:
          format: int32
          type: integer
      required:
      - currentHeight
      type: object
    ChainParams:
      example:
        numZerosAtLeastInHash: 6
        groups: 5
        networkId: 0
        groupNumPerBroker: 1
      properties:
        networkId:
          type: integer
        numZerosAtLeastInHash:
          format: int32
          type: integer
        groupNumPerBroker:
          format: int32
          type: integer
        groups:
          format: int32
          type: integer
      required:
      - groupNumPerBroker
      - groups
      - networkId
      - numZerosAtLeastInHash
      type: object
    ChangeActiveAddress:
      example:
        address: address
      properties:
        address:
          format: address
          type: string
      required:
      - address
      type: object
    CompileContractResult:
      example:
        bytecode: bytecode
        functions:
        - argTypes:
          - argTypes
          - argTypes
          signature: signature
          argNames:
          - argNames
          - argNames
          name: name
          returnTypes:
          - returnTypes
          - returnTypes
        - argTypes:
          - argTypes
          - argTypes
          signature: signature
          argNames:
          - argNames
          - argNames
          name: name
          returnTypes:
          - returnTypes
          - returnTypes
        codeHash: codeHash
        fields:
          types:
          - types
          - types
          names:
          - names
          - names
          signature: signature
        events:
        - signature: signature
          fieldTypes:
          - fieldTypes
          - fieldTypes
          fieldNames:
          - fieldNames
          - fieldNames
          name: name
        - signature: signature
          fieldTypes:
          - fieldTypes
          - fieldTypes
          fieldNames:
          - fieldNames
          - fieldNames
          name: name
      properties:
        bytecode:
          type: string
        codeHash:
          format: 32-byte-hash
          type: string
        fields:
          $ref: '#/components/schemas/FieldsSig'
        functions:
          items:
            $ref: '#/components/schemas/FunctionSig'
          type: array
        events:
          items:
            $ref: '#/components/schemas/EventSig'
          type: array
      required:
      - bytecode
      - codeHash
      - events
      - fields
      - functions
      type: object
    CompileScriptResult:
      example:
        bytecodeTemplate: bytecodeTemplate
        functions:
        - argTypes:
          - argTypes
          - argTypes
          signature: signature
          argNames:
          - argNames
          - argNames
          name: name
          returnTypes:
          - returnTypes
          - returnTypes
        - argTypes:
          - argTypes
          - argTypes
          signature: signature
          argNames:
          - argNames
          - argNames
          name: name
          returnTypes:
          - returnTypes
          - returnTypes
        fields:
          types:
          - types
          - types
          names:
          - names
          - names
          signature: signature
      properties:
        bytecodeTemplate:
          type: string
        fields:
          $ref: '#/components/schemas/FieldsSig'
        functions:
          items:
            $ref: '#/components/schemas/FunctionSig'
          type: array
      required:
      - bytecodeTemplate
      - fields
      - functions
      type: object
    Confirmed:
      properties:
        blockHash:
          format: block-hash
          type: string
        txIndex:
          format: int32
          type: integer
        chainConfirmations:
          format: int32
          type: integer
        fromGroupConfirmations:
          format: int32
          type: integer
        toGroupConfirmations:
          format: int32
          type: integer
        type:
          type: string
      required:
      - blockHash
      - chainConfirmations
      - fromGroupConfirmations
      - toGroupConfirmations
      - txIndex
      - type
      type: object
    Contract:
      example:
        code: code
      properties:
        code:
          type: string
      required:
      - code
      type: object
    ContractEvent:
      example:
        blockHash: blockHash
        txId: txId
        eventIndex: 0
        fields:
        - null
        - null
      properties:
        blockHash:
          format: block-hash
          type: string
        txId:
          format: 32-byte-hash
          type: string
        eventIndex:
          format: int32
          type: integer
        fields:
          items:
            $ref: '#/components/schemas/Val'
          type: array
      required:
      - blockHash
      - eventIndex
      - fields
      - txId
      type: object
    ContractEventByTxId:
      example:
        blockHash: blockHash
        contractAddress: contractAddress
        eventIndex: 6
        fields:
        - null
        - null
      properties:
        blockHash:
          format: block-hash
          type: string
        contractAddress:
          format: address
          type: string
        eventIndex:
          format: int32
          type: integer
        fields:
          items:
            $ref: '#/components/schemas/Val'
          type: array
      required:
      - blockHash
      - contractAddress
      - eventIndex
      - fields
      type: object
    ContractEvents:
      example:
        nextStart: 6
        events:
        - blockHash: blockHash
          txId: txId
          eventIndex: 0
          fields:
          - null
          - null
        - blockHash: blockHash
          txId: txId
          eventIndex: 0
          fields:
          - null
          - null
      properties:
        events:
          items:
            $ref: '#/components/schemas/ContractEvent'
          type: array
        nextStart:
          format: int32
          type: integer
      required:
      - events
      - nextStart
      type: object
    ContractEventsByTxId:
      example:
        nextStart: 0
        events:
        - blockHash: blockHash
          contractAddress: contractAddress
          eventIndex: 6
          fields:
          - null
          - null
        - blockHash: blockHash
          contractAddress: contractAddress
          eventIndex: 6
          fields:
          - null
          - null
      properties:
        events:
          items:
            $ref: '#/components/schemas/ContractEventByTxId'
          type: array
        nextStart:
          format: int32
          type: integer
      required:
      - events
      - nextStart
      type: object
    ContractOutput:
      properties:
        hint:
          format: int32
          type: integer
        key:
          format: 32-byte-hash
          type: string
        attoAlphAmount:
          format: uint256
          type: string
        address:
          format: address
          type: string
        tokens:
          items:
            $ref: '#/components/schemas/Token'
          type: array
        type:
          type: string
      required:
      - address
      - attoAlphAmount
      - hint
      - key
      - tokens
      - type
      type: object
    ContractState:
      example:
        bytecode: bytecode
        initialStateHash: initialStateHash
        address: address
        codeHash: codeHash
        fields:
        - null
        - null
        asset:
          attoAlphAmount: attoAlphAmount
          tokens:
          - amount: amount
            id: id
          - amount: amount
            id: id
      properties:
        address:
          format: address
          type: string
        bytecode:
          format: contract
          type: string
        codeHash:
          format: 32-byte-hash
          type: string
        initialStateHash:
          format: 32-byte-hash
          type: string
        fields:
          items:
            $ref: '#/components/schemas/Val'
          type: array
        asset:
          $ref: '#/components/schemas/AssetState'
      required:
      - address
      - asset
      - bytecode
      - codeHash
      - fields
      type: object
    DecodeUnsignedTx:
      example:
        unsignedTx: unsignedTx
      properties:
        unsignedTx:
          type: string
      required:
      - unsignedTx
      type: object
    DecodeUnsignedTxResult:
      example:
        unsignedTx:
          inputs:
          - unlockScript: unlockScript
            outputRef:
              hint: 9
              key: key
          - unlockScript: unlockScript
            outputRef:
              hint: 9
              key: key
          gasAmount: 7
          txId: txId
          networkId: 2
          fixedOutputs:
          - address: address
            lockTime: 2
            hint: 3
            attoAlphAmount: attoAlphAmount
            tokens:
            - amount: amount
              id: id
            - amount: amount
              id: id
            message: message
            key: key
          - address: address
            lockTime: 2
            hint: 3
            attoAlphAmount: attoAlphAmount
            tokens:
            - amount: amount
              id: id
            - amount: amount
              id: id
            message: message
            key: key
          version: 5
          scriptOpt: scriptOpt
          gasPrice: gasPrice
        fromGroup: 0
        toGroup: 6
      properties:
        fromGroup:
          format: int32
          type: integer
        toGroup:
          format: int32
          type: integer
        unsignedTx:
          $ref: '#/components/schemas/UnsignedTx'
      required:
      - fromGroup
      - toGroup
      - unsignedTx
      type: object
    Destination:
      example:
        address: address
        lockTime: 0
        attoAlphAmount: attoAlphAmount
        tokens:
        - amount: amount
          id: id
        - amount: amount
          id: id
        message: message
      properties:
        address:
          format: address
          type: string
        attoAlphAmount:
          format: uint256
          type: string
        tokens:
          items:
            $ref: '#/components/schemas/Token'
          type: array
        lockTime:
          format: int64
          type: integer
        message:
          format: hex-string
          type: string
      required:
      - address
      - attoAlphAmount
      type: object
    DiscoveryAction:
      discriminator:
        mapping:
          Reachable: '#/components/schemas/Reachable'
          Unreachable: '#/components/schemas/Unreachable'
        propertyName: type
      oneOf:
      - $ref: '#/components/schemas/Reachable'
      - $ref: '#/components/schemas/Unreachable'
    EventSig:
      example:
        signature: signature
        fieldTypes:
        - fieldTypes
        - fieldTypes
        fieldNames:
        - fieldNames
        - fieldNames
        name: name
      properties:
        name:
          type: string
        signature:
          type: string
        fieldNames:
          items:
            type: string
          type: array
        fieldTypes:
          items:
            type: string
          type: array
      required:
      - fieldNames
      - fieldTypes
      - name
      - signature
      type: object
    FetchResponse:
      example:
        blocks:
        - - chainFrom: 6
            txsHash: txsHash
            chainTo: 1
            depStateHash: depStateHash
            deps:
            - deps
            - deps
            transactions:
            - contractInputs:
              - hint: 9
                key: key
              - hint: 9
                key: key
              inputSignatures:
              - inputSignatures
              - inputSignatures
              scriptSignatures:
              - scriptSignatures
              - scriptSignatures
              unsigned:
                inputs:
                - unlockScript: unlockScript
                  outputRef:
                    hint: 9
                    key: key
                - unlockScript: unlockScript
                  outputRef:
                    hint: 9
                    key: key
                gasAmount: 7
                txId: txId
                networkId: 2
                fixedOutputs:
                - address: address
                  lockTime: 2
                  hint: 3
                  attoAlphAmount: attoAlphAmount
                  tokens:
                  - amount: amount
                    id: id
                  - amount: amount
                    id: id
                  message: message
                  key: key
                - address: address
                  lockTime: 2
                  hint: 3
                  attoAlphAmount: attoAlphAmount
                  tokens:
                  - amount: amount
                    id: id
                  - amount: amount
                    id: id
                  message: message
                  key: key
                version: 5
                scriptOpt: scriptOpt
                gasPrice: gasPrice
              generatedOutputs:
              - null
              - null
              scriptExecutionOk: true
            - contractInputs:
              - hint: 9
                key: key
              - hint: 9
                key: key
              inputSignatures:
              - inputSignatures
              - inputSignatures
              scriptSignatures:
              - scriptSignatures
              - scriptSignatures
              unsigned:
                inputs:
                - unlockScript: unlockScript
                  outputRef:
                    hint: 9
                    key: key
                - unlockScript: unlockScript
                  outputRef:
                    hint: 9
                    key: key
                gasAmount: 7
                txId: txId
                networkId: 2
                fixedOutputs:
                - address: address
                  lockTime: 2
                  hint: 3
                  attoAlphAmount: attoAlphAmount
                  tokens:
                  - amount: amount
                    id: id
                  - amount: amount
                    id: id
                  message: message
                  key: key
                - address: address
                  lockTime: 2
                  hint: 3
                  attoAlphAmount: attoAlphAmount
                  tokens:
                  - amount: amount
                    id: id
                  - amount: amount
                    id: id
                  message: message
                  key: key
                version: 5
                scriptOpt: scriptOpt
                gasPrice: gasPrice
              generatedOutputs:
              - null
              - null
              scriptExecutionOk: true
            nonce: nonce
            version: 4
            hash: hash
            timestamp: 0
            height: 5
            target: target
          - chainFrom: 6
            txsHash: txsHash
            chainTo: 1
            depStateHash: depStateHash
            deps:
            - deps
            - deps
            transactions:
            - contractInputs:
              - hint: 9
                key: key
              - hint: 9
                key: key
              inputSignatures:
              - inputSignatures
              - inputSignatures
              scriptSignatures:
              - scriptSignatures
              - scriptSignatures
              unsigned:
                inputs:
                - unlockScript: unlockScript
                  outputRef:
                    hint: 9
                    key: key
                - unlockScript: unlockScript
                  outputRef:
                    hint: 9
                    key: key
                gasAmount: 7
                txId: txId
                networkId: 2
                fixedOutputs:
                - address: address
                  lockTime: 2
                  hint: 3
                  attoAlphAmount: attoAlphAmount
                  tokens:
                  - amount: amount
                    id: id
                  - amount: amount
                    id: id
                  message: message
                  key: key
                - address: address
                  lockTime: 2
                  hint: 3
                  attoAlphAmount: attoAlphAmount
                  tokens:
                  - amount: amount
                    id: id
                  - amount: amount
                    id: id
                  message: message
                  key: key
                version: 5
                scriptOpt: scriptOpt
                gasPrice: gasPrice
              generatedOutputs:
              - null
              - null
              scriptExecutionOk: true
            - contractInputs:
              - hint: 9
                key: key
              - hint: 9
                key: key
              inputSignatures:
              - inputSignatures
              - inputSignatures
              scriptSignatures:
              - scriptSignatures
              - scriptSignatures
              unsigned:
                inputs:
                - unlockScript: unlockScript
                  outputRef:
                    hint: 9
                    key: key
                - unlockScript: unlockScript
                  outputRef:
                    hint: 9
                    key: key
                gasAmount: 7
                txId: txId
                networkId: 2
                fixedOutputs:
                - address: address
                  lockTime: 2
                  hint: 3
                  attoAlphAmount: attoAlphAmount
                  tokens:
                  - amount: amount
                    id: id
                  - amount: amount
                    id: id
                  message: message
                  key: key
                - address: address
                  lockTime: 2
                  hint: 3
                  attoAlphAmount: attoAlphAmount
                  tokens:
                  - amount: amount
                    id: id
                  - amount: amount
                    id: id
                  message: message
                  key: key
                version: 5
                scriptOpt: scriptOpt
                gasPrice: gasPrice
              generatedOutputs:
              - null
              - null
              scriptExecutionOk: true
            nonce: nonce
            version: 4
            hash: hash
            timestamp: 0
            height: 5
            target: target
        - - chainFrom: 6
            txsHash: txsHash
            chainTo: 1
            depStateHash: depStateHash
            deps:
            - deps
            - deps
            transactions:
            - contractInputs:
              - hint: 9
                key: key
              - hint: 9
                key: key
              inputSignatures:
              - inputSignatures
              - inputSignatures
              scriptSignatures:
              - scriptSignatures
              - scriptSignatures
              unsigned:
                inputs:
                - unlockScript: unlockScript
                  outputRef:
                    hint: 9
                    key: key
                - unlockScript: unlockScript
                  outputRef:
                    hint: 9
                    key: key
                gasAmount: 7
                txId: txId
                networkId: 2
                fixedOutputs:
                - address: address
                  lockTime: 2
                  hint: 3
                  attoAlphAmount: attoAlphAmount
                  tokens:
                  - amount: amount
                    id: id
                  - amount: amount
                    id: id
                  message: message
                  key: key
                - address: address
                  lockTime: 2
                  hint: 3
                  attoAlphAmount: attoAlphAmount
                  tokens:
                  - amount: amount
                    id: id
                  - amount: amount
                    id: id
                  message: message
                  key: key
                version: 5
                scriptOpt: scriptOpt
                gasPrice: gasPrice
              generatedOutputs:
              - null
              - null
              scriptExecutionOk: true
            - contractInputs:
              - hint: 9
                key: key
              - hint: 9
                key: key
              inputSignatures:
              - inputSignatures
              - inputSignatures
              scriptSignatures:
              - scriptSignatures
              - scriptSignatures
              unsigned:
                inputs:
                - unlockScript: unlockScript
                  outputRef:
                    hint: 9
                    key: key
                - unlockScript: unlockScript
                  outputRef:
                    hint: 9
                    key: key
                gasAmount: 7
                txId: txId
                networkId: 2
                fixedOutputs:
                - address: address
                  lockTime: 2
                  hint: 3
                  attoAlphAmount: attoAlphAmount
                  tokens:
                  - amount: amount
                    id: id
                  - amount: amount
                    id: id
                  message: message
                  key: key
                - address: address
                  lockTime: 2
                  hint: 3
                  attoAlphAmount: attoAlphAmount
                  tokens:
                  - amount: amount
                    id: id
                  - amount: amount
                    id: id
                  message: message
                  key: key
                version: 5
                scriptOpt: scriptOpt
                gasPrice: gasPrice
              generatedOutputs:
              - null
              - null
              scriptExecutionOk: true
            nonce: nonce
            version: 4
            hash: hash
            timestamp: 0
            height: 5
            target: target
          - chainFrom: 6
            txsHash: txsHash
            chainTo: 1
            depStateHash: depStateHash
            deps:
            - deps
            - deps
            transactions:
            - contractInputs:
              - hint: 9
                key: key
              - hint: 9
                key: key
              inputSignatures:
              - inputSignatures
              - inputSignatures
              scriptSignatures:
              - scriptSignatures
              - scriptSignatures
              unsigned:
                inputs:
                - unlockScript: unlockScript
                  outputRef:
                    hint: 9
                    key: key
                - unlockScript: unlockScript
                  outputRef:
                    hint: 9
                    key: key
                gasAmount: 7
                txId: txId
                networkId: 2
                fixedOutputs:
                - address: address
                  lockTime: 2
                  hint: 3
                  attoAlphAmount: attoAlphAmount
                  tokens:
                  - amount: amount
                    id: id
                  - amount: amount
                    id: id
                  message: message
                  key: key
                - address: address
                  lockTime: 2
                  hint: 3
                  attoAlphAmount: attoAlphAmount
                  tokens:
                  - amount: amount
                    id: id
                  - amount: amount
                    id: id
                  message: message
                  key: key
                version: 5
                scriptOpt: scriptOpt
                gasPrice: gasPrice
              generatedOutputs:
              - null
              - null
              scriptExecutionOk: true
            - contractInputs:
              - hint: 9
                key: key
              - hint: 9
                key: key
              inputSignatures:
              - inputSignatures
              - inputSignatures
              scriptSignatures:
              - scriptSignatures
              - scriptSignatures
              unsigned:
                inputs:
                - unlockScript: unlockScript
                  outputRef:
                    hint: 9
                    key: key
                - unlockScript: unlockScript
                  outputRef:
                    hint: 9
                    key: key
                gasAmount: 7
                txId: txId
                networkId: 2
                fixedOutputs:
                - address: address
                  lockTime: 2
                  hint: 3
                  attoAlphAmount: attoAlphAmount
                  tokens:
                  - amount: amount
                    id: id
                  - amount: amount
                    id: id
                  message: message
                  key: key
                - address: address
                  lockTime: 2
                  hint: 3
                  attoAlphAmount: attoAlphAmount
                  tokens:
                  - amount: amount
                    id: id
                  - amount: amount
                    id: id
                  message: message
                  key: key
                version: 5
                scriptOpt: scriptOpt
                gasPrice: gasPrice
              generatedOutputs:
              - null
              - null
              scriptExecutionOk: true
            nonce: nonce
            version: 4
            hash: hash
            timestamp: 0
            height: 5
            target: target
      properties:
        blocks:
          items:
            items:
              $ref: '#/components/schemas/BlockEntry'
            type: array
          type: array
      required:
      - blocks
      type: object
    FieldsSig:
      example:
        types:
        - types
        - types
        names:
        - names
        - names
        signature: signature
      properties:
        signature:
          type: string
        names:
          items:
            type: string
          type: array
        types:
          items:
            type: string
          type: array
      required:
      - names
      - signature
      - types
      type: object
    FixedAssetOutput:
      example:
        address: address
        lockTime: 2
        hint: 3
        attoAlphAmount: attoAlphAmount
        tokens:
        - amount: amount
          id: id
        - amount: amount
          id: id
        message: message
        key: key
      properties:
        hint:
          format: int32
          type: integer
        key:
          format: 32-byte-hash
          type: string
        attoAlphAmount:
          format: uint256
          type: string
        address:
          format: address
          type: string
        tokens:
          items:
            $ref: '#/components/schemas/Token'
          type: array
        lockTime:
          format: int64
          type: integer
        message:
          format: hex-string
          type: string
      required:
      - address
      - attoAlphAmount
      - hint
      - key
      - lockTime
      - message
      - tokens
      type: object
    FunctionSig:
      example:
        argTypes:
        - argTypes
        - argTypes
        signature: signature
        argNames:
        - argNames
        - argNames
        name: name
        returnTypes:
        - returnTypes
        - returnTypes
      properties:
        name:
          type: string
        signature:
          type: string
        argNames:
          items:
            type: string
          type: array
        argTypes:
          items:
            type: string
          type: array
        returnTypes:
          items:
            type: string
          type: array
      required:
      - argNames
      - argTypes
      - name
      - returnTypes
      - signature
      type: object
    Group:
      example:
        group: 0
      properties:
        group:
          format: int32
          type: integer
      required:
      - group
      type: object
    HashesAtHeight:
      example:
        headers:
        - headers
        - headers
      properties:
        headers:
          items:
            format: block-hash
            type: string
          type: array
      required:
      - headers
      type: object
    InterCliquePeerInfo:
      example:
        brokerId: 0
        isSynced: true
        address:
          port: 0
          addr: addr
        groupNumPerBroker: 6
        clientVersion: clientVersion
        cliqueId: cliqueId
      properties:
        cliqueId:
          format: clique-id
          type: string
        brokerId:
          format: int32
          type: integer
        groupNumPerBroker:
          format: int32
          type: integer
        address:
          $ref: '#/components/schemas/BrokerInfo_address'
        isSynced:
          type: boolean
        clientVersion:
          type: string
      required:
      - address
      - brokerId
      - clientVersion
      - cliqueId
      - groupNumPerBroker
      - isSynced
      type: object
    InternalServerError:
      properties:
        detail:
          type: string
      required:
      - detail
      type: object
    MemPooled:
      properties:
        type:
          type: string
      required:
      - type
      type: object
    MinerAddresses:
      example:
        addresses:
        - addresses
        - addresses
      properties:
        addresses:
          items:
            format: address
            type: string
          type: array
      required:
      - addresses
      type: object
    MinerAddressesInfo:
      example:
        addresses:
        - path: path
          address: address
          publicKey: publicKey
          group: 0
        - path: path
          address: address
          publicKey: publicKey
          group: 0
      properties:
        addresses:
          items:
            $ref: '#/components/schemas/AddressInfo'
          type: array
      required:
      - addresses
      type: object
    MisbehaviorAction:
      discriminator:
        mapping:
          Ban: '#/components/schemas/Ban'
          Unban: '#/components/schemas/Unban'
        propertyName: type
      oneOf:
      - $ref: '#/components/schemas/Ban'
      - $ref: '#/components/schemas/Unban'
    NodeInfo:
      example:
        buildInfo:
          releaseVersion: releaseVersion
          commit: commit
        externalAddress:
          port: 0
          addr: addr
        upnp: true
      properties:
        buildInfo:
          $ref: '#/components/schemas/BuildInfo'
        upnp:
          type: boolean
        externalAddress:
          $ref: '#/components/schemas/BrokerInfo_address'
      required:
      - buildInfo
      - upnp
      type: object
    NodeVersion:
      example:
        version:
          patch: 1
          major: 0
          minor: 6
      properties:
        version:
          $ref: '#/components/schemas/ReleaseVersion'
      required:
      - version
      type: object
    NotFound:
      properties:
        detail:
          type: string
        resource:
          type: string
      required:
      - detail
      - resource
      type: object
    Output:
      discriminator:
        mapping:
          AssetOutput: '#/components/schemas/AssetOutput'
          ContractOutput: '#/components/schemas/ContractOutput'
        propertyName: type
      oneOf:
      - $ref: '#/components/schemas/AssetOutput'
      - $ref: '#/components/schemas/ContractOutput'
    OutputRef:
      example:
        hint: 9
        key: key
      properties:
        hint:
          format: int32
          type: integer
        key:
          format: 32-byte-hash
          type: string
      required:
      - hint
      - key
      type: object
    PeerAddress:
      example:
        address: address
        restPort: 0
        wsPort: 6
        minerApiPort: 1
      properties:
        address:
          format: inet-address
          type: string
        restPort:
          format: int32
          type: integer
        wsPort:
          format: int32
          type: integer
        minerApiPort:
          format: int32
          type: integer
      required:
      - address
      - minerApiPort
      - restPort
      - wsPort
      type: object
    PeerMisbehavior:
      example:
        peer: peer
        status: null
      properties:
        peer:
          format: inet-address
          type: string
        status:
          $ref: '#/components/schemas/PeerStatus'
      required:
      - peer
      - status
      type: object
    PeerStatus:
      discriminator:
        mapping:
          Banned: '#/components/schemas/Banned'
          Penalty: '#/components/schemas/Penalty'
        propertyName: type
      oneOf:
      - $ref: '#/components/schemas/Banned'
      - $ref: '#/components/schemas/Penalty'
    Penalty:
      properties:
        value:
          format: int32
          type: integer
        type:
          type: string
      required:
      - type
      - value
      type: object
    Reachable:
      properties:
        peers:
          items:
            format: inet-address
            type: string
          type: array
        type:
          type: string
      required:
      - peers
      - type
      type: object
    ReleaseVersion:
      example:
        patch: 1
        major: 0
        minor: 6
      properties:
        major:
          format: int32
          type: integer
        minor:
          format: int32
          type: integer
        patch:
          format: int32
          type: integer
      required:
      - major
      - minor
      - patch
      type: object
    RevealMnemonic:
      example:
        password: password
      properties:
        password:
          type: string
      required:
      - password
      type: object
    RevealMnemonicResult:
      example:
        mnemonic: mnemonic
      properties:
        mnemonic:
          type: string
      required:
      - mnemonic
      type: object
    Script:
      example:
        code: code
      properties:
        code:
          type: string
      required:
      - code
      type: object
    SelfClique:
      example:
        selfReady: true
        nodes:
        - address: address
          restPort: 0
          wsPort: 6
          minerApiPort: 1
        - address: address
          restPort: 0
          wsPort: 6
          minerApiPort: 1
        synced: true
        cliqueId: cliqueId
      properties:
        cliqueId:
          format: clique-id
          type: string
        nodes:
          items:
            $ref: '#/components/schemas/PeerAddress'
          type: array
        selfReady:
          type: boolean
        synced:
          type: boolean
      required:
      - cliqueId
      - nodes
      - selfReady
      - synced
      type: object
    ServiceUnavailable:
      properties:
        detail:
          type: string
      required:
      - detail
      type: object
    Sign:
      example:
        data: data
      properties:
        data:
          type: string
      required:
      - data
      type: object
    SignResult:
      example:
        signature: signature
      properties:
        signature:
          format: signature
          type: string
      required:
      - signature
      type: object
    SubmitMultisig:
      example:
        unsignedTx: unsignedTx
        signatures:
        - signatures
        - signatures
      properties:
        unsignedTx:
          type: string
        signatures:
          items:
            format: signature
            type: string
          type: array
      required:
      - signatures
      - unsignedTx
      type: object
    SubmitTransaction:
      example:
        signature: signature
        unsignedTx: unsignedTx
      properties:
        unsignedTx:
          type: string
        signature:
          format: signature
          type: string
      required:
      - signature
      - unsignedTx
      type: object
    SubmitTxResult:
      example:
        txId: txId
        fromGroup: 0
        toGroup: 6
      properties:
        txId:
          format: 32-byte-hash
          type: string
        fromGroup:
          format: int32
          type: integer
        toGroup:
          format: int32
          type: integer
      required:
      - fromGroup
      - toGroup
      - txId
      type: object
    Sweep:
      example:
        lockTime: 0
        gasAmount: 6
        toAddress: toAddress
        gasPrice: gasPrice
        utxosLimit: 1
      properties:
        toAddress:
          format: address
          type: string
        lockTime:
          format: int64
          type: integer
        gasAmount:
          format: gas
          type: integer
        gasPrice:
          format: uint256
          type: string
        utxosLimit:
          format: int32
          type: integer
      required:
      - toAddress
      type: object
    SweepAddressTransaction:
      example:
        unsignedTx: unsignedTx
        gasAmount: 0
        txId: txId
        gasPrice: gasPrice
      properties:
        txId:
          format: 32-byte-hash
          type: string
        unsignedTx:
          type: string
        gasAmount:
          format: gas
          type: integer
        gasPrice:
          format: uint256
          type: string
      required:
      - gasAmount
      - gasPrice
      - txId
      - unsignedTx
      type: object
    TestContract:
      example:
        bytecode: bytecode
        args:
        - null
        - null
        blockHash: blockHash
        address: address
        inputAssets:
        - address: address
          asset:
            attoAlphAmount: attoAlphAmount
            tokens:
            - amount: amount
              id: id
            - amount: amount
              id: id
        - address: address
          asset:
            attoAlphAmount: attoAlphAmount
            tokens:
            - amount: amount
              id: id
            - amount: amount
              id: id
        methodIndex: 6
        existingContracts:
        - bytecode: bytecode
          initialStateHash: initialStateHash
          address: address
          codeHash: codeHash
          fields:
          - null
          - null
          asset:
            attoAlphAmount: attoAlphAmount
            tokens:
            - amount: amount
              id: id
            - amount: amount
              id: id
        - bytecode: bytecode
          initialStateHash: initialStateHash
          address: address
          codeHash: codeHash
          fields:
          - null
          - null
          asset:
            attoAlphAmount: attoAlphAmount
            tokens:
            - amount: amount
              id: id
            - amount: amount
              id: id
        txId: txId
        initialFields:
        - null
        - null
        initialAsset:
          attoAlphAmount: attoAlphAmount
          tokens:
          - amount: amount
            id: id
          - amount: amount
            id: id
        group: 0
      properties:
        group:
          format: int32
          type: integer
        blockHash:
          format: block-hash
          type: string
        txId:
          format: 32-byte-hash
          type: string
        address:
          format: address
          type: string
        bytecode:
          format: contract
          type: string
        initialFields:
          items:
            $ref: '#/components/schemas/Val'
          type: array
        initialAsset:
          $ref: '#/components/schemas/AssetState'
        methodIndex:
          format: int32
          type: integer
        args:
          items:
            $ref: '#/components/schemas/Val'
          type: array
        existingContracts:
          items:
            $ref: '#/components/schemas/ContractState'
          type: array
        inputAssets:
          items:
            $ref: '#/components/schemas/TestInputAsset'
          type: array
      required:
      - bytecode
      type: object
    TestContractResult:
      example:
        gasUsed: 0
        address: address
        codeHash: codeHash
        txInputs:
        - txInputs
        - txInputs
        txOutputs:
        - null
        - null
        returns:
        - null
        - null
        contracts:
        - bytecode: bytecode
          initialStateHash: initialStateHash
          address: address
          codeHash: codeHash
          fields:
          - null
          - null
          asset:
            attoAlphAmount: attoAlphAmount
            tokens:
            - amount: amount
              id: id
            - amount: amount
              id: id
        - bytecode: bytecode
          initialStateHash: initialStateHash
          address: address
          codeHash: codeHash
          fields:
          - null
          - null
          asset:
            attoAlphAmount: attoAlphAmount
            tokens:
            - amount: amount
              id: id
            - amount: amount
              id: id
        events:
        - blockHash: blockHash
          contractAddress: contractAddress
          eventIndex: 6
          fields:
          - null
          - null
        - blockHash: blockHash
          contractAddress: contractAddress
          eventIndex: 6
          fields:
          - null
          - null
      properties:
        address:
          format: address
          type: string
        codeHash:
          format: 32-byte-hash
          type: string
        returns:
          items:
            $ref: '#/components/schemas/Val'
          type: array
        gasUsed:
          format: int32
          type: integer
        contracts:
          items:
            $ref: '#/components/schemas/ContractState'
          type: array
        txInputs:
          items:
            format: address
            type: string
          type: array
        txOutputs:
          items:
            $ref: '#/components/schemas/Output'
          type: array
        events:
          items:
            $ref: '#/components/schemas/ContractEventByTxId'
          type: array
      required:
      - address
      - codeHash
      - contracts
      - events
      - gasUsed
      - returns
      - txInputs
      - txOutputs
      type: object
    TestInputAsset:
      example:
        address: address
        asset:
          attoAlphAmount: attoAlphAmount
          tokens:
          - amount: amount
            id: id
          - amount: amount
            id: id
      properties:
        address:
          format: address
          type: string
        asset:
          $ref: '#/components/schemas/AssetState'
      required:
      - address
      - asset
      type: object
    Token:
      example:
        amount: amount
        id: id
      properties:
        id:
          format: 32-byte-hash
          type: string
        amount:
          format: uint256
          type: string
      required:
      - amount
      - id
      type: object
    Transaction:
      example:
        contractInputs:
        - hint: 9
          key: key
        - hint: 9
          key: key
        inputSignatures:
        - inputSignatures
        - inputSignatures
        scriptSignatures:
        - scriptSignatures
        - scriptSignatures
        unsigned:
          inputs:
          - unlockScript: unlockScript
            outputRef:
              hint: 9
              key: key
          - unlockScript: unlockScript
            outputRef:
              hint: 9
              key: key
          gasAmount: 7
          txId: txId
          networkId: 2
          fixedOutputs:
          - address: address
            lockTime: 2
            hint: 3
            attoAlphAmount: attoAlphAmount
            tokens:
            - amount: amount
              id: id
            - amount: amount
              id: id
            message: message
            key: key
          - address: address
            lockTime: 2
            hint: 3
            attoAlphAmount: attoAlphAmount
            tokens:
            - amount: amount
              id: id
            - amount: amount
              id: id
            message: message
            key: key
          version: 5
          scriptOpt: scriptOpt
          gasPrice: gasPrice
        generatedOutputs:
        - null
        - null
        scriptExecutionOk: true
      properties:
        unsigned:
          $ref: '#/components/schemas/UnsignedTx'
        scriptExecutionOk:
          type: boolean
        contractInputs:
          items:
            $ref: '#/components/schemas/OutputRef'
          type: array
        generatedOutputs:
          items:
            $ref: '#/components/schemas/Output'
          type: array
        inputSignatures:
          items:
            format: hex-string
            type: string
          type: array
        scriptSignatures:
          items:
            format: hex-string
            type: string
          type: array
      required:
      - contractInputs
      - generatedOutputs
      - inputSignatures
      - scriptExecutionOk
      - scriptSignatures
      - unsigned
      type: object
    TransactionTemplate:
      example:
        inputSignatures:
        - inputSignatures
        - inputSignatures
        scriptSignatures:
        - scriptSignatures
        - scriptSignatures
        unsigned:
          inputs:
          - unlockScript: unlockScript
            outputRef:
              hint: 9
              key: key
          - unlockScript: unlockScript
            outputRef:
              hint: 9
              key: key
          gasAmount: 7
          txId: txId
          networkId: 2
          fixedOutputs:
          - address: address
            lockTime: 2
            hint: 3
            attoAlphAmount: attoAlphAmount
            tokens:
            - amount: amount
              id: id
            - amount: amount
              id: id
            message: message
            key: key
          - address: address
            lockTime: 2
            hint: 3
            attoAlphAmount: attoAlphAmount
            tokens:
            - amount: amount
              id: id
            - amount: amount
              id: id
            message: message
            key: key
          version: 5
          scriptOpt: scriptOpt
          gasPrice: gasPrice
      properties:
        unsigned:
          $ref: '#/components/schemas/UnsignedTx'
        inputSignatures:
          items:
            format: hex-string
            type: string
          type: array
        scriptSignatures:
          items:
            format: hex-string
            type: string
          type: array
      required:
      - inputSignatures
      - scriptSignatures
      - unsigned
      type: object
    Transfer:
      example:
        destinations:
        - address: address
          lockTime: 0
          attoAlphAmount: attoAlphAmount
          tokens:
          - amount: amount
            id: id
          - amount: amount
            id: id
          message: message
        - address: address
          lockTime: 0
          attoAlphAmount: attoAlphAmount
          tokens:
          - amount: amount
            id: id
          - amount: amount
            id: id
          message: message
        gas: 6
        gasPrice: gasPrice
        utxosLimit: 1
      properties:
        destinations:
          items:
            $ref: '#/components/schemas/Destination'
          type: array
        gas:
          format: gas
          type: integer
        gasPrice:
          format: uint256
          type: string
        utxosLimit:
          format: int32
          type: integer
      required:
      - destinations
      type: object
    TransferResult:
      example:
        txId: txId
        fromGroup: 0
        toGroup: 6
      properties:
        txId:
          format: 32-byte-hash
          type: string
        fromGroup:
          format: group-index
          type: integer
        toGroup:
          format: group-index
          type: integer
      required:
      - fromGroup
      - toGroup
      - txId
      type: object
    TransferResults:
      example:
        results:
        - txId: txId
          fromGroup: 0
          toGroup: 6
        - txId: txId
          fromGroup: 0
          toGroup: 6
      properties:
        results:
          items:
            $ref: '#/components/schemas/TransferResult'
          type: array
      required:
      - results
      type: object
    TxNotFound:
      properties:
        type:
          type: string
      required:
      - type
      type: object
    TxStatus:
      discriminator:
        mapping:
          Confirmed: '#/components/schemas/Confirmed'
          MemPooled: '#/components/schemas/MemPooled'
          TxNotFound: '#/components/schemas/TxNotFound'
        propertyName: type
      oneOf:
      - $ref: '#/components/schemas/Confirmed'
      - $ref: '#/components/schemas/MemPooled'
      - $ref: '#/components/schemas/TxNotFound'
    UTXO:
      example:
        ref:
          hint: 9
          key: key
        amount: amount
        lockTime: 0
        tokens:
        - amount: amount
          id: id
        - amount: amount
          id: id
        additionalData: additionalData
      properties:
        ref:
          $ref: '#/components/schemas/OutputRef'
        amount:
          format: uint256
          type: string
        tokens:
          items:
            $ref: '#/components/schemas/Token'
          type: array
        lockTime:
          format: int64
          type: integer
        additionalData:
          format: hex-string
          type: string
      required:
      - additionalData
      - amount
      - lockTime
      - ref
      - tokens
      type: object
    UTXOs:
      example:
        warning: warning
        utxos:
        - ref:
            hint: 9
            key: key
          amount: amount
          lockTime: 0
          tokens:
          - amount: amount
            id: id
          - amount: amount
            id: id
          additionalData: additionalData
        - ref:
            hint: 9
            key: key
          amount: amount
          lockTime: 0
          tokens:
          - amount: amount
            id: id
          - amount: amount
            id: id
          additionalData: additionalData
      properties:
        utxos:
          items:
            $ref: '#/components/schemas/UTXO'
          type: array
        warning:
          type: string
      required:
      - utxos
      type: object
    Unauthorized:
      properties:
        detail:
          type: string
      required:
      - detail
      type: object
    Unban:
      properties:
        peers:
          items:
            format: inet-address
            type: string
          type: array
        type:
          type: string
      required:
      - peers
      - type
      type: object
    UnconfirmedTransactions:
      example:
        unconfirmedTransactions:
        - inputSignatures:
          - inputSignatures
          - inputSignatures
          scriptSignatures:
          - scriptSignatures
          - scriptSignatures
          unsigned:
            inputs:
            - unlockScript: unlockScript
              outputRef:
                hint: 9
                key: key
            - unlockScript: unlockScript
              outputRef:
                hint: 9
                key: key
            gasAmount: 7
            txId: txId
            networkId: 2
            fixedOutputs:
            - address: address
              lockTime: 2
              hint: 3
              attoAlphAmount: attoAlphAmount
              tokens:
              - amount: amount
                id: id
              - amount: amount
                id: id
              message: message
              key: key
            - address: address
              lockTime: 2
              hint: 3
              attoAlphAmount: attoAlphAmount
              tokens:
              - amount: amount
                id: id
              - amount: amount
                id: id
              message: message
              key: key
            version: 5
            scriptOpt: scriptOpt
            gasPrice: gasPrice
        - inputSignatures:
          - inputSignatures
          - inputSignatures
          scriptSignatures:
          - scriptSignatures
          - scriptSignatures
          unsigned:
            inputs:
            - unlockScript: unlockScript
              outputRef:
                hint: 9
                key: key
            - unlockScript: unlockScript
              outputRef:
                hint: 9
                key: key
            gasAmount: 7
            txId: txId
            networkId: 2
            fixedOutputs:
            - address: address
              lockTime: 2
              hint: 3
              attoAlphAmount: attoAlphAmount
              tokens:
              - amount: amount
                id: id
              - amount: amount
                id: id
              message: message
              key: key
            - address: address
              lockTime: 2
              hint: 3
              attoAlphAmount: attoAlphAmount
              tokens:
              - amount: amount
                id: id
              - amount: amount
                id: id
              message: message
              key: key
            version: 5
            scriptOpt: scriptOpt
            gasPrice: gasPrice
        fromGroup: 0
        toGroup: 6
      properties:
        fromGroup:
          format: int32
          type: integer
        toGroup:
          format: int32
          type: integer
        unconfirmedTransactions:
          items:
            $ref: '#/components/schemas/TransactionTemplate'
          type: array
      required:
      - fromGroup
      - toGroup
      - unconfirmedTransactions
      type: object
    Unreachable:
      properties:
        peers:
          items:
            format: inet-address
            type: string
          type: array
        type:
          type: string
      required:
      - peers
      - type
      type: object
    UnsignedTx:
      example:
        inputs:
        - unlockScript: unlockScript
          outputRef:
            hint: 9
            key: key
        - unlockScript: unlockScript
          outputRef:
            hint: 9
            key: key
        gasAmount: 7
        txId: txId
        networkId: 2
        fixedOutputs:
        - address: address
          lockTime: 2
          hint: 3
          attoAlphAmount: attoAlphAmount
          tokens:
          - amount: amount
            id: id
          - amount: amount
            id: id
          message: message
          key: key
        - address: address
          lockTime: 2
          hint: 3
          attoAlphAmount: attoAlphAmount
          tokens:
          - amount: amount
            id: id
          - amount: amount
            id: id
          message: message
          key: key
        version: 5
        scriptOpt: scriptOpt
        gasPrice: gasPrice
      properties:
        txId:
          format: 32-byte-hash
          type: string
        version:
          type: integer
        networkId:
          type: integer
        scriptOpt:
          format: script
          type: string
        gasAmount:
          format: int32
          type: integer
        gasPrice:
          format: uint256
          type: string
        inputs:
          items:
            $ref: '#/components/schemas/AssetInput'
          type: array
        fixedOutputs:
          items:
            $ref: '#/components/schemas/FixedAssetOutput'
          type: array
      required:
      - fixedOutputs
      - gasAmount
      - gasPrice
      - inputs
      - networkId
      - txId
      - version
      type: object
    Val:
      discriminator:
        mapping:
          ValArray: '#/components/schemas/ValArray'
          ValI256: '#/components/schemas/ValI256'
          ValAddress: '#/components/schemas/ValAddress'
          ValByteVec: '#/components/schemas/ValByteVec'
          ValU256: '#/components/schemas/ValU256'
          ValBool: '#/components/schemas/ValBool'
        propertyName: type
      oneOf:
      - $ref: '#/components/schemas/ValAddress'
      - $ref: '#/components/schemas/ValArray'
      - $ref: '#/components/schemas/ValBool'
      - $ref: '#/components/schemas/ValByteVec'
      - $ref: '#/components/schemas/ValI256'
      - $ref: '#/components/schemas/ValU256'
    ValAddress:
      properties:
        value:
          format: address
          type: string
        type:
          type: string
      required:
      - type
      - value
      type: object
    ValArray:
      properties:
        value:
          items:
            $ref: '#/components/schemas/Val'
          type: array
        type:
          type: string
      required:
      - type
      - value
      type: object
    ValBool:
      properties:
        value:
          type: boolean
        type:
          type: string
      required:
      - type
      - value
      type: object
    ValByteVec:
      properties:
        value:
          format: hex-string
          type: string
        type:
          type: string
      required:
      - type
      - value
      type: object
    ValI256:
      properties:
        value:
          format: bigint
          type: string
        type:
          type: string
      required:
      - type
      - value
      type: object
    ValU256:
      properties:
        value:
          format: uint256
          type: string
        type:
          type: string
      required:
      - type
      - value
      type: object
    VerifySignature:
      example:
        data: data
        signature: signature
        publicKey: publicKey
      properties:
        data:
          format: hex-string
          type: string
        signature:
          format: signature
          type: string
        publicKey:
          format: public-key
          type: string
      required:
      - data
      - publicKey
      - signature
      type: object
    WalletCreation:
      example:
        password: password
        walletName: walletName
        mnemonicPassphrase: mnemonicPassphrase
        isMiner: true
        mnemonicSize: 0
      properties:
        password:
          type: string
        walletName:
          type: string
        isMiner:
          type: boolean
        mnemonicPassphrase:
          type: string
        mnemonicSize:
          type: integer
      required:
      - password
      - walletName
      type: object
    WalletCreationResult:
      example:
        walletName: walletName
        mnemonic: mnemonic
      properties:
        walletName:
          type: string
        mnemonic:
          type: string
      required:
      - mnemonic
      - walletName
      type: object
    WalletDeletion:
      example:
        password: password
      properties:
        password:
          type: string
      required:
      - password
      type: object
    WalletRestore:
      example:
        password: password
        walletName: walletName
        mnemonicPassphrase: mnemonicPassphrase
        mnemonic: mnemonic
        isMiner: true
      properties:
        password:
          type: string
        mnemonic:
          type: string
        walletName:
          type: string
        isMiner:
          type: boolean
        mnemonicPassphrase:
          type: string
      required:
      - mnemonic
      - password
      - walletName
      type: object
    WalletRestoreResult:
      example:
        walletName: walletName
      properties:
        walletName:
          type: string
      required:
      - walletName
      type: object
    WalletStatus:
      example:
        walletName: walletName
        locked: true
      properties:
        walletName:
          type: string
        locked:
          type: boolean
      required:
      - locked
      - walletName
      type: object
    WalletUnlock:
      example:
        password: password
        mnemonicPassphrase: mnemonicPassphrase
      properties:
        password:
          type: string
        mnemonicPassphrase:
          type: string
      required:
      - password
      type: object
    BrokerInfo_address:
      example:
        port: 0
        addr: addr
      format: inet-socket-address
      properties:
        addr:
          type: string
        port:
          format: int32
          type: integer
      required:
      - addr
      - port
      type: object
